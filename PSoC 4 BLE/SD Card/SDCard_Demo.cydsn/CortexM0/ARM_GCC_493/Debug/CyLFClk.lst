ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.bss
  18              		.align	2
  19              	lfclkPosedgeWdtCounter0Enabled:
  20 0000 00000000 		.space	4
  21              		.align	2
  22              	lfclkPosedgeWdtCounter0Mode:
  23 0004 00000000 		.space	4
  24              		.align	2
  25              	disableServicedIsr:
  26 0008 00000000 		.space	4
  27              		.data
  28              		.align	2
  29              		.type	wdtIsrMask, %object
  30              		.size	wdtIsrMask, 4
  31              	wdtIsrMask:
  32 0000 04040400 		.word	263172
  33              		.section	.rodata
  34              		.align	2
  35              		.type	counterIntMaskTbl, %object
  36              		.size	counterIntMaskTbl, 12
  37              	counterIntMaskTbl:
  38 0000 04000000 		.word	4
  39 0004 00040000 		.word	1024
  40 0008 00000400 		.word	262144
  41              		.bss
  42              		.align	2
  43              	cySysWdtCallback:
  44 000c 00000000 		.space	12
  44      00000000 
  44      00000000 
  45              		.section	.text.CySysClkIloStart,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkIloStart
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkIloStart, %function
  51              	CySysClkIloStart:
  52              	.LFB0:
  53              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 2


   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 3


  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  54              		.loc 1 84 0
  55              		.cfi_startproc
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  62              		.loc 1 85 0
  63 0004 044B     		ldr	r3, .L2
  64 0006 044A     		ldr	r2, .L2
  65 0008 1268     		ldr	r2, [r2]
  66 000a 8021     		mov	r1, #128
  67 000c 0906     		lsl	r1, r1, #24
  68 000e 0A43     		orr	r2, r1
  69 0010 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  70              		.loc 1 86 0
  71 0012 BD46     		mov	sp, r7
  72              		@ sp needed
  73 0014 80BD     		pop	{r7, pc}
  74              	.L3:
  75 0016 C046     		.align	2
  76              	.L2:
  77 0018 04010B40 		.word	1074462980
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	CySysClkIloStart, .-CySysClkIloStart
  81              		.section	.text.CySysClkIloStop,"ax",%progbits
  82              		.align	2
  83              		.global	CySysClkIloStop
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 4


  84              		.code	16
  85              		.thumb_func
  86              		.type	CySysClkIloStop, %function
  87              	CySysClkIloStop:
  88              	.LFB1:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
  89              		.loc 1 109 0
  90              		.cfi_startproc
  91 0000 90B5     		push	{r4, r7, lr}
  92              		.cfi_def_cfa_offset 12
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 83B0     		sub	sp, sp, #12
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 100              		.loc 1 114 0
 101 0006 FFF7FEFF 		bl	CySysWdtLocked
 102 000a 031E     		sub	r3, r0, #0
 103 000c 17D1     		bne	.L4
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 104              		.loc 1 116 0
 105 000e FFF7FEFF 		bl	CySysClkIloEnabled
 106 0012 031E     		sub	r3, r0, #0
 107 0014 13D0     		beq	.L4
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 5


 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 108              		.loc 1 124 0
 109 0016 FC1D     		add	r4, r7, #7
 110 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 111 001c 031C     		mov	r3, r0
 112 001e 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 113              		.loc 1 125 0
 114 0020 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 115              		.loc 1 126 0
 116 0024 074B     		ldr	r3, .L6
 117 0026 074A     		ldr	r2, .L6
 118 0028 1268     		ldr	r2, [r2]
 119 002a 5200     		lsl	r2, r2, #1
 120 002c 5208     		lsr	r2, r2, #1
 121 002e 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 122              		.loc 1 127 0
 123 0030 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 124              		.loc 1 128 0
 125 0034 FB1D     		add	r3, r7, #7
 126 0036 1B78     		ldrb	r3, [r3]
 127 0038 181C     		mov	r0, r3
 128 003a FFF7FEFF 		bl	CyExitCriticalSection
 129              	.L4:
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 130              		.loc 1 143 0
 131 003e BD46     		mov	sp, r7
 132 0040 03B0     		add	sp, sp, #12
 133              		@ sp needed
 134 0042 90BD     		pop	{r4, r7, pc}
 135              	.L7:
 136              		.align	2
 137              	.L6:
 138 0044 04010B40 		.word	1074462980
 139              		.cfi_endproc
 140              	.LFE1:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 6


 141              		.size	CySysClkIloStop, .-CySysClkIloStop
 142              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 143              		.align	2
 144              		.global	CySysClkIloStartMeasurement
 145              		.code	16
 146              		.thumb_func
 147              		.type	CySysClkIloStartMeasurement, %function
 148              	CySysClkIloStartMeasurement:
 149              	.LFB2:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 150              		.loc 1 169 0
 151              		.cfi_startproc
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 158              		.loc 1 182 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 7


 159 0004 094B     		ldr	r3, .L9
 160 0006 094A     		ldr	r2, .L9
 161 0008 1268     		ldr	r2, [r2]
 162 000a 0949     		ldr	r1, .L9+4
 163 000c 0A40     		and	r2, r1
 164 000e 8021     		mov	r1, #128
 165 0010 4900     		lsl	r1, r1, #1
 166 0012 0A43     		orr	r2, r1
 167 0014 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 168              		.loc 1 185 0
 169 0016 074B     		ldr	r3, .L9+8
 170 0018 064A     		ldr	r2, .L9+8
 171 001a 1268     		ldr	r2, [r2]
 172 001c 0649     		ldr	r1, .L9+12
 173 001e 0A40     		and	r2, r1
 174 0020 0649     		ldr	r1, .L9+16
 175 0022 0A43     		orr	r2, r1
 176 0024 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 177              		.loc 1 187 0
 178 0026 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0028 80BD     		pop	{r7, pc}
 181              	.L10:
 182 002a C046     		.align	2
 183              	.L9:
 184 002c 10010B40 		.word	1074462992
 185 0030 FFF0FFFF 		.word	-3841
 186 0034 08000340 		.word	1073938440
 187 0038 C0C0FFFF 		.word	-16192
 188 003c 01020000 		.word	513
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 192              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 193              		.align	2
 194              		.global	CySysClkIloStopMeasurement
 195              		.code	16
 196              		.thumb_func
 197              		.type	CySysClkIloStopMeasurement, %function
 198              	CySysClkIloStopMeasurement:
 199              	.LFB3:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 8


 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 200              		.loc 1 202 0
 201              		.cfi_startproc
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 208              		.loc 1 204 0
 209 0004 034B     		ldr	r3, .L12
 210 0006 034A     		ldr	r2, .L12
 211 0008 1268     		ldr	r2, [r2]
 212 000a 0349     		ldr	r1, .L12+4
 213 000c 0A40     		and	r2, r1
 214 000e 1A60     		str	r2, [r3]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 215              		.loc 1 208 0
 216 0010 BD46     		mov	sp, r7
 217              		@ sp needed
 218 0012 80BD     		pop	{r7, pc}
 219              	.L13:
 220              		.align	2
 221              	.L12:
 222 0014 10010B40 		.word	1074462992
 223 0018 FFF0FFFF 		.word	-3841
 224              		.cfi_endproc
 225              	.LFE3:
 226              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 227              		.global	__aeabi_uidiv
 228              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 229              		.align	2
 230              		.global	CySysClkIloCompensate
 231              		.code	16
 232              		.thumb_func
 233              		.type	CySysClkIloCompensate, %function
 234              	CySysClkIloCompensate:
 235              	.LFB4:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 9


 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 236              		.loc 1 268 0
 237              		.cfi_startproc
 238 0000 90B5     		push	{r4, r7, lr}
 239              		.cfi_def_cfa_offset 12
 240              		.cfi_offset 4, -12
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 10


 244              		.cfi_def_cfa_offset 40
 245 0004 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247 0006 7860     		str	r0, [r7, #4]
 248 0008 3960     		str	r1, [r7]
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 249              		.loc 1 275 0
 250 000a 484B     		ldr	r3, .L26
 251 000c 1B68     		ldr	r3, [r3]
 252 000e 484A     		ldr	r2, .L26+4
 253 0010 1340     		and	r3, r2
 254 0012 FB60     		str	r3, [r7, #12]
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 255              		.loc 1 278 0
 256 0014 FA68     		ldr	r2, [r7, #12]
 257 0016 8023     		mov	r3, #128
 258 0018 5B00     		lsl	r3, r3, #1
 259 001a 9A42     		cmp	r2, r3
 260 001c 00D0     		beq	.LCB186
 261 001e 7DE0     		b	.L15	@long jump
 262              	.LCB186:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 263              		.loc 1 279 0 discriminator 1
 264 0020 444B     		ldr	r3, .L26+8
 265 0022 1B68     		ldr	r3, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 266              		.loc 1 278 0 discriminator 1
 267 0024 444A     		ldr	r2, .L26+12
 268 0026 9342     		cmp	r3, r2
 269 0028 00D0     		beq	.LCB191
 270 002a 77E0     		b	.L15	@long jump
 271              	.LCB191:
 272              		.loc 1 279 0
 273 002c 7B68     		ldr	r3, [r7, #4]
 274 002e 434A     		ldr	r2, .L26+16
 275 0030 9342     		cmp	r3, r2
 276 0032 00D9     		bls	.LCB195
 277 0034 72E0     		b	.L15	@long jump
 278              	.LCB195:
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 279              		.loc 1 280 0
 280 0036 7B68     		ldr	r3, [r7, #4]
 281 0038 632B     		cmp	r3, #99
 282 003a 6FD9     		bls	.L15
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 283              		.loc 1 281 0
 284 003c 3B68     		ldr	r3, [r7]
 285 003e 002B     		cmp	r3, #0
 286 0040 6CD0     		beq	.L15
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 11


 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 287              		.loc 1 284 0
 288 0042 3F4B     		ldr	r3, .L26+20
 289 0044 1B68     		ldr	r3, [r3]
 290 0046 002B     		cmp	r3, #0
 291 0048 5CD0     		beq	.L16
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 292              		.loc 1 287 0
 293 004a 3E4B     		ldr	r3, .L26+24
 294 004c 1B68     		ldr	r3, [r3]
 295 004e 002B     		cmp	r3, #0
 296 0050 55DA     		bge	.L17
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 297              		.loc 1 289 0
 298 0052 3D4B     		ldr	r3, .L26+28
 299 0054 1B68     		ldr	r3, [r3]
 300 0056 002B     		cmp	r3, #0
 301 0058 4ED0     		beq	.L18
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 302              		.loc 1 293 0
 303 005a 7B68     		ldr	r3, [r7, #4]
 304 005c 3B4A     		ldr	r2, .L26+32
 305 005e 9342     		cmp	r3, r2
 306 0060 1ED9     		bls	.L19
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 307              		.loc 1 295 0
 308 0062 7B68     		ldr	r3, [r7, #4]
 309 0064 181C     		mov	r0, r3
 310 0066 1F21     		mov	r1, #31
 311 0068 FFF7FEFF 		bl	__aeabi_uidiv
 312 006c 031C     		mov	r3, r0
 313 006e BB60     		str	r3, [r7, #8]
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 314              		.loc 1 297 0
 315 0070 354B     		ldr	r3, .L26+28
 316 0072 1A68     		ldr	r2, [r3]
 317 0074 364B     		ldr	r3, .L26+36
 318 0076 1B68     		ldr	r3, [r3]
 319 0078 5A43     		mul	r2, r3
 320 007a 354B     		ldr	r3, .L26+36
 321 007c 1B68     		ldr	r3, [r3]
 322 007e 9B0A     		lsr	r3, r3, #10
 323 0080 101C     		mov	r0, r2
 324 0082 191C     		mov	r1, r3
 325 0084 FFF7FEFF 		bl	__aeabi_uidiv
 326 0088 031C     		mov	r3, r0
 327 008a 5C09     		lsr	r4, r3, #5
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 12


 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 328              		.loc 1 298 0
 329 008c BB68     		ldr	r3, [r7, #8]
 330 008e 181C     		mov	r0, r3
 331 0090 FA23     		mov	r3, #250
 332 0092 9900     		lsl	r1, r3, #2
 333 0094 FFF7FEFF 		bl	__aeabi_uidiv
 334 0098 031C     		mov	r3, r0
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 335              		.loc 1 296 0
 336 009a 6343     		mul	r3, r4
 337 009c 7B61     		str	r3, [r7, #20]
 338 009e 22E0     		b	.L20
 339              	.L19:
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 340              		.loc 1 302 0
 341 00a0 7B68     		ldr	r3, [r7, #4]
 342 00a2 6422     		mov	r2, #100
 343 00a4 5343     		mul	r3, r2
 344 00a6 2B4A     		ldr	r2, .L26+40
 345 00a8 9446     		mov	ip, r2
 346 00aa 6344     		add	r3, r3, ip
 347 00ac 181C     		mov	r0, r3
 348 00ae 2A49     		ldr	r1, .L26+44
 349 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 350 00b4 031C     		mov	r3, r0
 351 00b6 BB60     		str	r3, [r7, #8]
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 352              		.loc 1 305 0
 353 00b8 234B     		ldr	r3, .L26+28
 354 00ba 1A68     		ldr	r2, [r3]
 355 00bc 244B     		ldr	r3, .L26+36
 356 00be 1B68     		ldr	r3, [r3]
 357 00c0 5A43     		mul	r2, r3
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 358              		.loc 1 306 0
 359 00c2 234B     		ldr	r3, .L26+36
 360 00c4 1B68     		ldr	r3, [r3]
 361 00c6 9B0A     		lsr	r3, r3, #10
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 362              		.loc 1 305 0
 363 00c8 101C     		mov	r0, r2
 364 00ca 191C     		mov	r1, r3
 365 00cc FFF7FEFF 		bl	__aeabi_uidiv
 366 00d0 031C     		mov	r3, r0
 367 00d2 1A1C     		mov	r2, r3
 368              		.loc 1 306 0
 369 00d4 BB68     		ldr	r3, [r7, #8]
 370 00d6 5343     		mul	r3, r2
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 371              		.loc 1 305 0
 372 00d8 181C     		mov	r0, r3
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 13


 373 00da FA23     		mov	r3, #250
 374 00dc D901     		lsl	r1, r3, #7
 375 00de FFF7FEFF 		bl	__aeabi_uidiv
 376 00e2 031C     		mov	r3, r0
 377 00e4 7B61     		str	r3, [r7, #20]
 378              	.L20:
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 379              		.loc 1 326 0
 380 00e6 3B68     		ldr	r3, [r7]
 381 00e8 7A69     		ldr	r2, [r7, #20]
 382 00ea 1A60     		str	r2, [r3]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 383              		.loc 1 327 0
 384 00ec 144B     		ldr	r3, .L26+20
 385 00ee 0022     		mov	r2, #0
 386 00f0 1A60     		str	r2, [r3]
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 387              		.loc 1 328 0
 388 00f2 0023     		mov	r3, #0
 389 00f4 3B61     		str	r3, [r7, #16]
 390 00f6 10E0     		b	.L23
 391              	.L18:
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 392              		.loc 1 332 0
 393 00f8 1123     		mov	r3, #17
 394 00fa 3B61     		str	r3, [r7, #16]
 395 00fc 0DE0     		b	.L23
 396              	.L17:
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 397              		.loc 1 337 0
 398 00fe 0723     		mov	r3, #7
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 14


 399 0100 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 400              		.loc 1 284 0
 401 0102 0DE0     		b	.L24
 402              	.L16:
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 403              		.loc 1 343 0
 404 0104 0F4A     		ldr	r2, .L26+24
 405 0106 124B     		ldr	r3, .L26+36
 406 0108 1B68     		ldr	r3, [r3]
 407 010a 9B0A     		lsr	r3, r3, #10
 408 010c 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 409              		.loc 1 344 0
 410 010e 0C4B     		ldr	r3, .L26+20
 411 0110 0122     		mov	r2, #1
 412 0112 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 413              		.loc 1 345 0
 414 0114 0723     		mov	r3, #7
 415 0116 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 416              		.loc 1 284 0
 417 0118 02E0     		b	.L24
 418              	.L23:
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 419              		.loc 1 284 0 is_stmt 0 discriminator 2
 420 011a 01E0     		b	.L24
 421              	.L15:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 422              		.loc 1 350 0 is_stmt 1
 423 011c 1123     		mov	r3, #17
 424 011e 3B61     		str	r3, [r7, #16]
 425              	.L24:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 426              		.loc 1 353 0
 427 0120 3B69     		ldr	r3, [r7, #16]
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 428              		.loc 1 354 0
 429 0122 181C     		mov	r0, r3
 430 0124 BD46     		mov	sp, r7
 431 0126 07B0     		add	sp, sp, #28
 432              		@ sp needed
 433 0128 90BD     		pop	{r4, r7, pc}
 434              	.L27:
 435 012a C046     		.align	2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 15


 436              	.L26:
 437 012c 10010B40 		.word	1074462992
 438 0130 3F3F0000 		.word	16191
 439 0134 08000340 		.word	1073938440
 440 0138 01020000 		.word	513
 441 013c 00286BEE 		.word	-294967296
 442 0140 18000000 		.word	compensateRunningStatus.4714
 443 0144 18000340 		.word	1073938456
 444 0148 1C000340 		.word	1073938460
 445 014c 60D10000 		.word	53600
 446 0150 00000000 		.word	cydelayFreqHz
 447 0154 0D030000 		.word	781
 448 0158 350C0000 		.word	3125
 449              		.cfi_endproc
 450              	.LFE4:
 451              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 452              		.section	.text.CySysClkIloEnabled,"ax",%progbits
 453              		.align	2
 454              		.code	16
 455              		.thumb_func
 456              		.type	CySysClkIloEnabled, %function
 457              	CySysClkIloEnabled:
 458              	.LFB5:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 459              		.loc 1 371 0
 460              		.cfi_startproc
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 467              		.loc 1 373 0
 468 0004 044B     		ldr	r3, .L32
 469 0006 1B68     		ldr	r3, [r3]
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 470              		.loc 1 374 0
 471 0008 002B     		cmp	r3, #0
 472 000a 01DA     		bge	.L29
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 16


 473              		.loc 1 374 0 is_stmt 0 discriminator 1
 474 000c 0123     		mov	r3, #1
 475 000e 00E0     		b	.L30
 476              	.L29:
 477              		.loc 1 374 0 discriminator 2
 478 0010 0023     		mov	r3, #0
 479              	.L30:
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 480              		.loc 1 376 0 is_stmt 1
 481 0012 181C     		mov	r0, r3
 482 0014 BD46     		mov	sp, r7
 483              		@ sp needed
 484 0016 80BD     		pop	{r7, pc}
 485              	.L33:
 486              		.align	2
 487              	.L32:
 488 0018 04010B40 		.word	1074462980
 489              		.cfi_endproc
 490              	.LFE5:
 491              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
 492              		.section	.text.CySysWdtLock,"ax",%progbits
 493              		.align	2
 494              		.global	CySysWdtLock
 495              		.code	16
 496              		.thumb_func
 497              		.type	CySysWdtLock, %function
 498              	CySysWdtLock:
 499              	.LFB6:
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 17


 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 18


 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 19


 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 20


 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 21


 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c **** *
 673:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c **** *
 678:Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c **** *
 682:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c **** *
 684:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 22


 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c ****     
 693:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c **** *
 699:Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:Generated_Source\PSoC4/CyLFClk.c **** *
 704:Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c **** *
 709:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c **** *
 713:Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c **** *
 716:Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:Generated_Source\PSoC4/CyLFClk.c **** * source
 718:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c **** *
 722:Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c **** *
 726:Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c **** *
 729:Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c **** *
 733:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 23


 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 24


 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 25


 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 882:Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c **** *
 884:Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c **** *
 888:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c **** *
 896:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c **** *
 902:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c **** *
 911:Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c **** *
 917:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 26


 918:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 500              		.loc 1 949 0
 501              		.cfi_startproc
 502 0000 90B5     		push	{r4, r7, lr}
 503              		.cfi_def_cfa_offset 12
 504              		.cfi_offset 4, -12
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 83B0     		sub	sp, sp, #12
 508              		.cfi_def_cfa_offset 24
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 511              		.loc 1 951 0
 512 0006 FC1D     		add	r4, r7, #7
 513 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 514 000c 031C     		mov	r3, r0
 515 000e 2370     		strb	r3, [r4]
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 516              		.loc 1 953 0
 517 0010 074B     		ldr	r3, .L35
 518 0012 074A     		ldr	r2, .L35
 519 0014 1268     		ldr	r2, [r2]
 520 0016 C021     		mov	r1, #192
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 27


 521 0018 0902     		lsl	r1, r1, #8
 522 001a 0A43     		orr	r2, r1
 523 001c 1A60     		str	r2, [r3]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 524              		.loc 1 956 0
 525 001e FB1D     		add	r3, r7, #7
 526 0020 1B78     		ldrb	r3, [r3]
 527 0022 181C     		mov	r0, r3
 528 0024 FFF7FEFF 		bl	CyExitCriticalSection
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 529              		.loc 1 957 0
 530 0028 BD46     		mov	sp, r7
 531 002a 03B0     		add	sp, sp, #12
 532              		@ sp needed
 533 002c 90BD     		pop	{r4, r7, pc}
 534              	.L36:
 535 002e C046     		.align	2
 536              	.L35:
 537 0030 00010B40 		.word	1074462976
 538              		.cfi_endproc
 539              	.LFE6:
 540              		.size	CySysWdtLock, .-CySysWdtLock
 541              		.section	.text.CySysWdtLocked,"ax",%progbits
 542              		.align	2
 543              		.code	16
 544              		.thumb_func
 545              		.type	CySysWdtLocked, %function
 546              	CySysWdtLocked:
 547              	.LFB7:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 548              		.loc 1 970 0
 549              		.cfi_startproc
 550 0000 80B5     		push	{r7, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 556              		.loc 1 972 0
 557 0004 054B     		ldr	r3, .L41
 558 0006 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 28


 559 0008 C023     		mov	r3, #192
 560 000a 1B02     		lsl	r3, r3, #8
 561 000c 1340     		and	r3, r2
 562 000e 01D0     		beq	.L38
 563              		.loc 1 972 0 is_stmt 0 discriminator 1
 564 0010 0123     		mov	r3, #1
 565 0012 00E0     		b	.L39
 566              	.L38:
 567              		.loc 1 972 0 discriminator 2
 568 0014 0023     		mov	r3, #0
 569              	.L39:
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 570              		.loc 1 973 0 is_stmt 1 discriminator 4
 571 0016 181C     		mov	r0, r3
 572 0018 BD46     		mov	sp, r7
 573              		@ sp needed
 574 001a 80BD     		pop	{r7, pc}
 575              	.L42:
 576              		.align	2
 577              	.L41:
 578 001c 00010B40 		.word	1074462976
 579              		.cfi_endproc
 580              	.LFE7:
 581              		.size	CySysWdtLocked, .-CySysWdtLocked
 582              		.section	.text.CySysWdtUnlock,"ax",%progbits
 583              		.align	2
 584              		.global	CySysWdtUnlock
 585              		.code	16
 586              		.thumb_func
 587              		.type	CySysWdtUnlock, %function
 588              	CySysWdtUnlock:
 589              	.LFB8:
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 590              		.loc 1 984 0
 591              		.cfi_startproc
 592 0000 90B5     		push	{r4, r7, lr}
 593              		.cfi_def_cfa_offset 12
 594              		.cfi_offset 4, -12
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 83B0     		sub	sp, sp, #12
 598              		.cfi_def_cfa_offset 24
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 601              		.loc 1 986 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 29


 602 0006 FC1D     		add	r4, r7, #7
 603 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 604 000c 031C     		mov	r3, r0
 605 000e 2370     		strb	r3, [r4]
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 606              		.loc 1 989 0
 607 0010 0C4B     		ldr	r3, .L44
 608 0012 0C4A     		ldr	r2, .L44
 609 0014 1268     		ldr	r2, [r2]
 610 0016 0C49     		ldr	r1, .L44+4
 611 0018 0A40     		and	r2, r1
 612 001a 8021     		mov	r1, #128
 613 001c C901     		lsl	r1, r1, #7
 614 001e 0A43     		orr	r2, r1
 615 0020 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 616              		.loc 1 992 0
 617 0022 084B     		ldr	r3, .L44
 618 0024 074A     		ldr	r2, .L44
 619 0026 1268     		ldr	r2, [r2]
 620 0028 0749     		ldr	r1, .L44+4
 621 002a 0A40     		and	r2, r1
 622 002c 8021     		mov	r1, #128
 623 002e 0902     		lsl	r1, r1, #8
 624 0030 0A43     		orr	r2, r1
 625 0032 1A60     		str	r2, [r3]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 626              		.loc 1 995 0
 627 0034 FB1D     		add	r3, r7, #7
 628 0036 1B78     		ldrb	r3, [r3]
 629 0038 181C     		mov	r0, r3
 630 003a FFF7FEFF 		bl	CyExitCriticalSection
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 631              		.loc 1 996 0
 632 003e BD46     		mov	sp, r7
 633 0040 03B0     		add	sp, sp, #12
 634              		@ sp needed
 635 0042 90BD     		pop	{r4, r7, pc}
 636              	.L45:
 637              		.align	2
 638              	.L44:
 639 0044 00010B40 		.word	1074462976
 640 0048 FF3FFFFF 		.word	-49153
 641              		.cfi_endproc
 642              	.LFE8:
 643              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 644              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 645              		.align	2
 646              		.global	CySysWdtGetEnabledStatus
 647              		.code	16
 648              		.thumb_func
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 30


 649              		.type	CySysWdtGetEnabledStatus, %function
 650              	CySysWdtGetEnabledStatus:
 651              	.LFB9:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 652              		.loc 1 1018 0
 653              		.cfi_startproc
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 82B0     		sub	sp, sp, #8
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              		.cfi_def_cfa_register 7
 662 0006 7860     		str	r0, [r7, #4]
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 663              		.loc 1 1019 0
 664 0008 7B68     		ldr	r3, [r7, #4]
 665 000a 022B     		cmp	r3, #2
 666 000c 02D9     		bls	.L47
 667              		.loc 1 1019 0 is_stmt 0 discriminator 1
 668 000e 0020     		mov	r0, #0
 669 0010 FFF7FEFF 		bl	CyHalt
 670              	.L47:
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 671              		.loc 1 1020 0 is_stmt 1
 672 0014 054B     		ldr	r3, .L49
 673 0016 1B68     		ldr	r3, [r3]
 674 0018 7A68     		ldr	r2, [r7, #4]
 675 001a D200     		lsl	r2, r2, #3
 676 001c 0132     		add	r2, r2, #1
 677 001e D340     		lsr	r3, r3, r2
 678 0020 0122     		mov	r2, #1
 679 0022 1340     		and	r3, r2
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 680              		.loc 1 1021 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 31


 681 0024 181C     		mov	r0, r3
 682 0026 BD46     		mov	sp, r7
 683 0028 02B0     		add	sp, sp, #8
 684              		@ sp needed
 685 002a 80BD     		pop	{r7, pc}
 686              	.L50:
 687              		.align	2
 688              	.L49:
 689 002c 10020B40 		.word	1074463248
 690              		.cfi_endproc
 691              	.LFE9:
 692              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 693              		.section	.text.CySysWdtSetMode,"ax",%progbits
 694              		.align	2
 695              		.global	CySysWdtSetMode
 696              		.code	16
 697              		.thumb_func
 698              		.type	CySysWdtSetMode, %function
 699              	CySysWdtSetMode:
 700              	.LFB10:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 701              		.loc 1 1048 0
 702              		.cfi_startproc
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 84B0     		sub	sp, sp, #16
 708              		.cfi_def_cfa_offset 24
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 32


 711 0006 7860     		str	r0, [r7, #4]
 712 0008 3960     		str	r1, [r7]
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 713              		.loc 1 1051 0
 714 000a 7B68     		ldr	r3, [r7, #4]
 715 000c 022B     		cmp	r3, #2
 716 000e 02D9     		bls	.L52
 717              		.loc 1 1051 0 is_stmt 0 discriminator 1
 718 0010 0020     		mov	r0, #0
 719 0012 FFF7FEFF 		bl	CyHalt
 720              	.L52:
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 721              		.loc 1 1053 0 is_stmt 1
 722 0016 7B68     		ldr	r3, [r7, #4]
 723 0018 181C     		mov	r0, r3
 724 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 725 001e 031E     		sub	r3, r0, #0
 726 0020 15D1     		bne	.L51
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 727              		.loc 1 1055 0
 728 0022 0C4B     		ldr	r3, .L54
 729 0024 1B68     		ldr	r3, [r3]
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 730              		.loc 1 1056 0
 731 0026 7A68     		ldr	r2, [r7, #4]
 732 0028 D200     		lsl	r2, r2, #3
 733 002a 111C     		mov	r1, r2
 734 002c 0322     		mov	r2, #3
 735 002e 8A40     		lsl	r2, r2, r1
 736 0030 D243     		mvn	r2, r2
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 737              		.loc 1 1055 0
 738 0032 1340     		and	r3, r2
 739 0034 FB60     		str	r3, [r7, #12]
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 740              		.loc 1 1057 0
 741 0036 3B68     		ldr	r3, [r7]
 742 0038 0322     		mov	r2, #3
 743 003a 1340     		and	r3, r2
 744 003c 7A68     		ldr	r2, [r7, #4]
 745 003e D200     		lsl	r2, r2, #3
 746 0040 9340     		lsl	r3, r3, r2
 747 0042 FA68     		ldr	r2, [r7, #12]
 748 0044 1343     		orr	r3, r2
 749 0046 FB60     		str	r3, [r7, #12]
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 750              		.loc 1 1058 0
 751 0048 024B     		ldr	r3, .L54
 752 004a FA68     		ldr	r2, [r7, #12]
 753 004c 1A60     		str	r2, [r3]
 754              	.L51:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 33


 755              		.loc 1 1060 0
 756 004e BD46     		mov	sp, r7
 757 0050 04B0     		add	sp, sp, #16
 758              		@ sp needed
 759 0052 80BD     		pop	{r7, pc}
 760              	.L55:
 761              		.align	2
 762              	.L54:
 763 0054 0C020B40 		.word	1074463244
 764              		.cfi_endproc
 765              	.LFE10:
 766              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 767              		.section	.text.CySysWdtGetMode,"ax",%progbits
 768              		.align	2
 769              		.global	CySysWdtGetMode
 770              		.code	16
 771              		.thumb_func
 772              		.type	CySysWdtGetMode, %function
 773              	CySysWdtGetMode:
 774              	.LFB11:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
 775              		.loc 1 1076 0
 776              		.cfi_startproc
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 82B0     		sub	sp, sp, #8
 782              		.cfi_def_cfa_offset 16
 783 0004 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 785 0006 7860     		str	r0, [r7, #4]
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 786              		.loc 1 1077 0
 787 0008 054B     		ldr	r3, .L58
 788 000a 1B68     		ldr	r3, [r3]
 789 000c 7A68     		ldr	r2, [r7, #4]
 790 000e D200     		lsl	r2, r2, #3
 791 0010 D340     		lsr	r3, r3, r2
 792 0012 0322     		mov	r2, #3
 793 0014 1340     		and	r3, r2
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 34


 794              		.loc 1 1078 0
 795 0016 181C     		mov	r0, r3
 796 0018 BD46     		mov	sp, r7
 797 001a 02B0     		add	sp, sp, #8
 798              		@ sp needed
 799 001c 80BD     		pop	{r7, pc}
 800              	.L59:
 801 001e C046     		.align	2
 802              	.L58:
 803 0020 0C020B40 		.word	1074463244
 804              		.cfi_endproc
 805              	.LFE11:
 806              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 807              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 808              		.align	2
 809              		.global	CySysWdtSetClearOnMatch
 810              		.code	16
 811              		.thumb_func
 812              		.type	CySysWdtSetClearOnMatch, %function
 813              	CySysWdtSetClearOnMatch:
 814              	.LFB12:
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
 815              		.loc 1 1105 0
 816              		.cfi_startproc
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 84B0     		sub	sp, sp, #16
 822              		.cfi_def_cfa_offset 24
 823 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 35


 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 826 0008 3960     		str	r1, [r7]
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 827              		.loc 1 1108 0
 828 000a 7B68     		ldr	r3, [r7, #4]
 829 000c 002B     		cmp	r3, #0
 830 000e 02D0     		beq	.L61
 831              		.loc 1 1108 0 is_stmt 0 discriminator 2
 832 0010 7B68     		ldr	r3, [r7, #4]
 833 0012 012B     		cmp	r3, #1
 834 0014 01D1     		bne	.L62
 835              	.L61:
 836              		.loc 1 1108 0 discriminator 3
 837 0016 0123     		mov	r3, #1
 838 0018 00E0     		b	.L63
 839              	.L62:
 840              		.loc 1 1108 0 discriminator 4
 841 001a 0023     		mov	r3, #0
 842              	.L63:
 843              		.loc 1 1108 0 discriminator 6
 844 001c 002B     		cmp	r3, #0
 845 001e 02D1     		bne	.L64
 846              		.loc 1 1108 0 discriminator 7
 847 0020 0020     		mov	r0, #0
 848 0022 FFF7FEFF 		bl	CyHalt
 849              	.L64:
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 850              		.loc 1 1111 0 is_stmt 1
 851 0026 7B68     		ldr	r3, [r7, #4]
 852 0028 181C     		mov	r0, r3
 853 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 854 002e 031E     		sub	r3, r0, #0
 855 0030 16D1     		bne	.L60
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 856              		.loc 1 1113 0
 857 0032 0D4B     		ldr	r3, .L66
 858 0034 1B68     		ldr	r3, [r3]
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 859              		.loc 1 1114 0
 860 0036 7A68     		ldr	r2, [r7, #4]
 861 0038 D200     		lsl	r2, r2, #3
 862 003a 0232     		add	r2, r2, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 863              		.loc 1 1113 0
 864 003c 111C     		mov	r1, r2
 865 003e 0122     		mov	r2, #1
 866 0040 8A40     		lsl	r2, r2, r1
 867 0042 D243     		mvn	r2, r2
 868 0044 1340     		and	r3, r2
 869 0046 FB60     		str	r3, [r7, #12]
1115:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 36


1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 870              		.loc 1 1117 0
 871 0048 7B68     		ldr	r3, [r7, #4]
 872 004a DB00     		lsl	r3, r3, #3
 873 004c 0233     		add	r3, r3, #2
 874 004e 1A1C     		mov	r2, r3
 875 0050 3B68     		ldr	r3, [r7]
 876 0052 9340     		lsl	r3, r3, r2
 877 0054 FA68     		ldr	r2, [r7, #12]
 878 0056 1343     		orr	r3, r2
 879 0058 FB60     		str	r3, [r7, #12]
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 880              		.loc 1 1119 0
 881 005a 034B     		ldr	r3, .L66
 882 005c FA68     		ldr	r2, [r7, #12]
 883 005e 1A60     		str	r2, [r3]
 884              	.L60:
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
 885              		.loc 1 1121 0
 886 0060 BD46     		mov	sp, r7
 887 0062 04B0     		add	sp, sp, #16
 888              		@ sp needed
 889 0064 80BD     		pop	{r7, pc}
 890              	.L67:
 891 0066 C046     		.align	2
 892              	.L66:
 893 0068 0C020B40 		.word	1074463244
 894              		.cfi_endproc
 895              	.LFE12:
 896              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 897              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 898              		.align	2
 899              		.global	CySysWdtGetClearOnMatch
 900              		.code	16
 901              		.thumb_func
 902              		.type	CySysWdtGetClearOnMatch, %function
 903              	CySysWdtGetClearOnMatch:
 904              	.LFB13:
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 37


1138:Generated_Source\PSoC4/CyLFClk.c ****     {
 905              		.loc 1 1138 0
 906              		.cfi_startproc
 907 0000 80B5     		push	{r7, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 911 0002 82B0     		sub	sp, sp, #8
 912              		.cfi_def_cfa_offset 16
 913 0004 00AF     		add	r7, sp, #0
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 916              		.loc 1 1139 0
 917 0008 7B68     		ldr	r3, [r7, #4]
 918 000a 002B     		cmp	r3, #0
 919 000c 02D0     		beq	.L69
 920              		.loc 1 1139 0 is_stmt 0 discriminator 2
 921 000e 7B68     		ldr	r3, [r7, #4]
 922 0010 012B     		cmp	r3, #1
 923 0012 01D1     		bne	.L70
 924              	.L69:
 925              		.loc 1 1139 0 discriminator 3
 926 0014 0123     		mov	r3, #1
 927 0016 00E0     		b	.L71
 928              	.L70:
 929              		.loc 1 1139 0 discriminator 4
 930 0018 0023     		mov	r3, #0
 931              	.L71:
 932              		.loc 1 1139 0 discriminator 6
 933 001a 002B     		cmp	r3, #0
 934 001c 02D1     		bne	.L72
 935              		.loc 1 1139 0 discriminator 7
 936 001e 0020     		mov	r0, #0
 937 0020 FFF7FEFF 		bl	CyHalt
 938              	.L72:
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 939              		.loc 1 1142 0 is_stmt 1
 940 0024 054B     		ldr	r3, .L74
 941 0026 1B68     		ldr	r3, [r3]
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 942              		.loc 1 1143 0
 943 0028 7A68     		ldr	r2, [r7, #4]
 944 002a D200     		lsl	r2, r2, #3
 945 002c 0232     		add	r2, r2, #2
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 946              		.loc 1 1142 0
 947 002e D340     		lsr	r3, r3, r2
 948 0030 0122     		mov	r2, #1
 949 0032 1340     		and	r3, r2
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
 950              		.loc 1 1144 0
 951 0034 181C     		mov	r0, r3
 952 0036 BD46     		mov	sp, r7
 953 0038 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 38


 954              		@ sp needed
 955 003a 80BD     		pop	{r7, pc}
 956              	.L75:
 957              		.align	2
 958              	.L74:
 959 003c 0C020B40 		.word	1074463244
 960              		.cfi_endproc
 961              	.LFE13:
 962              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 963              		.section	.text.CySysWdtEnable,"ax",%progbits
 964              		.align	2
 965              		.global	CySysWdtEnable
 966              		.code	16
 967              		.thumb_func
 968              		.type	CySysWdtEnable, %function
 969              	CySysWdtEnable:
 970              	.LFB14:
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
 971              		.loc 1 1179 0
 972              		.cfi_startproc
 973 0000 80B5     		push	{r7, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 39


 976              		.cfi_offset 14, -4
 977 0002 82B0     		sub	sp, sp, #8
 978              		.cfi_def_cfa_offset 16
 979 0004 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 981 0006 7860     		str	r0, [r7, #4]
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
 982              		.loc 1 1181 0
 983 0008 FFF7FEFF 		bl	CySysClkIloStart
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 984              		.loc 1 1184 0
 985 000c 144B     		ldr	r3, .L83
 986 000e 144A     		ldr	r2, .L83
 987 0010 1168     		ldr	r1, [r2]
 988 0012 7A68     		ldr	r2, [r7, #4]
 989 0014 0A43     		orr	r2, r1
 990 0016 1A60     		str	r2, [r3]
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 991              		.loc 1 1186 0
 992 0018 7B68     		ldr	r3, [r7, #4]
 993 001a 0122     		mov	r2, #1
 994 001c 1340     		and	r3, r2
 995 001e 05D0     		beq	.L77
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 996              		.loc 1 1188 0
 997 0020 C046     		mov	r8, r8
 998              	.L78:
 999              		.loc 1 1188 0 is_stmt 0 discriminator 1
 1000 0022 0020     		mov	r0, #0
 1001 0024 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1002 0028 031E     		sub	r3, r0, #0
 1003 002a FAD0     		beq	.L78
 1004              	.L77:
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 1005              		.loc 1 1194 0 is_stmt 1
 1006 002c 7A68     		ldr	r2, [r7, #4]
 1007 002e 8023     		mov	r3, #128
 1008 0030 5B00     		lsl	r3, r3, #1
 1009 0032 1340     		and	r3, r2
 1010 0034 05D0     		beq	.L79
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 1011              		.loc 1 1196 0
 1012 0036 C046     		mov	r8, r8
 1013              	.L80:
 1014              		.loc 1 1196 0 is_stmt 0 discriminator 1
 1015 0038 0120     		mov	r0, #1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 40


 1016 003a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1017 003e 031E     		sub	r3, r0, #0
 1018 0040 FAD0     		beq	.L80
 1019              	.L79:
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 1020              		.loc 1 1202 0 is_stmt 1
 1021 0042 7A68     		ldr	r2, [r7, #4]
 1022 0044 8023     		mov	r3, #128
 1023 0046 5B02     		lsl	r3, r3, #9
 1024 0048 1340     		and	r3, r2
 1025 004a 05D0     		beq	.L76
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 1026              		.loc 1 1204 0
 1027 004c C046     		mov	r8, r8
 1028              	.L82:
 1029              		.loc 1 1204 0 is_stmt 0 discriminator 1
 1030 004e 0220     		mov	r0, #2
 1031 0050 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1032 0054 031E     		sub	r3, r0, #0
 1033 0056 FAD0     		beq	.L82
 1034              	.L76:
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
 1035              		.loc 1 1209 0 is_stmt 1
 1036 0058 BD46     		mov	sp, r7
 1037 005a 02B0     		add	sp, sp, #8
 1038              		@ sp needed
 1039 005c 80BD     		pop	{r7, pc}
 1040              	.L84:
 1041 005e C046     		.align	2
 1042              	.L83:
 1043 0060 10020B40 		.word	1074463248
 1044              		.cfi_endproc
 1045              	.LFE14:
 1046              		.size	CySysWdtEnable, .-CySysWdtEnable
 1047              		.section	.text.CySysWdtDisable,"ax",%progbits
 1048              		.align	2
 1049              		.global	CySysWdtDisable
 1050              		.code	16
 1051              		.thumb_func
 1052              		.type	CySysWdtDisable, %function
 1053              	CySysWdtDisable:
 1054              	.LFB15:
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 41


1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
 1055              		.loc 1 1227 0
 1056              		.cfi_startproc
 1057 0000 80B5     		push	{r7, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 82B0     		sub	sp, sp, #8
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 7860     		str	r0, [r7, #4]
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 1066              		.loc 1 1228 0
 1067 0008 FFF7FEFF 		bl	CySysWdtLocked
 1068 000c 031E     		sub	r3, r0, #0
 1069 000e 26D1     		bne	.L85
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 1070              		.loc 1 1230 0
 1071 0010 144B     		ldr	r3, .L92
 1072 0012 144A     		ldr	r2, .L92
 1073 0014 1268     		ldr	r2, [r2]
 1074 0016 7968     		ldr	r1, [r7, #4]
 1075 0018 C943     		mvn	r1, r1
 1076 001a 0A40     		and	r2, r1
 1077 001c 1A60     		str	r2, [r3]
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 1078              		.loc 1 1232 0
 1079 001e 7B68     		ldr	r3, [r7, #4]
 1080 0020 0122     		mov	r2, #1
 1081 0022 1340     		and	r3, r2
 1082 0024 05D0     		beq	.L87
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 1083              		.loc 1 1234 0
 1084 0026 C046     		mov	r8, r8
 1085              	.L88:
 1086              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1087 0028 0020     		mov	r0, #0
 1088 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1089 002e 031E     		sub	r3, r0, #0
 1090 0030 FAD1     		bne	.L88
 1091              	.L87:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 42


1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 1092              		.loc 1 1240 0 is_stmt 1
 1093 0032 7A68     		ldr	r2, [r7, #4]
 1094 0034 8023     		mov	r3, #128
 1095 0036 5B00     		lsl	r3, r3, #1
 1096 0038 1340     		and	r3, r2
 1097 003a 05D0     		beq	.L89
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 1098              		.loc 1 1242 0
 1099 003c C046     		mov	r8, r8
 1100              	.L90:
 1101              		.loc 1 1242 0 is_stmt 0 discriminator 1
 1102 003e 0120     		mov	r0, #1
 1103 0040 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1104 0044 031E     		sub	r3, r0, #0
 1105 0046 FAD1     		bne	.L90
 1106              	.L89:
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 1107              		.loc 1 1248 0 is_stmt 1
 1108 0048 7A68     		ldr	r2, [r7, #4]
 1109 004a 8023     		mov	r3, #128
 1110 004c 5B02     		lsl	r3, r3, #9
 1111 004e 1340     		and	r3, r2
 1112 0050 05D0     		beq	.L85
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 1113              		.loc 1 1250 0
 1114 0052 C046     		mov	r8, r8
 1115              	.L91:
 1116              		.loc 1 1250 0 is_stmt 0 discriminator 1
 1117 0054 0220     		mov	r0, #2
 1118 0056 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1119 005a 031E     		sub	r3, r0, #0
 1120 005c FAD1     		bne	.L91
 1121              	.L85:
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
 1122              		.loc 1 1256 0 is_stmt 1
 1123 005e BD46     		mov	sp, r7
 1124 0060 02B0     		add	sp, sp, #8
 1125              		@ sp needed
 1126 0062 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 43


 1127              	.L93:
 1128              		.align	2
 1129              	.L92:
 1130 0064 10020B40 		.word	1074463248
 1131              		.cfi_endproc
 1132              	.LFE15:
 1133              		.size	CySysWdtDisable, .-CySysWdtDisable
 1134              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 1135              		.align	2
 1136              		.global	CySysWdtSetCascade
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	CySysWdtSetCascade, %function
 1140              	CySysWdtSetCascade:
 1141              	.LFB16:
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
 1142              		.loc 1 1286 0
 1143              		.cfi_startproc
 1144 0000 90B5     		push	{r4, r7, lr}
 1145              		.cfi_def_cfa_offset 12
 1146              		.cfi_offset 4, -12
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 85B0     		sub	sp, sp, #20
 1150              		.cfi_def_cfa_offset 32
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 44


1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
 1154              		.loc 1 1290 0
 1155 0008 0020     		mov	r0, #0
 1156 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1157 000e 041C     		mov	r4, r0
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 1158              		.loc 1 1291 0
 1159 0010 0120     		mov	r0, #1
 1160 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1161 0016 031C     		mov	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 1162              		.loc 1 1290 0
 1163 0018 1C43     		orr	r4, r3
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
 1164              		.loc 1 1292 0
 1165 001a 0220     		mov	r0, #2
 1166 001c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1167 0020 031C     		mov	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 1168              		.loc 1 1290 0
 1169 0022 2343     		orr	r3, r4
 1170 0024 FB60     		str	r3, [r7, #12]
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 1171              		.loc 1 1294 0
 1172 0026 FB68     		ldr	r3, [r7, #12]
 1173 0028 002B     		cmp	r3, #0
 1174 002a 0DD1     		bne	.L94
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 1175              		.loc 1 1296 0
 1176 002c 084B     		ldr	r3, .L96
 1177 002e 1B68     		ldr	r3, [r3]
 1178 0030 BB60     		str	r3, [r7, #8]
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 1179              		.loc 1 1297 0
 1180 0032 BB68     		ldr	r3, [r7, #8]
 1181 0034 074A     		ldr	r2, .L96+4
 1182 0036 1340     		and	r3, r2
 1183 0038 BB60     		str	r3, [r7, #8]
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 1184              		.loc 1 1298 0
 1185 003a BA68     		ldr	r2, [r7, #8]
 1186 003c 7B68     		ldr	r3, [r7, #4]
 1187 003e 1343     		orr	r3, r2
 1188 0040 BB60     		str	r3, [r7, #8]
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1189              		.loc 1 1299 0
 1190 0042 034B     		ldr	r3, .L96
 1191 0044 BA68     		ldr	r2, [r7, #8]
 1192 0046 1A60     		str	r2, [r3]
 1193              	.L94:
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 45


 1194              		.loc 1 1301 0
 1195 0048 BD46     		mov	sp, r7
 1196 004a 05B0     		add	sp, sp, #20
 1197              		@ sp needed
 1198 004c 90BD     		pop	{r4, r7, pc}
 1199              	.L97:
 1200 004e C046     		.align	2
 1201              	.L96:
 1202 0050 0C020B40 		.word	1074463244
 1203 0054 F7F7FFFF 		.word	-2057
 1204              		.cfi_endproc
 1205              	.LFE16:
 1206              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 1207              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 1208              		.align	2
 1209              		.global	CySysWdtGetCascade
 1210              		.code	16
 1211              		.thumb_func
 1212              		.type	CySysWdtGetCascade, %function
 1213              	CySysWdtGetCascade:
 1214              	.LFB17:
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
 1215              		.loc 1 1317 0
 1216              		.cfi_startproc
 1217 0000 80B5     		push	{r7, lr}
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 7, -8
 1220              		.cfi_offset 14, -4
 1221 0002 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 1223              		.loc 1 1318 0
 1224 0004 034B     		ldr	r3, .L100
 1225 0006 1B68     		ldr	r3, [r3]
 1226 0008 034A     		ldr	r2, .L100+4
 1227 000a 1340     		and	r3, r2
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
 1228              		.loc 1 1319 0
 1229 000c 181C     		mov	r0, r3
 1230 000e BD46     		mov	sp, r7
 1231              		@ sp needed
 1232 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 46


 1233              	.L101:
 1234 0012 C046     		.align	2
 1235              	.L100:
 1236 0014 0C020B40 		.word	1074463244
 1237 0018 08080000 		.word	2056
 1238              		.cfi_endproc
 1239              	.LFE17:
 1240              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 1241              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 1242              		.align	2
 1243              		.global	CySysWdtSetMatch
 1244              		.code	16
 1245              		.thumb_func
 1246              		.type	CySysWdtSetMatch, %function
 1247              	CySysWdtSetMatch:
 1248              	.LFB18:
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
 1249              		.loc 1 1337 0
 1250              		.cfi_startproc
 1251 0000 80B5     		push	{r7, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 84B0     		sub	sp, sp, #16
 1256              		.cfi_def_cfa_offset 24
 1257 0004 00AF     		add	r7, sp, #0
 1258              		.cfi_def_cfa_register 7
 1259 0006 7860     		str	r0, [r7, #4]
 1260 0008 3960     		str	r1, [r7]
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1261              		.loc 1 1340 0
 1262 000a 7B68     		ldr	r3, [r7, #4]
 1263 000c 002B     		cmp	r3, #0
 1264 000e 02D0     		beq	.L103
 1265              		.loc 1 1340 0 is_stmt 0 discriminator 2
 1266 0010 7B68     		ldr	r3, [r7, #4]
 1267 0012 012B     		cmp	r3, #1
 1268 0014 01D1     		bne	.L104
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 47


 1269              	.L103:
 1270              		.loc 1 1340 0 discriminator 3
 1271 0016 0123     		mov	r3, #1
 1272 0018 00E0     		b	.L105
 1273              	.L104:
 1274              		.loc 1 1340 0 discriminator 4
 1275 001a 0023     		mov	r3, #0
 1276              	.L105:
 1277              		.loc 1 1340 0 discriminator 6
 1278 001c 002B     		cmp	r3, #0
 1279 001e 02D1     		bne	.L106
 1280              		.loc 1 1340 0 discriminator 7
 1281 0020 0020     		mov	r0, #0
 1282 0022 FFF7FEFF 		bl	CyHalt
 1283              	.L106:
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 1284              		.loc 1 1344 0 is_stmt 1
 1285 0026 C920     		mov	r0, #201
 1286 0028 FFF7FEFF 		bl	CyDelayUs
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
 1287              		.loc 1 1346 0
 1288 002c 0D4B     		ldr	r3, .L107
 1289 002e 1B68     		ldr	r3, [r3]
 1290 0030 FB60     		str	r3, [r7, #12]
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1291              		.loc 1 1347 0
 1292 0032 7B68     		ldr	r3, [r7, #4]
 1293 0034 1B01     		lsl	r3, r3, #4
 1294 0036 1A1C     		mov	r2, r3
 1295 0038 0B4B     		ldr	r3, .L107+4
 1296 003a 9340     		lsl	r3, r3, r2
 1297 003c DA43     		mvn	r2, r3
 1298 003e FB68     		ldr	r3, [r7, #12]
 1299 0040 1340     		and	r3, r2
 1300 0042 FB60     		str	r3, [r7, #12]
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1301              		.loc 1 1348 0
 1302 0044 074B     		ldr	r3, .L107
 1303 0046 7A68     		ldr	r2, [r7, #4]
 1304 0048 1201     		lsl	r2, r2, #4
 1305 004a 111C     		mov	r1, r2
 1306 004c 3A68     		ldr	r2, [r7]
 1307 004e 8A40     		lsl	r2, r2, r1
 1308 0050 111C     		mov	r1, r2
 1309 0052 FA68     		ldr	r2, [r7, #12]
 1310 0054 0A43     		orr	r2, r1
 1311 0056 1A60     		str	r2, [r3]
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
 1312              		.loc 1 1351 0
 1313 0058 4320     		mov	r0, #67
 1314 005a FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 48


1352:Generated_Source\PSoC4/CyLFClk.c ****     }
 1315              		.loc 1 1352 0
 1316 005e BD46     		mov	sp, r7
 1317 0060 04B0     		add	sp, sp, #16
 1318              		@ sp needed
 1319 0062 80BD     		pop	{r7, pc}
 1320              	.L108:
 1321              		.align	2
 1322              	.L107:
 1323 0064 08020B40 		.word	1074463240
 1324 0068 FFFF0000 		.word	65535
 1325              		.cfi_endproc
 1326              	.LFE18:
 1327              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 1328              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 1329              		.align	2
 1330              		.global	CySysWdtSetToggleBit
 1331              		.code	16
 1332              		.thumb_func
 1333              		.type	CySysWdtSetToggleBit, %function
 1334              	CySysWdtSetToggleBit:
 1335              	.LFB19:
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
 1336              		.loc 1 1376 0
 1337              		.cfi_startproc
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 84B0     		sub	sp, sp, #16
 1343              		.cfi_def_cfa_offset 24
 1344 0004 00AF     		add	r7, sp, #0
 1345              		.cfi_def_cfa_register 7
 1346 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 49


1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 1347              		.loc 1 1379 0
 1348 0008 0220     		mov	r0, #2
 1349 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1350 000e 031E     		sub	r3, r0, #0
 1351 0010 10D1     		bne	.L109
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 1352              		.loc 1 1381 0
 1353 0012 0A4B     		ldr	r3, .L111
 1354 0014 1B68     		ldr	r3, [r3]
 1355 0016 FB60     		str	r3, [r7, #12]
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1356              		.loc 1 1382 0
 1357 0018 FB68     		ldr	r3, [r7, #12]
 1358 001a 094A     		ldr	r2, .L111+4
 1359 001c 1340     		and	r3, r2
 1360 001e FB60     		str	r3, [r7, #12]
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 1361              		.loc 1 1383 0
 1362 0020 7B68     		ldr	r3, [r7, #4]
 1363 0022 1F22     		mov	r2, #31
 1364 0024 1340     		and	r3, r2
 1365 0026 1B06     		lsl	r3, r3, #24
 1366 0028 FA68     		ldr	r2, [r7, #12]
 1367 002a 1343     		orr	r3, r2
 1368 002c FB60     		str	r3, [r7, #12]
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1369              		.loc 1 1384 0
 1370 002e 034B     		ldr	r3, .L111
 1371 0030 FA68     		ldr	r2, [r7, #12]
 1372 0032 1A60     		str	r2, [r3]
 1373              	.L109:
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
 1374              		.loc 1 1386 0
 1375 0034 BD46     		mov	sp, r7
 1376 0036 04B0     		add	sp, sp, #16
 1377              		@ sp needed
 1378 0038 80BD     		pop	{r7, pc}
 1379              	.L112:
 1380 003a C046     		.align	2
 1381              	.L111:
 1382 003c 0C020B40 		.word	1074463244
 1383 0040 FFFFFFE0 		.word	-520093697
 1384              		.cfi_endproc
 1385              	.LFE19:
 1386              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 1387              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 1388              		.align	2
 1389              		.global	CySysWdtGetToggleBit
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CySysWdtGetToggleBit, %function
 1393              	CySysWdtGetToggleBit:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 50


 1394              	.LFB20:
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
 1395              		.loc 1 1399 0
 1396              		.cfi_startproc
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 00AF     		add	r7, sp, #0
 1402              		.cfi_def_cfa_register 7
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 1403              		.loc 1 1400 0
 1404 0004 034B     		ldr	r3, .L115
 1405 0006 1B68     		ldr	r3, [r3]
 1406 0008 1B0E     		lsr	r3, r3, #24
 1407 000a 1F22     		mov	r2, #31
 1408 000c 1340     		and	r3, r2
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
 1409              		.loc 1 1401 0
 1410 000e 181C     		mov	r0, r3
 1411 0010 BD46     		mov	sp, r7
 1412              		@ sp needed
 1413 0012 80BD     		pop	{r7, pc}
 1414              	.L116:
 1415              		.align	2
 1416              	.L115:
 1417 0014 0C020B40 		.word	1074463244
 1418              		.cfi_endproc
 1419              	.LFE20:
 1420              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 1421              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 1422              		.align	2
 1423              		.global	CySysWdtGetMatch
 1424              		.code	16
 1425              		.thumb_func
 1426              		.type	CySysWdtGetMatch, %function
 1427              	CySysWdtGetMatch:
 1428              	.LFB21:
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 51


1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
 1429              		.loc 1 1417 0
 1430              		.cfi_startproc
 1431 0000 80B5     		push	{r7, lr}
 1432              		.cfi_def_cfa_offset 8
 1433              		.cfi_offset 7, -8
 1434              		.cfi_offset 14, -4
 1435 0002 82B0     		sub	sp, sp, #8
 1436              		.cfi_def_cfa_offset 16
 1437 0004 00AF     		add	r7, sp, #0
 1438              		.cfi_def_cfa_register 7
 1439 0006 7860     		str	r0, [r7, #4]
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1440              		.loc 1 1418 0
 1441 0008 7B68     		ldr	r3, [r7, #4]
 1442 000a 002B     		cmp	r3, #0
 1443 000c 02D0     		beq	.L118
 1444              		.loc 1 1418 0 is_stmt 0 discriminator 2
 1445 000e 7B68     		ldr	r3, [r7, #4]
 1446 0010 012B     		cmp	r3, #1
 1447 0012 01D1     		bne	.L119
 1448              	.L118:
 1449              		.loc 1 1418 0 discriminator 3
 1450 0014 0123     		mov	r3, #1
 1451 0016 00E0     		b	.L120
 1452              	.L119:
 1453              		.loc 1 1418 0 discriminator 4
 1454 0018 0023     		mov	r3, #0
 1455              	.L120:
 1456              		.loc 1 1418 0 discriminator 6
 1457 001a 002B     		cmp	r3, #0
 1458 001c 02D1     		bne	.L121
 1459              		.loc 1 1418 0 discriminator 7
 1460 001e 0020     		mov	r0, #0
 1461 0020 FFF7FEFF 		bl	CyHalt
 1462              	.L121:
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
 1463              		.loc 1 1421 0 is_stmt 1
 1464 0024 054B     		ldr	r3, .L123
 1465 0026 1B68     		ldr	r3, [r3]
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1466              		.loc 1 1422 0
 1467 0028 7A68     		ldr	r2, [r7, #4]
 1468 002a 1201     		lsl	r2, r2, #4
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1469              		.loc 1 1421 0
 1470 002c D340     		lsr	r3, r3, r2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 52


 1471 002e 1B04     		lsl	r3, r3, #16
 1472 0030 1B0C     		lsr	r3, r3, #16
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
 1473              		.loc 1 1423 0
 1474 0032 181C     		mov	r0, r3
 1475 0034 BD46     		mov	sp, r7
 1476 0036 02B0     		add	sp, sp, #8
 1477              		@ sp needed
 1478 0038 80BD     		pop	{r7, pc}
 1479              	.L124:
 1480 003a C046     		.align	2
 1481              	.L123:
 1482 003c 08020B40 		.word	1074463240
 1483              		.cfi_endproc
 1484              	.LFE21:
 1485              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 1486              		.section	.text.CySysWdtGetCount,"ax",%progbits
 1487              		.align	2
 1488              		.global	CySysWdtGetCount
 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	CySysWdtGetCount, %function
 1492              	CySysWdtGetCount:
 1493              	.LFB22:
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
 1494              		.loc 1 1439 0
 1495              		.cfi_startproc
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 84B0     		sub	sp, sp, #16
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 1505              		.loc 1 1440 0
 1506 0008 0023     		mov	r3, #0
 1507 000a FB60     		str	r3, [r7, #12]
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 53


 1508              		.loc 1 1442 0
 1509 000c 7B68     		ldr	r3, [r7, #4]
 1510 000e 012B     		cmp	r3, #1
 1511 0010 09D0     		beq	.L127
 1512 0012 02D3     		bcc	.L128
 1513 0014 022B     		cmp	r3, #2
 1514 0016 0BD0     		beq	.L129
 1515 0018 0EE0     		b	.L132
 1516              	.L128:
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
 1517              		.loc 1 1446 0
 1518 001a 0C4B     		ldr	r3, .L133
 1519 001c 1B68     		ldr	r3, [r3]
 1520 001e 1B04     		lsl	r3, r3, #16
 1521 0020 1B0C     		lsr	r3, r3, #16
 1522 0022 FB60     		str	r3, [r7, #12]
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1523              		.loc 1 1447 0
 1524 0024 0CE0     		b	.L130
 1525              	.L127:
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
 1526              		.loc 1 1451 0
 1527 0026 094B     		ldr	r3, .L133
 1528 0028 1B68     		ldr	r3, [r3]
 1529 002a 1B0C     		lsr	r3, r3, #16
 1530 002c FB60     		str	r3, [r7, #12]
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1531              		.loc 1 1452 0
 1532 002e 07E0     		b	.L130
 1533              	.L129:
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
 1534              		.loc 1 1456 0
 1535 0030 074B     		ldr	r3, .L133+4
 1536 0032 1B68     		ldr	r3, [r3]
 1537 0034 FB60     		str	r3, [r7, #12]
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1538              		.loc 1 1457 0
 1539 0036 03E0     		b	.L130
 1540              	.L132:
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 1541              		.loc 1 1460 0
 1542 0038 0020     		mov	r0, #0
 1543 003a FFF7FEFF 		bl	CyHalt
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1544              		.loc 1 1461 0
 1545 003e C046     		mov	r8, r8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 54


 1546              	.L130:
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
 1547              		.loc 1 1464 0
 1548 0040 FB68     		ldr	r3, [r7, #12]
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
 1549              		.loc 1 1465 0
 1550 0042 181C     		mov	r0, r3
 1551 0044 BD46     		mov	sp, r7
 1552 0046 04B0     		add	sp, sp, #16
 1553              		@ sp needed
 1554 0048 80BD     		pop	{r7, pc}
 1555              	.L134:
 1556 004a C046     		.align	2
 1557              	.L133:
 1558 004c 00020B40 		.word	1074463232
 1559 0050 04020B40 		.word	1074463236
 1560              		.cfi_endproc
 1561              	.LFE22:
 1562              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 1563              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 1564              		.align	2
 1565              		.global	CySysWdtGetInterruptSource
 1566              		.code	16
 1567              		.thumb_func
 1568              		.type	CySysWdtGetInterruptSource, %function
 1569              	CySysWdtGetInterruptSource:
 1570              	.LFB23:
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
 1571              		.loc 1 1482 0
 1572              		.cfi_startproc
 1573 0000 80B5     		push	{r7, lr}
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
 1577 0002 00AF     		add	r7, sp, #0
 1578              		.cfi_def_cfa_register 7
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 1579              		.loc 1 1483 0
 1580 0004 034B     		ldr	r3, .L137
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 55


 1581 0006 1B68     		ldr	r3, [r3]
 1582 0008 034A     		ldr	r2, .L137+4
 1583 000a 1340     		and	r3, r2
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
 1584              		.loc 1 1484 0
 1585 000c 181C     		mov	r0, r3
 1586 000e BD46     		mov	sp, r7
 1587              		@ sp needed
 1588 0010 80BD     		pop	{r7, pc}
 1589              	.L138:
 1590 0012 C046     		.align	2
 1591              	.L137:
 1592 0014 10020B40 		.word	1074463248
 1593 0018 04040400 		.word	263172
 1594              		.cfi_endproc
 1595              	.LFE23:
 1596              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 1597              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 1598              		.align	2
 1599              		.global	CySysWdtClearInterrupt
 1600              		.code	16
 1601              		.thumb_func
 1602              		.type	CySysWdtClearInterrupt, %function
 1603              	CySysWdtClearInterrupt:
 1604              	.LFB24:
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
 1605              		.loc 1 1511 0
 1606              		.cfi_startproc
 1607 0000 90B5     		push	{r4, r7, lr}
 1608              		.cfi_def_cfa_offset 12
 1609              		.cfi_offset 4, -12
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 56


 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 85B0     		sub	sp, sp, #20
 1613              		.cfi_def_cfa_offset 32
 1614 0004 00AF     		add	r7, sp, #0
 1615              		.cfi_def_cfa_register 7
 1616 0006 7860     		str	r0, [r7, #4]
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1617              		.loc 1 1515 0
 1618 0008 0B23     		mov	r3, #11
 1619 000a FC18     		add	r4, r7, r3
 1620 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1621 0010 031C     		mov	r3, r0
 1622 0012 2370     		strb	r3, [r4]
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
 1623              		.loc 1 1517 0
 1624 0014 FFF7FEFF 		bl	CySysWdtLocked
 1625 0018 031E     		sub	r3, r0, #0
 1626 001a 04D0     		beq	.L140
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
 1627              		.loc 1 1519 0
 1628 001c 0123     		mov	r3, #1
 1629 001e FB60     		str	r3, [r7, #12]
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 1630              		.loc 1 1520 0
 1631 0020 FFF7FEFF 		bl	CySysWdtUnlock
 1632 0024 01E0     		b	.L141
 1633              	.L140:
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
 1634              		.loc 1 1524 0
 1635 0026 0023     		mov	r3, #0
 1636 0028 FB60     		str	r3, [r7, #12]
 1637              	.L141:
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
 1638              		.loc 1 1528 0
 1639 002a 7B68     		ldr	r3, [r7, #4]
 1640 002c 0D4A     		ldr	r2, .L143
 1641 002e 1340     		and	r3, r2
 1642 0030 7B60     		str	r3, [r7, #4]
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
 1643              		.loc 1 1532 0
 1644 0032 0D4B     		ldr	r3, .L143+4
 1645 0034 0C4A     		ldr	r2, .L143+4
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 57


 1646 0036 1268     		ldr	r2, [r2]
 1647 0038 0C49     		ldr	r1, .L143+8
 1648 003a 1140     		and	r1, r2
 1649 003c 7A68     		ldr	r2, [r7, #4]
 1650 003e 0A43     		orr	r2, r1
 1651 0040 1A60     		str	r2, [r3]
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
 1652              		.loc 1 1539 0
 1653 0042 094B     		ldr	r3, .L143+4
 1654 0044 1B68     		ldr	r3, [r3]
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
 1655              		.loc 1 1541 0
 1656 0046 FB68     		ldr	r3, [r7, #12]
 1657 0048 012B     		cmp	r3, #1
 1658 004a 01D1     		bne	.L142
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
 1659              		.loc 1 1543 0
 1660 004c FFF7FEFF 		bl	CySysWdtLock
 1661              	.L142:
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1662              		.loc 1 1546 0
 1663 0050 0B23     		mov	r3, #11
 1664 0052 FB18     		add	r3, r7, r3
 1665 0054 1B78     		ldrb	r3, [r3]
 1666 0056 181C     		mov	r0, r3
 1667 0058 FFF7FEFF 		bl	CyExitCriticalSection
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
 1668              		.loc 1 1547 0
 1669 005c BD46     		mov	sp, r7
 1670 005e 05B0     		add	sp, sp, #20
 1671              		@ sp needed
 1672 0060 90BD     		pop	{r4, r7, pc}
 1673              	.L144:
 1674 0062 C046     		.align	2
 1675              	.L143:
 1676 0064 04040400 		.word	263172
 1677 0068 10020B40 		.word	1074463248
 1678 006c FBFBFBFF 		.word	-263173
 1679              		.cfi_endproc
 1680              	.LFE24:
 1681              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 1682              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 1683              		.align	2
 1684              		.global	CySysWdtResetCounters
 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CySysWdtResetCounters, %function
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 58


 1688              	CySysWdtResetCounters:
 1689              	.LFB25:
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
 1690              		.loc 1 1569 0
 1691              		.cfi_startproc
 1692 0000 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 82B0     		sub	sp, sp, #8
 1697              		.cfi_def_cfa_offset 16
 1698 0004 00AF     		add	r7, sp, #0
 1699              		.cfi_def_cfa_register 7
 1700 0006 7860     		str	r0, [r7, #4]
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
 1701              		.loc 1 1571 0
 1702 0008 084B     		ldr	r3, .L147
 1703 000a 084A     		ldr	r2, .L147
 1704 000c 1168     		ldr	r1, [r2]
 1705 000e 7A68     		ldr	r2, [r7, #4]
 1706 0010 0748     		ldr	r0, .L147+4
 1707 0012 0240     		and	r2, r0
 1708 0014 0A43     		orr	r2, r1
 1709 0016 1A60     		str	r2, [r3]
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
 1710              		.loc 1 1573 0
 1711 0018 C046     		mov	r8, r8
 1712              	.L146:
 1713              		.loc 1 1573 0 is_stmt 0 discriminator 1
 1714 001a 044B     		ldr	r3, .L147
 1715 001c 1B68     		ldr	r3, [r3]
 1716 001e 044A     		ldr	r2, .L147+4
 1717 0020 1340     		and	r3, r2
 1718 0022 FAD1     		bne	.L146
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 59


1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
 1719              		.loc 1 1577 0 is_stmt 1
 1720 0024 BD46     		mov	sp, r7
 1721 0026 02B0     		add	sp, sp, #8
 1722              		@ sp needed
 1723 0028 80BD     		pop	{r7, pc}
 1724              	.L148:
 1725 002a C046     		.align	2
 1726              	.L147:
 1727 002c 10020B40 		.word	1074463248
 1728 0030 08080800 		.word	526344
 1729              		.cfi_endproc
 1730              	.LFE25:
 1731              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 1732              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 1733              		.align	2
 1734              		.global	CySysWdtSetInterruptCallback
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	CySysWdtSetInterruptCallback, %function
 1738              	CySysWdtSetInterruptCallback:
 1739              	.LFB26:
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
 1740              		.loc 1 1595 0
 1741              		.cfi_startproc
 1742 0000 80B5     		push	{r7, lr}
 1743              		.cfi_def_cfa_offset 8
 1744              		.cfi_offset 7, -8
 1745              		.cfi_offset 14, -4
 1746 0002 84B0     		sub	sp, sp, #16
 1747              		.cfi_def_cfa_offset 24
 1748 0004 00AF     		add	r7, sp, #0
 1749              		.cfi_def_cfa_register 7
 1750 0006 7860     		str	r0, [r7, #4]
 1751 0008 3960     		str	r1, [r7]
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 1752              		.loc 1 1596 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 60


 1753 000a 0023     		mov	r3, #0
 1754 000c FB60     		str	r3, [r7, #12]
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 1755              		.loc 1 1598 0
 1756 000e 7B68     		ldr	r3, [r7, #4]
 1757 0010 022B     		cmp	r3, #2
 1758 0012 0AD8     		bhi	.L150
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
 1759              		.loc 1 1600 0
 1760 0014 094B     		ldr	r3, .L153
 1761 0016 7A68     		ldr	r2, [r7, #4]
 1762 0018 9200     		lsl	r2, r2, #2
 1763 001a D358     		ldr	r3, [r2, r3]
 1764 001c FB60     		str	r3, [r7, #12]
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 1765              		.loc 1 1601 0
 1766 001e 074B     		ldr	r3, .L153
 1767 0020 7A68     		ldr	r2, [r7, #4]
 1768 0022 9200     		lsl	r2, r2, #2
 1769 0024 3968     		ldr	r1, [r7]
 1770 0026 D150     		str	r1, [r2, r3]
 1771 0028 02E0     		b	.L151
 1772              	.L150:
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1773              		.loc 1 1605 0 discriminator 1
 1774 002a 0020     		mov	r0, #0
 1775 002c FFF7FEFF 		bl	CyHalt
 1776              	.L151:
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
 1777              		.loc 1 1608 0
 1778 0030 FB68     		ldr	r3, [r7, #12]
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
 1779              		.loc 1 1609 0
 1780 0032 181C     		mov	r0, r3
 1781 0034 BD46     		mov	sp, r7
 1782 0036 04B0     		add	sp, sp, #16
 1783              		@ sp needed
 1784 0038 80BD     		pop	{r7, pc}
 1785              	.L154:
 1786 003a C046     		.align	2
 1787              	.L153:
 1788 003c 0C000000 		.word	cySysWdtCallback
 1789              		.cfi_endproc
 1790              	.LFE26:
 1791              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1792              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1793              		.align	2
 1794              		.global	CySysWdtGetInterruptCallback
 1795              		.code	16
 1796              		.thumb_func
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 61


 1797              		.type	CySysWdtGetInterruptCallback, %function
 1798              	CySysWdtGetInterruptCallback:
 1799              	.LFB27:
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
 1800              		.loc 1 1625 0
 1801              		.cfi_startproc
 1802 0000 80B5     		push	{r7, lr}
 1803              		.cfi_def_cfa_offset 8
 1804              		.cfi_offset 7, -8
 1805              		.cfi_offset 14, -4
 1806 0002 84B0     		sub	sp, sp, #16
 1807              		.cfi_def_cfa_offset 24
 1808 0004 00AF     		add	r7, sp, #0
 1809              		.cfi_def_cfa_register 7
 1810 0006 7860     		str	r0, [r7, #4]
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 1811              		.loc 1 1626 0
 1812 0008 0023     		mov	r3, #0
 1813 000a FB60     		str	r3, [r7, #12]
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 1814              		.loc 1 1628 0
 1815 000c 7B68     		ldr	r3, [r7, #4]
 1816 000e 022B     		cmp	r3, #2
 1817 0010 05D8     		bhi	.L156
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
 1818              		.loc 1 1630 0
 1819 0012 074B     		ldr	r3, .L159
 1820 0014 7A68     		ldr	r2, [r7, #4]
 1821 0016 9200     		lsl	r2, r2, #2
 1822 0018 D358     		ldr	r3, [r2, r3]
 1823 001a FB60     		str	r3, [r7, #12]
 1824 001c 02E0     		b	.L157
 1825              	.L156:
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1826              		.loc 1 1634 0 discriminator 1
 1827 001e 0020     		mov	r0, #0
 1828 0020 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 62


 1829              	.L157:
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
 1830              		.loc 1 1637 0
 1831 0024 FB68     		ldr	r3, [r7, #12]
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
 1832              		.loc 1 1638 0
 1833 0026 181C     		mov	r0, r3
 1834 0028 BD46     		mov	sp, r7
 1835 002a 04B0     		add	sp, sp, #16
 1836              		@ sp needed
 1837 002c 80BD     		pop	{r7, pc}
 1838              	.L160:
 1839 002e C046     		.align	2
 1840              	.L159:
 1841 0030 0C000000 		.word	cySysWdtCallback
 1842              		.cfi_endproc
 1843              	.LFE27:
 1844              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1845              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 1846              		.align	2
 1847              		.global	CySysWdtEnableCounterIsr
 1848              		.code	16
 1849              		.thumb_func
 1850              		.type	CySysWdtEnableCounterIsr, %function
 1851              	CySysWdtEnableCounterIsr:
 1852              	.LFB28:
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
 1853              		.loc 1 1654 0
 1854              		.cfi_startproc
 1855 0000 80B5     		push	{r7, lr}
 1856              		.cfi_def_cfa_offset 8
 1857              		.cfi_offset 7, -8
 1858              		.cfi_offset 14, -4
 1859 0002 82B0     		sub	sp, sp, #8
 1860              		.cfi_def_cfa_offset 16
 1861 0004 00AF     		add	r7, sp, #0
 1862              		.cfi_def_cfa_register 7
 1863 0006 7860     		str	r0, [r7, #4]
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 1864              		.loc 1 1655 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 63


 1865 0008 7B68     		ldr	r3, [r7, #4]
 1866 000a 022B     		cmp	r3, #2
 1867 000c 13D8     		bhi	.L162
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
 1868              		.loc 1 1657 0
 1869 000e 0D4B     		ldr	r3, .L164
 1870 0010 7A68     		ldr	r2, [r7, #4]
 1871 0012 9200     		lsl	r2, r2, #2
 1872 0014 D358     		ldr	r3, [r2, r3]
 1873 0016 DA43     		mvn	r2, r3
 1874 0018 0B4B     		ldr	r3, .L164+4
 1875 001a 1B68     		ldr	r3, [r3]
 1876 001c 1A40     		and	r2, r3
 1877 001e 0A4B     		ldr	r3, .L164+4
 1878 0020 1A60     		str	r2, [r3]
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 1879              		.loc 1 1658 0
 1880 0022 084B     		ldr	r3, .L164
 1881 0024 7A68     		ldr	r2, [r7, #4]
 1882 0026 9200     		lsl	r2, r2, #2
 1883 0028 D258     		ldr	r2, [r2, r3]
 1884 002a 084B     		ldr	r3, .L164+8
 1885 002c 1B68     		ldr	r3, [r3]
 1886 002e 1A43     		orr	r2, r3
 1887 0030 064B     		ldr	r3, .L164+8
 1888 0032 1A60     		str	r2, [r3]
 1889 0034 02E0     		b	.L161
 1890              	.L162:
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1891              		.loc 1 1662 0 discriminator 1
 1892 0036 0020     		mov	r0, #0
 1893 0038 FFF7FEFF 		bl	CyHalt
 1894              	.L161:
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
 1895              		.loc 1 1664 0
 1896 003c BD46     		mov	sp, r7
 1897 003e 02B0     		add	sp, sp, #8
 1898              		@ sp needed
 1899 0040 80BD     		pop	{r7, pc}
 1900              	.L165:
 1901 0042 C046     		.align	2
 1902              	.L164:
 1903 0044 00000000 		.word	counterIntMaskTbl
 1904 0048 08000000 		.word	disableServicedIsr
 1905 004c 00000000 		.word	wdtIsrMask
 1906              		.cfi_endproc
 1907              	.LFE28:
 1908              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 1909              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 1910              		.align	2
 1911              		.global	CySysWdtDisableCounterIsr
 1912              		.code	16
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 64


 1913              		.thumb_func
 1914              		.type	CySysWdtDisableCounterIsr, %function
 1915              	CySysWdtDisableCounterIsr:
 1916              	.LFB29:
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
 1917              		.loc 1 1677 0
 1918              		.cfi_startproc
 1919 0000 80B5     		push	{r7, lr}
 1920              		.cfi_def_cfa_offset 8
 1921              		.cfi_offset 7, -8
 1922              		.cfi_offset 14, -4
 1923 0002 82B0     		sub	sp, sp, #8
 1924              		.cfi_def_cfa_offset 16
 1925 0004 00AF     		add	r7, sp, #0
 1926              		.cfi_def_cfa_register 7
 1927 0006 7860     		str	r0, [r7, #4]
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 1928              		.loc 1 1678 0
 1929 0008 7B68     		ldr	r3, [r7, #4]
 1930 000a 022B     		cmp	r3, #2
 1931 000c 0AD8     		bhi	.L167
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
 1932              		.loc 1 1680 0
 1933 000e 084B     		ldr	r3, .L169
 1934 0010 7A68     		ldr	r2, [r7, #4]
 1935 0012 9200     		lsl	r2, r2, #2
 1936 0014 D358     		ldr	r3, [r2, r3]
 1937 0016 DA43     		mvn	r2, r3
 1938 0018 064B     		ldr	r3, .L169+4
 1939 001a 1B68     		ldr	r3, [r3]
 1940 001c 1A40     		and	r2, r3
 1941 001e 054B     		ldr	r3, .L169+4
 1942 0020 1A60     		str	r2, [r3]
 1943 0022 02E0     		b	.L166
 1944              	.L167:
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1945              		.loc 1 1684 0 discriminator 1
 1946 0024 0020     		mov	r0, #0
 1947 0026 FFF7FEFF 		bl	CyHalt
 1948              	.L166:
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 65


1686:Generated_Source\PSoC4/CyLFClk.c ****     }
 1949              		.loc 1 1686 0
 1950 002a BD46     		mov	sp, r7
 1951 002c 02B0     		add	sp, sp, #8
 1952              		@ sp needed
 1953 002e 80BD     		pop	{r7, pc}
 1954              	.L170:
 1955              		.align	2
 1956              	.L169:
 1957 0030 00000000 		.word	counterIntMaskTbl
 1958 0034 00000000 		.word	wdtIsrMask
 1959              		.cfi_endproc
 1960              	.LFE29:
 1961              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 1962              		.section	.text.CySysWdtIsr,"ax",%progbits
 1963              		.align	2
 1964              		.global	CySysWdtIsr
 1965              		.code	16
 1966              		.thumb_func
 1967              		.type	CySysWdtIsr, %function
 1968              	CySysWdtIsr:
 1969              	.LFB30:
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
 1970              		.loc 1 1710 0
 1971              		.cfi_startproc
 1972 0000 80B5     		push	{r7, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 7, -8
 1975              		.cfi_offset 14, -4
 1976 0002 00AF     		add	r7, sp, #0
 1977              		.cfi_def_cfa_register 7
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 1978              		.loc 1 1711 0
 1979 0004 334B     		ldr	r3, .L178
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 66


 1980 0006 1B68     		ldr	r3, [r3]
 1981 0008 0422     		mov	r2, #4
 1982 000a 1340     		and	r3, r2
 1983 000c 1FD0     		beq	.L172
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
 1984              		.loc 1 1713 0
 1985 000e 324B     		ldr	r3, .L178+4
 1986 0010 1B68     		ldr	r3, [r3]
 1987 0012 0422     		mov	r2, #4
 1988 0014 1340     		and	r3, r2
 1989 0016 17D0     		beq	.L173
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
 1990              		.loc 1 1715 0
 1991 0018 304B     		ldr	r3, .L178+8
 1992 001a 1B68     		ldr	r3, [r3]
 1993 001c 0422     		mov	r2, #4
 1994 001e 1340     		and	r3, r2
 1995 0020 DA43     		mvn	r2, r3
 1996 0022 2D4B     		ldr	r3, .L178+4
 1997 0024 1B68     		ldr	r3, [r3]
 1998 0026 1A40     		and	r2, r3
 1999 0028 2B4B     		ldr	r3, .L178+4
 2000 002a 1A60     		str	r2, [r3]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 2001              		.loc 1 1716 0
 2002 002c 2B4B     		ldr	r3, .L178+8
 2003 002e 1B68     		ldr	r3, [r3]
 2004 0030 0422     		mov	r2, #4
 2005 0032 9343     		bic	r3, r2
 2006 0034 1A1C     		mov	r2, r3
 2007 0036 294B     		ldr	r3, .L178+8
 2008 0038 1A60     		str	r2, [r3]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 2009              		.loc 1 1717 0
 2010 003a 294B     		ldr	r3, .L178+12
 2011 003c 1B68     		ldr	r3, [r3]
 2012 003e 002B     		cmp	r3, #0
 2013 0040 02D0     		beq	.L173
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
 2014              		.loc 1 1719 0
 2015 0042 274B     		ldr	r3, .L178+12
 2016 0044 1B68     		ldr	r3, [r3]
 2017 0046 9847     		blx	r3
 2018              	.L173:
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 2019              		.loc 1 1722 0
 2020 0048 0420     		mov	r0, #4
 2021 004a FFF7FEFF 		bl	CySysWdtClearInterrupt
 2022              	.L172:
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 67


 2023              		.loc 1 1725 0
 2024 004e 214B     		ldr	r3, .L178
 2025 0050 1A68     		ldr	r2, [r3]
 2026 0052 8023     		mov	r3, #128
 2027 0054 DB00     		lsl	r3, r3, #3
 2028 0056 1340     		and	r3, r2
 2029 0058 22D0     		beq	.L174
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
 2030              		.loc 1 1727 0
 2031 005a 1F4B     		ldr	r3, .L178+4
 2032 005c 1A68     		ldr	r2, [r3]
 2033 005e 8023     		mov	r3, #128
 2034 0060 DB00     		lsl	r3, r3, #3
 2035 0062 1340     		and	r3, r2
 2036 0064 17D0     		beq	.L175
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
 2037              		.loc 1 1729 0
 2038 0066 1D4B     		ldr	r3, .L178+8
 2039 0068 1A68     		ldr	r2, [r3]
 2040 006a 8023     		mov	r3, #128
 2041 006c DB00     		lsl	r3, r3, #3
 2042 006e 1340     		and	r3, r2
 2043 0070 DA43     		mvn	r2, r3
 2044 0072 194B     		ldr	r3, .L178+4
 2045 0074 1B68     		ldr	r3, [r3]
 2046 0076 1A40     		and	r2, r3
 2047 0078 174B     		ldr	r3, .L178+4
 2048 007a 1A60     		str	r2, [r3]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 2049              		.loc 1 1730 0
 2050 007c 174B     		ldr	r3, .L178+8
 2051 007e 1B68     		ldr	r3, [r3]
 2052 0080 184A     		ldr	r2, .L178+16
 2053 0082 1A40     		and	r2, r3
 2054 0084 154B     		ldr	r3, .L178+8
 2055 0086 1A60     		str	r2, [r3]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 2056              		.loc 1 1731 0
 2057 0088 154B     		ldr	r3, .L178+12
 2058 008a 5B68     		ldr	r3, [r3, #4]
 2059 008c 002B     		cmp	r3, #0
 2060 008e 02D0     		beq	.L175
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
 2061              		.loc 1 1733 0
 2062 0090 134B     		ldr	r3, .L178+12
 2063 0092 5B68     		ldr	r3, [r3, #4]
 2064 0094 9847     		blx	r3
 2065              	.L175:
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 2066              		.loc 1 1736 0
 2067 0096 8023     		mov	r3, #128
 2068 0098 DB00     		lsl	r3, r3, #3
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 68


 2069 009a 181C     		mov	r0, r3
 2070 009c FFF7FEFF 		bl	CySysWdtClearInterrupt
 2071              	.L174:
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
 2072              		.loc 1 1739 0
 2073 00a0 0C4B     		ldr	r3, .L178
 2074 00a2 1A68     		ldr	r2, [r3]
 2075 00a4 8023     		mov	r3, #128
 2076 00a6 DB02     		lsl	r3, r3, #11
 2077 00a8 1340     		and	r3, r2
 2078 00aa 11D0     		beq	.L171
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
 2079              		.loc 1 1741 0
 2080 00ac 0A4B     		ldr	r3, .L178+4
 2081 00ae 1A68     		ldr	r2, [r3]
 2082 00b0 8023     		mov	r3, #128
 2083 00b2 DB02     		lsl	r3, r3, #11
 2084 00b4 1340     		and	r3, r2
 2085 00b6 06D0     		beq	.L177
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
 2086              		.loc 1 1743 0
 2087 00b8 094B     		ldr	r3, .L178+12
 2088 00ba 9B68     		ldr	r3, [r3, #8]
 2089 00bc 002B     		cmp	r3, #0
 2090 00be 02D0     		beq	.L177
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
 2091              		.loc 1 1745 0
 2092 00c0 074B     		ldr	r3, .L178+12
 2093 00c2 9B68     		ldr	r3, [r3, #8]
 2094 00c4 9847     		blx	r3
 2095              	.L177:
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
 2096              		.loc 1 1748 0
 2097 00c6 8023     		mov	r3, #128
 2098 00c8 DB02     		lsl	r3, r3, #11
 2099 00ca 181C     		mov	r0, r3
 2100 00cc FFF7FEFF 		bl	CySysWdtClearInterrupt
 2101              	.L171:
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
 2102              		.loc 1 1750 0
 2103 00d0 BD46     		mov	sp, r7
 2104              		@ sp needed
 2105 00d2 80BD     		pop	{r7, pc}
 2106              	.L179:
 2107              		.align	2
 2108              	.L178:
 2109 00d4 10020B40 		.word	1074463248
 2110 00d8 00000000 		.word	wdtIsrMask
 2111 00dc 08000000 		.word	disableServicedIsr
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 69


 2112 00e0 0C000000 		.word	cySysWdtCallback
 2113 00e4 FFFBFFFF 		.word	-1025
 2114              		.cfi_endproc
 2115              	.LFE30:
 2116              		.size	CySysWdtIsr, .-CySysWdtIsr
 2117              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 2118              		.align	2
 2119              		.global	CySysWatchdogFeed
 2120              		.code	16
 2121              		.thumb_func
 2122              		.type	CySysWatchdogFeed, %function
 2123              	CySysWatchdogFeed:
 2124              	.LFB31:
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
 2125              		.loc 1 1775 0
 2126              		.cfi_startproc
 2127 0000 80B5     		push	{r7, lr}
 2128              		.cfi_def_cfa_offset 8
 2129              		.cfi_offset 7, -8
 2130              		.cfi_offset 14, -4
 2131 0002 82B0     		sub	sp, sp, #8
 2132              		.cfi_def_cfa_offset 16
 2133 0004 00AF     		add	r7, sp, #0
 2134              		.cfi_def_cfa_register 7
 2135 0006 7860     		str	r0, [r7, #4]
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 2136              		.loc 1 1776 0
 2137 0008 7B68     		ldr	r3, [r7, #4]
 2138 000a 002B     		cmp	r3, #0
 2139 000c 18D1     		bne	.L181
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 2140              		.loc 1 1778 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 70


 2141 000e 7B68     		ldr	r3, [r7, #4]
 2142 0010 181C     		mov	r0, r3
 2143 0012 FFF7FEFF 		bl	CySysWdtGetMode
 2144 0016 031E     		sub	r3, r0, #0
 2145 0018 032B     		cmp	r3, #3
 2146 001a 03D1     		bne	.L182
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 2147              		.loc 1 1780 0
 2148 001c 0420     		mov	r0, #4
 2149 001e FFF7FEFF 		bl	CySysWdtClearInterrupt
 2150 0022 2EE0     		b	.L180
 2151              	.L182:
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
 2152              		.loc 1 1782 0
 2153 0024 7B68     		ldr	r3, [r7, #4]
 2154 0026 181C     		mov	r0, r3
 2155 0028 FFF7FEFF 		bl	CySysWdtGetMode
 2156 002c 031E     		sub	r3, r0, #0
 2157 002e 022B     		cmp	r3, #2
 2158 0030 27D1     		bne	.L180
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
 2159              		.loc 1 1784 0
 2160 0032 0820     		mov	r0, #8
 2161 0034 FFF7FEFF 		bl	CySysWdtResetCounters
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 2162              		.loc 1 1785 0
 2163 0038 0420     		mov	r0, #4
 2164 003a FFF7FEFF 		bl	CySysWdtClearInterrupt
 2165 003e 20E0     		b	.L180
 2166              	.L181:
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
 2167              		.loc 1 1792 0
 2168 0040 7B68     		ldr	r3, [r7, #4]
 2169 0042 012B     		cmp	r3, #1
 2170 0044 1DD1     		bne	.L180
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 2171              		.loc 1 1794 0
 2172 0046 7B68     		ldr	r3, [r7, #4]
 2173 0048 181C     		mov	r0, r3
 2174 004a FFF7FEFF 		bl	CySysWdtGetMode
 2175 004e 031E     		sub	r3, r0, #0
 2176 0050 032B     		cmp	r3, #3
 2177 0052 05D1     		bne	.L184
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 2178              		.loc 1 1796 0
 2179 0054 8023     		mov	r3, #128
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 71


 2180 0056 DB00     		lsl	r3, r3, #3
 2181 0058 181C     		mov	r0, r3
 2182 005a FFF7FEFF 		bl	CySysWdtClearInterrupt
 2183 005e 10E0     		b	.L180
 2184              	.L184:
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
 2185              		.loc 1 1798 0
 2186 0060 7B68     		ldr	r3, [r7, #4]
 2187 0062 181C     		mov	r0, r3
 2188 0064 FFF7FEFF 		bl	CySysWdtGetMode
 2189 0068 031E     		sub	r3, r0, #0
 2190 006a 022B     		cmp	r3, #2
 2191 006c 09D1     		bne	.L180
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
 2192              		.loc 1 1800 0
 2193 006e 8023     		mov	r3, #128
 2194 0070 1B01     		lsl	r3, r3, #4
 2195 0072 181C     		mov	r0, r3
 2196 0074 FFF7FEFF 		bl	CySysWdtResetCounters
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 2197              		.loc 1 1801 0
 2198 0078 8023     		mov	r3, #128
 2199 007a DB00     		lsl	r3, r3, #3
 2200 007c 181C     		mov	r0, r3
 2201 007e FFF7FEFF 		bl	CySysWdtClearInterrupt
 2202              	.L180:
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
 2203              		.loc 1 1812 0
 2204 0082 BD46     		mov	sp, r7
 2205 0084 02B0     		add	sp, sp, #8
 2206              		@ sp needed
 2207 0086 80BD     		pop	{r7, pc}
 2208              		.cfi_endproc
 2209              	.LFE31:
 2210              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 2211              		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 2212              		.align	2
 2213              		.code	16
 2214              		.thumb_func
 2215              		.type	CySysClkLfclkPosedgeCatch, %function
 2216              	CySysClkLfclkPosedgeCatch:
 2217              	.LFB32:
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 72


1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
 2218              		.loc 1 1841 0
 2219              		.cfi_startproc
 2220 0000 80B5     		push	{r7, lr}
 2221              		.cfi_def_cfa_offset 8
 2222              		.cfi_offset 7, -8
 2223              		.cfi_offset 14, -4
 2224 0002 82B0     		sub	sp, sp, #8
 2225              		.cfi_def_cfa_offset 16
 2226 0004 00AF     		add	r7, sp, #0
 2227              		.cfi_def_cfa_register 7
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 2228              		.loc 1 1845 0
 2229 0006 0020     		mov	r0, #0
 2230 0008 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2231 000c 031E     		sub	r3, r0, #0
 2232 000e 03D0     		beq	.L186
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 2233              		.loc 1 1847 0
 2234 0010 1E4B     		ldr	r3, .L191
 2235 0012 0022     		mov	r2, #0
 2236 0014 1A60     		str	r2, [r3]
 2237 0016 24E0     		b	.L187
 2238              	.L186:
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2239              		.loc 1 1849 0
 2240 0018 0120     		mov	r0, #1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 73


 2241 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2242 001e 031E     		sub	r3, r0, #0
 2243 0020 03D0     		beq	.L188
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
 2244              		.loc 1 1851 0
 2245 0022 1A4B     		ldr	r3, .L191
 2246 0024 0122     		mov	r2, #1
 2247 0026 1A60     		str	r2, [r3]
 2248 0028 1BE0     		b	.L187
 2249              	.L188:
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2250              		.loc 1 1853 0
 2251 002a 0220     		mov	r0, #2
 2252 002c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2253 0030 031E     		sub	r3, r0, #0
 2254 0032 03D0     		beq	.L189
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
 2255              		.loc 1 1855 0
 2256 0034 154B     		ldr	r3, .L191
 2257 0036 0222     		mov	r2, #2
 2258 0038 1A60     		str	r2, [r3]
 2259 003a 12E0     		b	.L187
 2260              	.L189:
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
 2261              		.loc 1 1860 0
 2262 003c 144B     		ldr	r3, .L191+4
 2263 003e 0122     		mov	r2, #1
 2264 0040 1A60     		str	r2, [r3]
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 2265              		.loc 1 1861 0
 2266 0042 124B     		ldr	r3, .L191
 2267 0044 0022     		mov	r2, #0
 2268 0046 1A60     		str	r2, [r3]
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
 2269              		.loc 1 1863 0
 2270 0048 0020     		mov	r0, #0
 2271 004a FFF7FEFF 		bl	CySysWdtGetMode
 2272 004e 021C     		mov	r2, r0
 2273 0050 104B     		ldr	r3, .L191+8
 2274 0052 1A60     		str	r2, [r3]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 2275              		.loc 1 1864 0
 2276 0054 0020     		mov	r0, #0
 2277 0056 0021     		mov	r1, #0
 2278 0058 FFF7FEFF 		bl	CySysWdtSetMode
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 2279              		.loc 1 1865 0
 2280 005c 0120     		mov	r0, #1
 2281 005e FFF7FEFF 		bl	CySysWdtEnable
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 74


 2282              	.L187:
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
 2283              		.loc 1 1868 0
 2284 0062 0A4B     		ldr	r3, .L191
 2285 0064 1B68     		ldr	r3, [r3]
 2286 0066 181C     		mov	r0, r3
 2287 0068 FFF7FEFF 		bl	CySysWdtGetCount
 2288 006c 031C     		mov	r3, r0
 2289 006e 7B60     		str	r3, [r7, #4]
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 2290              		.loc 1 1869 0
 2291 0070 C046     		mov	r8, r8
 2292              	.L190:
 2293              		.loc 1 1869 0 is_stmt 0 discriminator 1
 2294 0072 064B     		ldr	r3, .L191
 2295 0074 1B68     		ldr	r3, [r3]
 2296 0076 181C     		mov	r0, r3
 2297 0078 FFF7FEFF 		bl	CySysWdtGetCount
 2298 007c 021E     		sub	r2, r0, #0
 2299 007e 7B68     		ldr	r3, [r7, #4]
 2300 0080 9A42     		cmp	r2, r3
 2301 0082 F6D0     		beq	.L190
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
 2302              		.loc 1 1873 0 is_stmt 1
 2303 0084 BD46     		mov	sp, r7
 2304 0086 02B0     		add	sp, sp, #8
 2305              		@ sp needed
 2306 0088 80BD     		pop	{r7, pc}
 2307              	.L192:
 2308 008a C046     		.align	2
 2309              	.L191:
 2310 008c 1C000000 		.word	lfclkPosedgeEnabledWdtCounter.4845
 2311 0090 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 2312 0094 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 2313              		.cfi_endproc
 2314              	.LFE32:
 2315              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 2316              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 2317              		.align	2
 2318              		.code	16
 2319              		.thumb_func
 2320              		.type	CySysClkLfclkPosedgeRestore, %function
 2321              	CySysClkLfclkPosedgeRestore:
 2322              	.LFB33:
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 75


1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
 2323              		.loc 1 1895 0
 2324              		.cfi_startproc
 2325 0000 80B5     		push	{r7, lr}
 2326              		.cfi_def_cfa_offset 8
 2327              		.cfi_offset 7, -8
 2328              		.cfi_offset 14, -4
 2329 0002 00AF     		add	r7, sp, #0
 2330              		.cfi_def_cfa_register 7
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 2331              		.loc 1 1896 0
 2332 0004 0A4B     		ldr	r3, .L195
 2333 0006 1B68     		ldr	r3, [r3]
 2334 0008 002B     		cmp	r3, #0
 2335 000a 0ED0     		beq	.L193
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 2336              		.loc 1 1899 0
 2337 000c 094B     		ldr	r3, .L195+4
 2338 000e 094A     		ldr	r2, .L195+4
 2339 0010 1268     		ldr	r2, [r2]
 2340 0012 0121     		mov	r1, #1
 2341 0014 8A43     		bic	r2, r1
 2342 0016 1A60     		str	r2, [r3]
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 2343              		.loc 1 1900 0
 2344 0018 074B     		ldr	r3, .L195+8
 2345 001a 1B68     		ldr	r3, [r3]
 2346 001c 0020     		mov	r0, #0
 2347 001e 191C     		mov	r1, r3
 2348 0020 FFF7FEFF 		bl	CySysWdtSetMode
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 2349              		.loc 1 1901 0
 2350 0024 024B     		ldr	r3, .L195
 2351 0026 0022     		mov	r2, #0
 2352 0028 1A60     		str	r2, [r3]
 2353              	.L193:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
 2354              		.loc 1 1903 0
 2355 002a BD46     		mov	sp, r7
 2356              		@ sp needed
 2357 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 76


 2358              	.L196:
 2359 002e C046     		.align	2
 2360              	.L195:
 2361 0030 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 2362 0034 10020B40 		.word	1074463248
 2363 0038 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 2364              		.cfi_endproc
 2365              	.LFE33:
 2366              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 2367              		.section	.text.CySysTimerDelay,"ax",%progbits
 2368              		.align	2
 2369              		.global	CySysTimerDelay
 2370              		.code	16
 2371              		.thumb_func
 2372              		.type	CySysTimerDelay, %function
 2373              	CySysTimerDelay:
 2374              	.LFB34:
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 77


1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 78


2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 79


2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 80


2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 81


2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 82


2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 83


2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 84


2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 85


2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 86


2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 87


2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 88


2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 89


2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 90


2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 91


2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 92


2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 93


2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 94


2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 95


2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 96


3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
 2375              		.loc 1 3032 0
 2376              		.cfi_startproc
 2377 0000 80B5     		push	{r7, lr}
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 7, -8
 2380              		.cfi_offset 14, -4
 2381 0002 86B0     		sub	sp, sp, #24
 2382              		.cfi_def_cfa_offset 32
 2383 0004 00AF     		add	r7, sp, #0
 2384              		.cfi_def_cfa_register 7
 2385 0006 F860     		str	r0, [r7, #12]
 2386 0008 7A60     		str	r2, [r7, #4]
 2387 000a 0B23     		mov	r3, #11
 2388 000c FB18     		add	r3, r7, r3
 2389 000e 0A1C     		add	r2, r1, #0
 2390 0010 1A70     		strb	r2, [r3]
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 2391              		.loc 1 3037 0
 2392 0012 FB68     		ldr	r3, [r7, #12]
 2393 0014 012B     		cmp	r3, #1
 2394 0016 20D8     		bhi	.L198
 2395              		.loc 1 3037 0 is_stmt 0 discriminator 1
 2396 0018 FB68     		ldr	r3, [r7, #12]
 2397 001a 181C     		mov	r0, r3
 2398 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2399 0020 031E     		sub	r3, r0, #0
 2400 0022 1AD1     		bne	.L198
 2401              		.loc 1 3037 0 discriminator 2
 2402 0024 7B68     		ldr	r3, [r7, #4]
 2403 0026 104A     		ldr	r2, .L200
 2404 0028 9342     		cmp	r3, r2
 2405 002a 16D8     		bhi	.L198
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
 2406              		.loc 1 3040 0 is_stmt 1
 2407 002c FB68     		ldr	r3, [r7, #12]
 2408 002e 181C     		mov	r0, r3
 2409 0030 FFF7FEFF 		bl	CySysWdtGetCount
 2410 0034 031C     		mov	r3, r0
 2411 0036 7B61     		str	r3, [r7, #20]
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2412              		.loc 1 3041 0
 2413 0038 7A69     		ldr	r2, [r7, #20]
 2414 003a 7B68     		ldr	r3, [r7, #4]
 2415 003c D318     		add	r3, r2, r3
 2416 003e 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 97


 2417 0040 1B0C     		lsr	r3, r3, #16
 2418 0042 3B61     		str	r3, [r7, #16]
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
 2419              		.loc 1 3043 0
 2420 0044 F968     		ldr	r1, [r7, #12]
 2421 0046 0B23     		mov	r3, #11
 2422 0048 FB18     		add	r3, r7, r3
 2423 004a 1A78     		ldrb	r2, [r3]
 2424 004c 3B69     		ldr	r3, [r7, #16]
 2425 004e 081C     		mov	r0, r1
 2426 0050 111C     		mov	r1, r2
 2427 0052 1A1C     		mov	r2, r3
 2428 0054 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2429 0058 02E0     		b	.L197
 2430              	.L198:
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2431              		.loc 1 3047 0 discriminator 1
 2432 005a 0020     		mov	r0, #0
 2433 005c FFF7FEFF 		bl	CyHalt
 2434              	.L197:
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
 2435              		.loc 1 3065 0
 2436 0060 BD46     		mov	sp, r7
 2437 0062 06B0     		add	sp, sp, #24
 2438              		@ sp needed
 2439 0064 80BD     		pop	{r7, pc}
 2440              	.L201:
 2441 0066 C046     		.align	2
 2442              	.L200:
 2443 0068 FFFF0000 		.word	65535
 2444              		.cfi_endproc
 2445              	.LFE34:
 2446              		.size	CySysTimerDelay, .-CySysTimerDelay
 2447              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2448              		.align	2
 2449              		.global	CySysTimerDelayUntilMatch
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 98


 2450              		.code	16
 2451              		.thumb_func
 2452              		.type	CySysTimerDelayUntilMatch, %function
 2453              	CySysTimerDelayUntilMatch:
 2454              	.LFB35:
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 99


3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2455              		.loc 1 3161 0
 2456              		.cfi_startproc
 2457 0000 80B5     		push	{r7, lr}
 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 7, -8
 2460              		.cfi_offset 14, -4
 2461 0002 86B0     		sub	sp, sp, #24
 2462              		.cfi_def_cfa_offset 32
 2463 0004 00AF     		add	r7, sp, #0
 2464              		.cfi_def_cfa_register 7
 2465 0006 F860     		str	r0, [r7, #12]
 2466 0008 7A60     		str	r2, [r7, #4]
 2467 000a 0B23     		mov	r3, #11
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 100


 2468 000c FB18     		add	r3, r7, r3
 2469 000e 0A1C     		add	r2, r1, #0
 2470 0010 1A70     		strb	r2, [r3]
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 2471              		.loc 1 3165 0
 2472 0012 FB68     		ldr	r3, [r7, #12]
 2473 0014 012B     		cmp	r3, #1
 2474 0016 3BD8     		bhi	.L203
 2475              		.loc 1 3165 0 is_stmt 0 discriminator 1
 2476 0018 FB68     		ldr	r3, [r7, #12]
 2477 001a 181C     		mov	r0, r3
 2478 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2479 0020 031E     		sub	r3, r0, #0
 2480 0022 35D1     		bne	.L203
 2481              		.loc 1 3165 0 discriminator 2
 2482 0024 7B68     		ldr	r3, [r7, #4]
 2483 0026 1D4A     		ldr	r2, .L209
 2484 0028 9342     		cmp	r3, r2
 2485 002a 31D8     		bhi	.L203
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
 2486              		.loc 1 3168 0 is_stmt 1
 2487 002c 0B23     		mov	r3, #11
 2488 002e FB18     		add	r3, r7, r3
 2489 0030 1B78     		ldrb	r3, [r3]
 2490 0032 002B     		cmp	r3, #0
 2491 0034 14D1     		bne	.L204
 2492              	.L205:
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 2493              		.loc 1 3172 0 discriminator 1
 2494 0036 FB68     		ldr	r3, [r7, #12]
 2495 0038 181C     		mov	r0, r3
 2496 003a FFF7FEFF 		bl	CySysWdtGetCount
 2497 003e 031C     		mov	r3, r0
 2498 0040 7B61     		str	r3, [r7, #20]
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 2499              		.loc 1 3173 0 discriminator 1
 2500 0042 7A69     		ldr	r2, [r7, #20]
 2501 0044 7B68     		ldr	r3, [r7, #4]
 2502 0046 9A42     		cmp	r2, r3
 2503 0048 F5D8     		bhi	.L205
 2504              	.L206:
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 2505              		.loc 1 3177 0 discriminator 1
 2506 004a FB68     		ldr	r3, [r7, #12]
 2507 004c 181C     		mov	r0, r3
 2508 004e FFF7FEFF 		bl	CySysWdtGetCount
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 101


 2509 0052 031C     		mov	r3, r0
 2510 0054 7B61     		str	r3, [r7, #20]
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 2511              		.loc 1 3178 0 discriminator 1
 2512 0056 7A69     		ldr	r2, [r7, #20]
 2513 0058 7B68     		ldr	r3, [r7, #4]
 2514 005a 9A42     		cmp	r2, r3
 2515 005c F5D3     		bcc	.L206
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2516              		.loc 1 3168 0
 2517 005e 1AE0     		b	.L202
 2518              	.L204:
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 2519              		.loc 1 3182 0
 2520 0060 0F4B     		ldr	r3, .L209+4
 2521 0062 FA68     		ldr	r2, [r7, #12]
 2522 0064 9200     		lsl	r2, r2, #2
 2523 0066 D358     		ldr	r3, [r2, r3]
 2524 0068 7B61     		str	r3, [r7, #20]
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 2525              		.loc 1 3183 0
 2526 006a FA68     		ldr	r2, [r7, #12]
 2527 006c 7B68     		ldr	r3, [r7, #4]
 2528 006e 101C     		mov	r0, r2
 2529 0070 191C     		mov	r1, r3
 2530 0072 FFF7FEFF 		bl	CySysWdtSetMatch
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
 2531              		.loc 1 3185 0
 2532 0076 0B4B     		ldr	r3, .L209+8
 2533 0078 1A68     		ldr	r2, [r3]
 2534 007a 7B69     		ldr	r3, [r7, #20]
 2535 007c 1A43     		orr	r2, r3
 2536 007e 094B     		ldr	r3, .L209+8
 2537 0080 1A60     		str	r2, [r3]
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 2538              		.loc 1 3186 0
 2539 0082 094B     		ldr	r3, .L209+12
 2540 0084 1A68     		ldr	r2, [r3]
 2541 0086 7B69     		ldr	r3, [r7, #20]
 2542 0088 1A43     		orr	r2, r3
 2543 008a 074B     		ldr	r3, .L209+12
 2544 008c 1A60     		str	r2, [r3]
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 2545              		.loc 1 3168 0
 2546 008e 02E0     		b	.L202
 2547              	.L203:
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2548              		.loc 1 3191 0 discriminator 1
 2549 0090 0020     		mov	r0, #0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 102


 2550 0092 FFF7FEFF 		bl	CyHalt
 2551              	.L202:
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 2552              		.loc 1 3226 0
 2553 0096 BD46     		mov	sp, r7
 2554 0098 06B0     		add	sp, sp, #24
 2555              		@ sp needed
 2556 009a 80BD     		pop	{r7, pc}
 2557              	.L210:
 2558              		.align	2
 2559              	.L209:
 2560 009c FFFF0000 		.word	65535
 2561 00a0 00000000 		.word	counterIntMaskTbl
 2562 00a4 08000000 		.word	disableServicedIsr
 2563 00a8 00000000 		.word	wdtIsrMask
 2564              		.cfi_endproc
 2565              	.LFE35:
 2566              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2567              		.bss
 2568              		.align	2
 2569              	compensateRunningStatus.4714:
 2570 0018 00000000 		.space	4
 2571              		.align	2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 103


 2572              	lfclkPosedgeEnabledWdtCounter.4845:
 2573 001c 00000000 		.space	4
 2574              		.text
 2575              	.Letext0:
 2576              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2577              		.file 3 "Generated_Source\\PSoC4\\CyLFClk.h"
 2578              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 2579              		.section	.debug_info,"",%progbits
 2580              	.Ldebug_info0:
 2581 0000 0B080000 		.4byte	0x80b
 2582 0004 0400     		.2byte	0x4
 2583 0006 00000000 		.4byte	.Ldebug_abbrev0
 2584 000a 04       		.byte	0x4
 2585 000b 01       		.uleb128 0x1
 2586 000c 10060000 		.4byte	.LASF91
 2587 0010 01       		.byte	0x1
 2588 0011 FD040000 		.4byte	.LASF92
 2589 0015 58010000 		.4byte	.LASF93
 2590 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2591 001d 00000000 		.4byte	0
 2592 0021 00000000 		.4byte	.Ldebug_line0
 2593 0025 02       		.uleb128 0x2
 2594 0026 01       		.byte	0x1
 2595 0027 06       		.byte	0x6
 2596 0028 F3000000 		.4byte	.LASF0
 2597 002c 02       		.uleb128 0x2
 2598 002d 01       		.byte	0x1
 2599 002e 08       		.byte	0x8
 2600 002f 61040000 		.4byte	.LASF1
 2601 0033 02       		.uleb128 0x2
 2602 0034 02       		.byte	0x2
 2603 0035 05       		.byte	0x5
 2604 0036 AB040000 		.4byte	.LASF2
 2605 003a 02       		.uleb128 0x2
 2606 003b 02       		.byte	0x2
 2607 003c 07       		.byte	0x7
 2608 003d 12030000 		.4byte	.LASF3
 2609 0041 02       		.uleb128 0x2
 2610 0042 04       		.byte	0x4
 2611 0043 05       		.byte	0x5
 2612 0044 46010000 		.4byte	.LASF4
 2613 0048 02       		.uleb128 0x2
 2614 0049 04       		.byte	0x4
 2615 004a 07       		.byte	0x7
 2616 004b C0020000 		.4byte	.LASF5
 2617 004f 02       		.uleb128 0x2
 2618 0050 08       		.byte	0x8
 2619 0051 05       		.byte	0x5
 2620 0052 E5000000 		.4byte	.LASF6
 2621 0056 02       		.uleb128 0x2
 2622 0057 08       		.byte	0x8
 2623 0058 07       		.byte	0x7
 2624 0059 CE000000 		.4byte	.LASF7
 2625 005d 03       		.uleb128 0x3
 2626 005e 04       		.byte	0x4
 2627 005f 05       		.byte	0x5
 2628 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 104


 2629 0064 02       		.uleb128 0x2
 2630 0065 04       		.byte	0x4
 2631 0066 07       		.byte	0x7
 2632 0067 8F020000 		.4byte	.LASF8
 2633 006b 04       		.uleb128 0x4
 2634 006c 87010000 		.4byte	.LASF9
 2635 0070 02       		.byte	0x2
 2636 0071 B901     		.2byte	0x1b9
 2637 0073 2C000000 		.4byte	0x2c
 2638 0077 04       		.uleb128 0x4
 2639 0078 00000000 		.4byte	.LASF10
 2640 007c 02       		.byte	0x2
 2641 007d BA01     		.2byte	0x1ba
 2642 007f 3A000000 		.4byte	0x3a
 2643 0083 04       		.uleb128 0x4
 2644 0084 DF010000 		.4byte	.LASF11
 2645 0088 02       		.byte	0x2
 2646 0089 BB01     		.2byte	0x1bb
 2647 008b 48000000 		.4byte	0x48
 2648 008f 02       		.uleb128 0x2
 2649 0090 04       		.byte	0x4
 2650 0091 04       		.byte	0x4
 2651 0092 22040000 		.4byte	.LASF12
 2652 0096 02       		.uleb128 0x2
 2653 0097 08       		.byte	0x8
 2654 0098 04       		.byte	0x4
 2655 0099 94010000 		.4byte	.LASF13
 2656 009d 02       		.uleb128 0x2
 2657 009e 01       		.byte	0x1
 2658 009f 08       		.byte	0x8
 2659 00a0 38050000 		.4byte	.LASF14
 2660 00a4 04       		.uleb128 0x4
 2661 00a5 07060000 		.4byte	.LASF15
 2662 00a9 02       		.byte	0x2
 2663 00aa 5B02     		.2byte	0x25b
 2664 00ac 48000000 		.4byte	0x48
 2665 00b0 04       		.uleb128 0x4
 2666 00b1 8D030000 		.4byte	.LASF16
 2667 00b5 02       		.byte	0x2
 2668 00b6 6502     		.2byte	0x265
 2669 00b8 BC000000 		.4byte	0xbc
 2670 00bc 05       		.uleb128 0x5
 2671 00bd 83000000 		.4byte	0x83
 2672 00c1 06       		.uleb128 0x6
 2673 00c2 04       		.byte	0x4
 2674 00c3 C7000000 		.4byte	0xc7
 2675 00c7 07       		.uleb128 0x7
 2676 00c8 08       		.uleb128 0x8
 2677 00c9 01       		.byte	0x1
 2678 00ca 03       		.byte	0x3
 2679 00cb 1B       		.byte	0x1b
 2680 00cc DD000000 		.4byte	0xdd
 2681 00d0 09       		.uleb128 0x9
 2682 00d1 C9030000 		.4byte	.LASF17
 2683 00d5 00       		.sleb128 0
 2684 00d6 09       		.uleb128 0x9
 2685 00d7 C9060000 		.4byte	.LASF18
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 105


 2686 00db 01       		.sleb128 1
 2687 00dc 00       		.byte	0
 2688 00dd 0A       		.uleb128 0xa
 2689 00de 25010000 		.4byte	.LASF19
 2690 00e2 03       		.byte	0x3
 2691 00e3 1E       		.byte	0x1e
 2692 00e4 C8000000 		.4byte	0xc8
 2693 00e8 0A       		.uleb128 0xa
 2694 00e9 17010000 		.4byte	.LASF20
 2695 00ed 03       		.byte	0x3
 2696 00ee 58       		.byte	0x58
 2697 00ef C1000000 		.4byte	0xc1
 2698 00f3 02       		.uleb128 0x2
 2699 00f4 04       		.byte	0x4
 2700 00f5 07       		.byte	0x7
 2701 00f6 A9030000 		.4byte	.LASF21
 2702 00fa 0B       		.uleb128 0xb
 2703 00fb 67030000 		.4byte	.LASF22
 2704 00ff 01       		.byte	0x1
 2705 0100 53       		.byte	0x53
 2706 0101 00000000 		.4byte	.LFB0
 2707 0105 1C000000 		.4byte	.LFE0-.LFB0
 2708 0109 01       		.uleb128 0x1
 2709 010a 9C       		.byte	0x9c
 2710 010b 0C       		.uleb128 0xc
 2711 010c AD010000 		.4byte	.LASF33
 2712 0110 01       		.byte	0x1
 2713 0111 6C       		.byte	0x6c
 2714 0112 00000000 		.4byte	.LFB1
 2715 0116 48000000 		.4byte	.LFE1-.LFB1
 2716 011a 01       		.uleb128 0x1
 2717 011b 9C       		.byte	0x9c
 2718 011c 2F010000 		.4byte	0x12f
 2719 0120 0D       		.uleb128 0xd
 2720 0121 08010000 		.4byte	.LASF27
 2721 0125 01       		.byte	0x1
 2722 0126 6F       		.byte	0x6f
 2723 0127 6B000000 		.4byte	0x6b
 2724 012b 02       		.uleb128 0x2
 2725 012c 91       		.byte	0x91
 2726 012d 6F       		.sleb128 -17
 2727 012e 00       		.byte	0
 2728 012f 0B       		.uleb128 0xb
 2729 0130 93000000 		.4byte	.LASF23
 2730 0134 01       		.byte	0x1
 2731 0135 A8       		.byte	0xa8
 2732 0136 00000000 		.4byte	.LFB2
 2733 013a 40000000 		.4byte	.LFE2-.LFB2
 2734 013e 01       		.uleb128 0x1
 2735 013f 9C       		.byte	0x9c
 2736 0140 0B       		.uleb128 0xb
 2737 0141 E6010000 		.4byte	.LASF24
 2738 0145 01       		.byte	0x1
 2739 0146 C9       		.byte	0xc9
 2740 0147 00000000 		.4byte	.LFB3
 2741 014b 1C000000 		.4byte	.LFE3-.LFB3
 2742 014f 01       		.uleb128 0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 106


 2743 0150 9C       		.byte	0x9c
 2744 0151 0E       		.uleb128 0xe
 2745 0152 B3060000 		.4byte	.LASF38
 2746 0156 01       		.byte	0x1
 2747 0157 0B01     		.2byte	0x10b
 2748 0159 A4000000 		.4byte	0xa4
 2749 015d 00000000 		.4byte	.LFB4
 2750 0161 5C010000 		.4byte	.LFE4-.LFB4
 2751 0165 01       		.uleb128 0x1
 2752 0166 9C       		.byte	0x9c
 2753 0167 D8010000 		.4byte	0x1d8
 2754 016b 0F       		.uleb128 0xf
 2755 016c B3020000 		.4byte	.LASF25
 2756 0170 01       		.byte	0x1
 2757 0171 0B01     		.2byte	0x10b
 2758 0173 83000000 		.4byte	0x83
 2759 0177 02       		.uleb128 0x2
 2760 0178 91       		.byte	0x91
 2761 0179 5C       		.sleb128 -36
 2762 017a 0F       		.uleb128 0xf
 2763 017b 9B010000 		.4byte	.LASF26
 2764 017f 01       		.byte	0x1
 2765 0180 0B01     		.2byte	0x10b
 2766 0182 D8010000 		.4byte	0x1d8
 2767 0186 02       		.uleb128 0x2
 2768 0187 91       		.byte	0x91
 2769 0188 58       		.sleb128 -40
 2770 0189 10       		.uleb128 0x10
 2771 018a BD010000 		.4byte	.LASF28
 2772 018e 01       		.byte	0x1
 2773 018f 0D01     		.2byte	0x10d
 2774 0191 83000000 		.4byte	0x83
 2775 0195 02       		.uleb128 0x2
 2776 0196 91       		.byte	0x91
 2777 0197 6C       		.sleb128 -20
 2778 0198 10       		.uleb128 0x10
 2779 0199 AE050000 		.4byte	.LASF29
 2780 019d 01       		.byte	0x1
 2781 019e 0E01     		.2byte	0x10e
 2782 01a0 83000000 		.4byte	0x83
 2783 01a4 02       		.uleb128 0x2
 2784 01a5 91       		.byte	0x91
 2785 01a6 60       		.sleb128 -32
 2786 01a7 10       		.uleb128 0x10
 2787 01a8 6F040000 		.4byte	.LASF30
 2788 01ac 01       		.byte	0x1
 2789 01ad 0F01     		.2byte	0x10f
 2790 01af 83000000 		.4byte	0x83
 2791 01b3 05       		.uleb128 0x5
 2792 01b4 03       		.byte	0x3
 2793 01b5 18000000 		.4byte	compensateRunningStatus.4714
 2794 01b9 10       		.uleb128 0x10
 2795 01ba DB030000 		.4byte	.LASF31
 2796 01be 01       		.byte	0x1
 2797 01bf 1001     		.2byte	0x110
 2798 01c1 83000000 		.4byte	0x83
 2799 01c5 02       		.uleb128 0x2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 107


 2800 01c6 91       		.byte	0x91
 2801 01c7 64       		.sleb128 -28
 2802 01c8 10       		.uleb128 0x10
 2803 01c9 9C030000 		.4byte	.LASF32
 2804 01cd 01       		.byte	0x1
 2805 01ce 1101     		.2byte	0x111
 2806 01d0 A4000000 		.4byte	0xa4
 2807 01d4 02       		.uleb128 0x2
 2808 01d5 91       		.byte	0x91
 2809 01d6 68       		.sleb128 -24
 2810 01d7 00       		.byte	0
 2811 01d8 06       		.uleb128 0x6
 2812 01d9 04       		.byte	0x4
 2813 01da 83000000 		.4byte	0x83
 2814 01de 11       		.uleb128 0x11
 2815 01df CF040000 		.4byte	.LASF35
 2816 01e3 01       		.byte	0x1
 2817 01e4 7201     		.2byte	0x172
 2818 01e6 83000000 		.4byte	0x83
 2819 01ea 00000000 		.4byte	.LFB5
 2820 01ee 1C000000 		.4byte	.LFE5-.LFB5
 2821 01f2 01       		.uleb128 0x1
 2822 01f3 9C       		.byte	0x9c
 2823 01f4 12       		.uleb128 0x12
 2824 01f5 53050000 		.4byte	.LASF34
 2825 01f9 01       		.byte	0x1
 2826 01fa B403     		.2byte	0x3b4
 2827 01fc 00000000 		.4byte	.LFB6
 2828 0200 34000000 		.4byte	.LFE6-.LFB6
 2829 0204 01       		.uleb128 0x1
 2830 0205 9C       		.byte	0x9c
 2831 0206 1A020000 		.4byte	0x21a
 2832 020a 10       		.uleb128 0x10
 2833 020b 08010000 		.4byte	.LASF27
 2834 020f 01       		.byte	0x1
 2835 0210 B603     		.2byte	0x3b6
 2836 0212 6B000000 		.4byte	0x6b
 2837 0216 02       		.uleb128 0x2
 2838 0217 91       		.byte	0x91
 2839 0218 6F       		.sleb128 -17
 2840 0219 00       		.byte	0
 2841 021a 11       		.uleb128 0x11
 2842 021b 52040000 		.4byte	.LASF36
 2843 021f 01       		.byte	0x1
 2844 0220 C903     		.2byte	0x3c9
 2845 0222 83000000 		.4byte	0x83
 2846 0226 00000000 		.4byte	.LFB7
 2847 022a 20000000 		.4byte	.LFE7-.LFB7
 2848 022e 01       		.uleb128 0x1
 2849 022f 9C       		.byte	0x9c
 2850 0230 12       		.uleb128 0x12
 2851 0231 3A000000 		.4byte	.LASF37
 2852 0235 01       		.byte	0x1
 2853 0236 D703     		.2byte	0x3d7
 2854 0238 00000000 		.4byte	.LFB8
 2855 023c 4C000000 		.4byte	.LFE8-.LFB8
 2856 0240 01       		.uleb128 0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 108


 2857 0241 9C       		.byte	0x9c
 2858 0242 56020000 		.4byte	0x256
 2859 0246 10       		.uleb128 0x10
 2860 0247 08010000 		.4byte	.LASF27
 2861 024b 01       		.byte	0x1
 2862 024c D903     		.2byte	0x3d9
 2863 024e 6B000000 		.4byte	0x6b
 2864 0252 02       		.uleb128 0x2
 2865 0253 91       		.byte	0x91
 2866 0254 6F       		.sleb128 -17
 2867 0255 00       		.byte	0
 2868 0256 0E       		.uleb128 0xe
 2869 0257 25030000 		.4byte	.LASF39
 2870 025b 01       		.byte	0x1
 2871 025c F903     		.2byte	0x3f9
 2872 025e 83000000 		.4byte	0x83
 2873 0262 00000000 		.4byte	.LFB9
 2874 0266 30000000 		.4byte	.LFE9-.LFB9
 2875 026a 01       		.uleb128 0x1
 2876 026b 9C       		.byte	0x9c
 2877 026c 80020000 		.4byte	0x280
 2878 0270 0F       		.uleb128 0xf
 2879 0271 5B000000 		.4byte	.LASF40
 2880 0275 01       		.byte	0x1
 2881 0276 F903     		.2byte	0x3f9
 2882 0278 83000000 		.4byte	0x83
 2883 027c 02       		.uleb128 0x2
 2884 027d 91       		.byte	0x91
 2885 027e 74       		.sleb128 -12
 2886 027f 00       		.byte	0
 2887 0280 12       		.uleb128 0x12
 2888 0281 2A000000 		.4byte	.LASF41
 2889 0285 01       		.byte	0x1
 2890 0286 1704     		.2byte	0x417
 2891 0288 00000000 		.4byte	.LFB10
 2892 028c 58000000 		.4byte	.LFE10-.LFB10
 2893 0290 01       		.uleb128 0x1
 2894 0291 9C       		.byte	0x9c
 2895 0292 C4020000 		.4byte	0x2c4
 2896 0296 0F       		.uleb128 0xf
 2897 0297 5B000000 		.4byte	.LASF40
 2898 029b 01       		.byte	0x1
 2899 029c 1704     		.2byte	0x417
 2900 029e 83000000 		.4byte	0x83
 2901 02a2 02       		.uleb128 0x2
 2902 02a3 91       		.byte	0x91
 2903 02a4 6C       		.sleb128 -20
 2904 02a5 0F       		.uleb128 0xf
 2905 02a6 3D050000 		.4byte	.LASF42
 2906 02aa 01       		.byte	0x1
 2907 02ab 1704     		.2byte	0x417
 2908 02ad 83000000 		.4byte	0x83
 2909 02b1 02       		.uleb128 0x2
 2910 02b2 91       		.byte	0x91
 2911 02b3 68       		.sleb128 -24
 2912 02b4 10       		.uleb128 0x10
 2913 02b5 C3050000 		.4byte	.LASF43
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 109


 2914 02b9 01       		.byte	0x1
 2915 02ba 1904     		.2byte	0x419
 2916 02bc 83000000 		.4byte	0x83
 2917 02c0 02       		.uleb128 0x2
 2918 02c1 91       		.byte	0x91
 2919 02c2 74       		.sleb128 -12
 2920 02c3 00       		.byte	0
 2921 02c4 13       		.uleb128 0x13
 2922 02c5 9E050000 		.4byte	.LASF44
 2923 02c9 01       		.byte	0x1
 2924 02ca 3304     		.2byte	0x433
 2925 02cc 83000000 		.4byte	0x83
 2926 02d0 00000000 		.4byte	.LFB11
 2927 02d4 24000000 		.4byte	.LFE11-.LFB11
 2928 02d8 01       		.uleb128 0x1
 2929 02d9 9C       		.byte	0x9c
 2930 02da EE020000 		.4byte	0x2ee
 2931 02de 0F       		.uleb128 0xf
 2932 02df 5B000000 		.4byte	.LASF40
 2933 02e3 01       		.byte	0x1
 2934 02e4 3304     		.2byte	0x433
 2935 02e6 83000000 		.4byte	0x83
 2936 02ea 02       		.uleb128 0x2
 2937 02eb 91       		.byte	0x91
 2938 02ec 74       		.sleb128 -12
 2939 02ed 00       		.byte	0
 2940 02ee 12       		.uleb128 0x12
 2941 02ef 73050000 		.4byte	.LASF45
 2942 02f3 01       		.byte	0x1
 2943 02f4 5004     		.2byte	0x450
 2944 02f6 00000000 		.4byte	.LFB12
 2945 02fa 6C000000 		.4byte	.LFE12-.LFB12
 2946 02fe 01       		.uleb128 0x1
 2947 02ff 9C       		.byte	0x9c
 2948 0300 32030000 		.4byte	0x332
 2949 0304 0F       		.uleb128 0xf
 2950 0305 5B000000 		.4byte	.LASF40
 2951 0309 01       		.byte	0x1
 2952 030a 5004     		.2byte	0x450
 2953 030c 83000000 		.4byte	0x83
 2954 0310 02       		.uleb128 0x2
 2955 0311 91       		.byte	0x91
 2956 0312 6C       		.sleb128 -20
 2957 0313 0F       		.uleb128 0xf
 2958 0314 8D010000 		.4byte	.LASF46
 2959 0318 01       		.byte	0x1
 2960 0319 5004     		.2byte	0x450
 2961 031b 83000000 		.4byte	0x83
 2962 031f 02       		.uleb128 0x2
 2963 0320 91       		.byte	0x91
 2964 0321 68       		.sleb128 -24
 2965 0322 10       		.uleb128 0x10
 2966 0323 C3050000 		.4byte	.LASF43
 2967 0327 01       		.byte	0x1
 2968 0328 5204     		.2byte	0x452
 2969 032a 83000000 		.4byte	0x83
 2970 032e 02       		.uleb128 0x2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 110


 2971 032f 91       		.byte	0x91
 2972 0330 74       		.sleb128 -12
 2973 0331 00       		.byte	0
 2974 0332 0E       		.uleb128 0xe
 2975 0333 77020000 		.4byte	.LASF47
 2976 0337 01       		.byte	0x1
 2977 0338 7104     		.2byte	0x471
 2978 033a 83000000 		.4byte	0x83
 2979 033e 00000000 		.4byte	.LFB13
 2980 0342 40000000 		.4byte	.LFE13-.LFB13
 2981 0346 01       		.uleb128 0x1
 2982 0347 9C       		.byte	0x9c
 2983 0348 5C030000 		.4byte	0x35c
 2984 034c 0F       		.uleb128 0xf
 2985 034d 5B000000 		.4byte	.LASF40
 2986 0351 01       		.byte	0x1
 2987 0352 7104     		.2byte	0x471
 2988 0354 83000000 		.4byte	0x83
 2989 0358 02       		.uleb128 0x2
 2990 0359 91       		.byte	0x91
 2991 035a 74       		.sleb128 -12
 2992 035b 00       		.byte	0
 2993 035c 12       		.uleb128 0x12
 2994 035d 3F020000 		.4byte	.LASF48
 2995 0361 01       		.byte	0x1
 2996 0362 9A04     		.2byte	0x49a
 2997 0364 00000000 		.4byte	.LFB14
 2998 0368 64000000 		.4byte	.LFE14-.LFB14
 2999 036c 01       		.uleb128 0x1
 3000 036d 9C       		.byte	0x9c
 3001 036e 82030000 		.4byte	0x382
 3002 0372 0F       		.uleb128 0xf
 3003 0373 6B020000 		.4byte	.LASF49
 3004 0377 01       		.byte	0x1
 3005 0378 9A04     		.2byte	0x49a
 3006 037a 83000000 		.4byte	0x83
 3007 037e 02       		.uleb128 0x2
 3008 037f 91       		.byte	0x91
 3009 0380 74       		.sleb128 -12
 3010 0381 00       		.byte	0
 3011 0382 12       		.uleb128 0x12
 3012 0383 BF040000 		.4byte	.LASF50
 3013 0387 01       		.byte	0x1
 3014 0388 CA04     		.2byte	0x4ca
 3015 038a 00000000 		.4byte	.LFB15
 3016 038e 68000000 		.4byte	.LFE15-.LFB15
 3017 0392 01       		.uleb128 0x1
 3018 0393 9C       		.byte	0x9c
 3019 0394 A8030000 		.4byte	0x3a8
 3020 0398 0F       		.uleb128 0xf
 3021 0399 6B020000 		.4byte	.LASF49
 3022 039d 01       		.byte	0x1
 3023 039e CA04     		.2byte	0x4ca
 3024 03a0 83000000 		.4byte	0x83
 3025 03a4 02       		.uleb128 0x2
 3026 03a5 91       		.byte	0x91
 3027 03a6 74       		.sleb128 -12
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 111


 3028 03a7 00       		.byte	0
 3029 03a8 12       		.uleb128 0x12
 3030 03a9 8B050000 		.4byte	.LASF51
 3031 03ad 01       		.byte	0x1
 3032 03ae 0505     		.2byte	0x505
 3033 03b0 00000000 		.4byte	.LFB16
 3034 03b4 58000000 		.4byte	.LFE16-.LFB16
 3035 03b8 01       		.uleb128 0x1
 3036 03b9 9C       		.byte	0x9c
 3037 03ba EC030000 		.4byte	0x3ec
 3038 03be 0F       		.uleb128 0xf
 3039 03bf FB050000 		.4byte	.LASF52
 3040 03c3 01       		.byte	0x1
 3041 03c4 0505     		.2byte	0x505
 3042 03c6 83000000 		.4byte	0x83
 3043 03ca 02       		.uleb128 0x2
 3044 03cb 91       		.byte	0x91
 3045 03cc 64       		.sleb128 -28
 3046 03cd 10       		.uleb128 0x10
 3047 03ce C3050000 		.4byte	.LASF43
 3048 03d2 01       		.byte	0x1
 3049 03d3 0705     		.2byte	0x507
 3050 03d5 83000000 		.4byte	0x83
 3051 03d9 02       		.uleb128 0x2
 3052 03da 91       		.byte	0x91
 3053 03db 68       		.sleb128 -24
 3054 03dc 10       		.uleb128 0x10
 3055 03dd 1F020000 		.4byte	.LASF53
 3056 03e1 01       		.byte	0x1
 3057 03e2 0805     		.2byte	0x508
 3058 03e4 83000000 		.4byte	0x83
 3059 03e8 02       		.uleb128 0x2
 3060 03e9 91       		.byte	0x91
 3061 03ea 6C       		.sleb128 -20
 3062 03eb 00       		.byte	0
 3063 03ec 14       		.uleb128 0x14
 3064 03ed 80000000 		.4byte	.LASF59
 3065 03f1 01       		.byte	0x1
 3066 03f2 2405     		.2byte	0x524
 3067 03f4 83000000 		.4byte	0x83
 3068 03f8 00000000 		.4byte	.LFB17
 3069 03fc 1C000000 		.4byte	.LFE17-.LFB17
 3070 0400 01       		.uleb128 0x1
 3071 0401 9C       		.byte	0x9c
 3072 0402 12       		.uleb128 0x12
 3073 0403 0E020000 		.4byte	.LASF54
 3074 0407 01       		.byte	0x1
 3075 0408 3805     		.2byte	0x538
 3076 040a 00000000 		.4byte	.LFB18
 3077 040e 6C000000 		.4byte	.LFE18-.LFB18
 3078 0412 01       		.uleb128 0x1
 3079 0413 9C       		.byte	0x9c
 3080 0414 46040000 		.4byte	0x446
 3081 0418 0F       		.uleb128 0xf
 3082 0419 5B000000 		.4byte	.LASF40
 3083 041d 01       		.byte	0x1
 3084 041e 3805     		.2byte	0x538
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 112


 3085 0420 83000000 		.4byte	0x83
 3086 0424 02       		.uleb128 0x2
 3087 0425 91       		.byte	0x91
 3088 0426 6C       		.sleb128 -20
 3089 0427 0F       		.uleb128 0xf
 3090 0428 C3030000 		.4byte	.LASF55
 3091 042c 01       		.byte	0x1
 3092 042d 3805     		.2byte	0x538
 3093 042f 83000000 		.4byte	0x83
 3094 0433 02       		.uleb128 0x2
 3095 0434 91       		.byte	0x91
 3096 0435 68       		.sleb128 -24
 3097 0436 10       		.uleb128 0x10
 3098 0437 4F010000 		.4byte	.LASF56
 3099 043b 01       		.byte	0x1
 3100 043c 3A05     		.2byte	0x53a
 3101 043e 83000000 		.4byte	0x83
 3102 0442 02       		.uleb128 0x2
 3103 0443 91       		.byte	0x91
 3104 0444 74       		.sleb128 -12
 3105 0445 00       		.byte	0
 3106 0446 12       		.uleb128 0x12
 3107 0447 78030000 		.4byte	.LASF57
 3108 044b 01       		.byte	0x1
 3109 044c 5F05     		.2byte	0x55f
 3110 044e 00000000 		.4byte	.LFB19
 3111 0452 44000000 		.4byte	.LFE19-.LFB19
 3112 0456 01       		.uleb128 0x1
 3113 0457 9C       		.byte	0x9c
 3114 0458 7B040000 		.4byte	0x47b
 3115 045c 0F       		.uleb128 0xf
 3116 045d 41010000 		.4byte	.LASF58
 3117 0461 01       		.byte	0x1
 3118 0462 5F05     		.2byte	0x55f
 3119 0464 83000000 		.4byte	0x83
 3120 0468 02       		.uleb128 0x2
 3121 0469 91       		.byte	0x91
 3122 046a 6C       		.sleb128 -20
 3123 046b 10       		.uleb128 0x10
 3124 046c C3050000 		.4byte	.LASF43
 3125 0470 01       		.byte	0x1
 3126 0471 6105     		.2byte	0x561
 3127 0473 83000000 		.4byte	0x83
 3128 0477 02       		.uleb128 0x2
 3129 0478 91       		.byte	0x91
 3130 0479 74       		.sleb128 -12
 3131 047a 00       		.byte	0
 3132 047b 14       		.uleb128 0x14
 3133 047c 9E060000 		.4byte	.LASF60
 3134 0480 01       		.byte	0x1
 3135 0481 7605     		.2byte	0x576
 3136 0483 83000000 		.4byte	0x83
 3137 0487 00000000 		.4byte	.LFB20
 3138 048b 18000000 		.4byte	.LFE20-.LFB20
 3139 048f 01       		.uleb128 0x1
 3140 0490 9C       		.byte	0x9c
 3141 0491 0E       		.uleb128 0xe
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 113


 3142 0492 B2030000 		.4byte	.LASF61
 3143 0496 01       		.byte	0x1
 3144 0497 8805     		.2byte	0x588
 3145 0499 83000000 		.4byte	0x83
 3146 049d 00000000 		.4byte	.LFB21
 3147 04a1 40000000 		.4byte	.LFE21-.LFB21
 3148 04a5 01       		.uleb128 0x1
 3149 04a6 9C       		.byte	0x9c
 3150 04a7 BB040000 		.4byte	0x4bb
 3151 04ab 0F       		.uleb128 0xf
 3152 04ac 5B000000 		.4byte	.LASF40
 3153 04b0 01       		.byte	0x1
 3154 04b1 8805     		.2byte	0x588
 3155 04b3 83000000 		.4byte	0x83
 3156 04b7 02       		.uleb128 0x2
 3157 04b8 91       		.byte	0x91
 3158 04b9 74       		.sleb128 -12
 3159 04ba 00       		.byte	0
 3160 04bb 0E       		.uleb128 0xe
 3161 04bc 42050000 		.4byte	.LASF62
 3162 04c0 01       		.byte	0x1
 3163 04c1 9E05     		.2byte	0x59e
 3164 04c3 83000000 		.4byte	0x83
 3165 04c7 00000000 		.4byte	.LFB22
 3166 04cb 54000000 		.4byte	.LFE22-.LFB22
 3167 04cf 01       		.uleb128 0x1
 3168 04d0 9C       		.byte	0x9c
 3169 04d1 F4040000 		.4byte	0x4f4
 3170 04d5 0F       		.uleb128 0xf
 3171 04d6 5B000000 		.4byte	.LASF40
 3172 04da 01       		.byte	0x1
 3173 04db 9E05     		.2byte	0x59e
 3174 04dd 83000000 		.4byte	0x83
 3175 04e1 02       		.uleb128 0x2
 3176 04e2 91       		.byte	0x91
 3177 04e3 6C       		.sleb128 -20
 3178 04e4 10       		.uleb128 0x10
 3179 04e5 4F010000 		.4byte	.LASF56
 3180 04e9 01       		.byte	0x1
 3181 04ea A005     		.2byte	0x5a0
 3182 04ec 83000000 		.4byte	0x83
 3183 04f0 02       		.uleb128 0x2
 3184 04f1 91       		.byte	0x91
 3185 04f2 74       		.sleb128 -12
 3186 04f3 00       		.byte	0
 3187 04f4 14       		.uleb128 0x14
 3188 04f5 E2040000 		.4byte	.LASF63
 3189 04f9 01       		.byte	0x1
 3190 04fa C905     		.2byte	0x5c9
 3191 04fc 83000000 		.4byte	0x83
 3192 0500 00000000 		.4byte	.LFB23
 3193 0504 1C000000 		.4byte	.LFE23-.LFB23
 3194 0508 01       		.uleb128 0x1
 3195 0509 9C       		.byte	0x9c
 3196 050a 12       		.uleb128 0x12
 3197 050b 0B040000 		.4byte	.LASF64
 3198 050f 01       		.byte	0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 114


 3199 0510 E605     		.2byte	0x5e6
 3200 0512 00000000 		.4byte	.LFB24
 3201 0516 70000000 		.4byte	.LFE24-.LFB24
 3202 051a 01       		.uleb128 0x1
 3203 051b 9C       		.byte	0x9c
 3204 051c 4E050000 		.4byte	0x54e
 3205 0520 0F       		.uleb128 0xf
 3206 0521 6B020000 		.4byte	.LASF49
 3207 0525 01       		.byte	0x1
 3208 0526 E605     		.2byte	0x5e6
 3209 0528 83000000 		.4byte	0x83
 3210 052c 02       		.uleb128 0x2
 3211 052d 91       		.byte	0x91
 3212 052e 64       		.sleb128 -28
 3213 052f 10       		.uleb128 0x10
 3214 0530 08010000 		.4byte	.LASF27
 3215 0534 01       		.byte	0x1
 3216 0535 E805     		.2byte	0x5e8
 3217 0537 6B000000 		.4byte	0x6b
 3218 053b 02       		.uleb128 0x2
 3219 053c 91       		.byte	0x91
 3220 053d 6B       		.sleb128 -21
 3221 053e 10       		.uleb128 0x10
 3222 053f D2050000 		.4byte	.LASF65
 3223 0543 01       		.byte	0x1
 3224 0544 E905     		.2byte	0x5e9
 3225 0546 83000000 		.4byte	0x83
 3226 054a 02       		.uleb128 0x2
 3227 054b 91       		.byte	0x91
 3228 054c 6C       		.sleb128 -20
 3229 054d 00       		.byte	0
 3230 054e 15       		.uleb128 0x15
 3231 054f F5030000 		.4byte	.LASF66
 3232 0553 01       		.byte	0x1
 3233 0554 2006     		.2byte	0x620
 3234 0556 00000000 		.4byte	.LFB25
 3235 055a 34000000 		.4byte	.LFE25-.LFB25
 3236 055e 01       		.uleb128 0x1
 3237 055f 9C       		.byte	0x9c
 3238 0560 74050000 		.4byte	0x574
 3239 0564 0F       		.uleb128 0xf
 3240 0565 D2010000 		.4byte	.LASF67
 3241 0569 01       		.byte	0x1
 3242 056a 2006     		.2byte	0x620
 3243 056c 83000000 		.4byte	0x83
 3244 0570 02       		.uleb128 0x2
 3245 0571 91       		.byte	0x91
 3246 0572 74       		.sleb128 -12
 3247 0573 00       		.byte	0
 3248 0574 0E       		.uleb128 0xe
 3249 0575 4E020000 		.4byte	.LASF68
 3250 0579 01       		.byte	0x1
 3251 057a 3A06     		.2byte	0x63a
 3252 057c E8000000 		.4byte	0xe8
 3253 0580 00000000 		.4byte	.LFB26
 3254 0584 40000000 		.4byte	.LFE26-.LFB26
 3255 0588 01       		.uleb128 0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 115


 3256 0589 9C       		.byte	0x9c
 3257 058a BC050000 		.4byte	0x5bc
 3258 058e 0F       		.uleb128 0xf
 3259 058f 5B000000 		.4byte	.LASF40
 3260 0593 01       		.byte	0x1
 3261 0594 3A06     		.2byte	0x63a
 3262 0596 83000000 		.4byte	0x83
 3263 059a 02       		.uleb128 0x2
 3264 059b 91       		.byte	0x91
 3265 059c 6C       		.sleb128 -20
 3266 059d 0F       		.uleb128 0xf
 3267 059e FF000000 		.4byte	.LASF69
 3268 05a2 01       		.byte	0x1
 3269 05a3 3A06     		.2byte	0x63a
 3270 05a5 E8000000 		.4byte	0xe8
 3271 05a9 02       		.uleb128 0x2
 3272 05aa 91       		.byte	0x91
 3273 05ab 68       		.sleb128 -24
 3274 05ac 10       		.uleb128 0x10
 3275 05ad 01020000 		.4byte	.LASF70
 3276 05b1 01       		.byte	0x1
 3277 05b2 3C06     		.2byte	0x63c
 3278 05b4 E8000000 		.4byte	0xe8
 3279 05b8 02       		.uleb128 0x2
 3280 05b9 91       		.byte	0x91
 3281 05ba 74       		.sleb128 -12
 3282 05bb 00       		.byte	0
 3283 05bc 0E       		.uleb128 0xe
 3284 05bd 3E030000 		.4byte	.LASF71
 3285 05c1 01       		.byte	0x1
 3286 05c2 5806     		.2byte	0x658
 3287 05c4 E8000000 		.4byte	0xe8
 3288 05c8 00000000 		.4byte	.LFB27
 3289 05cc 34000000 		.4byte	.LFE27-.LFB27
 3290 05d0 01       		.uleb128 0x1
 3291 05d1 9C       		.byte	0x9c
 3292 05d2 F5050000 		.4byte	0x5f5
 3293 05d6 0F       		.uleb128 0xf
 3294 05d7 5B000000 		.4byte	.LASF40
 3295 05db 01       		.byte	0x1
 3296 05dc 5806     		.2byte	0x658
 3297 05de 83000000 		.4byte	0x83
 3298 05e2 02       		.uleb128 0x2
 3299 05e3 91       		.byte	0x91
 3300 05e4 6C       		.sleb128 -20
 3301 05e5 10       		.uleb128 0x10
 3302 05e6 A7020000 		.4byte	.LASF72
 3303 05ea 01       		.byte	0x1
 3304 05eb 5A06     		.2byte	0x65a
 3305 05ed E8000000 		.4byte	0xe8
 3306 05f1 02       		.uleb128 0x2
 3307 05f2 91       		.byte	0x91
 3308 05f3 74       		.sleb128 -12
 3309 05f4 00       		.byte	0
 3310 05f5 12       		.uleb128 0x12
 3311 05f6 F9020000 		.4byte	.LASF73
 3312 05fa 01       		.byte	0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 116


 3313 05fb 7506     		.2byte	0x675
 3314 05fd 00000000 		.4byte	.LFB28
 3315 0601 50000000 		.4byte	.LFE28-.LFB28
 3316 0605 01       		.uleb128 0x1
 3317 0606 9C       		.byte	0x9c
 3318 0607 1B060000 		.4byte	0x61b
 3319 060b 0F       		.uleb128 0xf
 3320 060c 5B000000 		.4byte	.LASF40
 3321 0610 01       		.byte	0x1
 3322 0611 7506     		.2byte	0x675
 3323 0613 83000000 		.4byte	0x83
 3324 0617 02       		.uleb128 0x2
 3325 0618 91       		.byte	0x91
 3326 0619 74       		.sleb128 -12
 3327 061a 00       		.byte	0
 3328 061b 12       		.uleb128 0x12
 3329 061c 1E050000 		.4byte	.LASF74
 3330 0620 01       		.byte	0x1
 3331 0621 8C06     		.2byte	0x68c
 3332 0623 00000000 		.4byte	.LFB29
 3333 0627 38000000 		.4byte	.LFE29-.LFB29
 3334 062b 01       		.uleb128 0x1
 3335 062c 9C       		.byte	0x9c
 3336 062d 41060000 		.4byte	0x641
 3337 0631 0F       		.uleb128 0xf
 3338 0632 5B000000 		.4byte	.LASF40
 3339 0636 01       		.byte	0x1
 3340 0637 8C06     		.2byte	0x68c
 3341 0639 83000000 		.4byte	0x83
 3342 063d 02       		.uleb128 0x2
 3343 063e 91       		.byte	0x91
 3344 063f 74       		.sleb128 -12
 3345 0640 00       		.byte	0
 3346 0641 16       		.uleb128 0x16
 3347 0642 5B030000 		.4byte	.LASF75
 3348 0646 01       		.byte	0x1
 3349 0647 AD06     		.2byte	0x6ad
 3350 0649 00000000 		.4byte	.LFB30
 3351 064d E8000000 		.4byte	.LFE30-.LFB30
 3352 0651 01       		.uleb128 0x1
 3353 0652 9C       		.byte	0x9c
 3354 0653 12       		.uleb128 0x12
 3355 0654 49000000 		.4byte	.LASF76
 3356 0658 01       		.byte	0x1
 3357 0659 EE06     		.2byte	0x6ee
 3358 065b 00000000 		.4byte	.LFB31
 3359 065f 88000000 		.4byte	.LFE31-.LFB31
 3360 0663 01       		.uleb128 0x1
 3361 0664 9C       		.byte	0x9c
 3362 0665 79060000 		.4byte	0x679
 3363 0669 0F       		.uleb128 0xf
 3364 066a 5B000000 		.4byte	.LASF40
 3365 066e 01       		.byte	0x1
 3366 066f EE06     		.2byte	0x6ee
 3367 0671 83000000 		.4byte	0x83
 3368 0675 02       		.uleb128 0x2
 3369 0676 91       		.byte	0x91
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 117


 3370 0677 74       		.sleb128 -12
 3371 0678 00       		.byte	0
 3372 0679 17       		.uleb128 0x17
 3373 067a 66000000 		.4byte	.LASF94
 3374 067e 01       		.byte	0x1
 3375 067f 3007     		.2byte	0x730
 3376 0681 00000000 		.4byte	.LFB32
 3377 0685 98000000 		.4byte	.LFE32-.LFB32
 3378 0689 01       		.uleb128 0x1
 3379 068a 9C       		.byte	0x9c
 3380 068b B1060000 		.4byte	0x6b1
 3381 068f 10       		.uleb128 0x10
 3382 0690 9C020000 		.4byte	.LASF77
 3383 0694 01       		.byte	0x1
 3384 0695 3207     		.2byte	0x732
 3385 0697 83000000 		.4byte	0x83
 3386 069b 02       		.uleb128 0x2
 3387 069c 91       		.byte	0x91
 3388 069d 74       		.sleb128 -12
 3389 069e 10       		.uleb128 0x10
 3390 069f 87040000 		.4byte	.LASF78
 3391 06a3 01       		.byte	0x1
 3392 06a4 3307     		.2byte	0x733
 3393 06a6 83000000 		.4byte	0x83
 3394 06aa 05       		.uleb128 0x5
 3395 06ab 03       		.byte	0x3
 3396 06ac 1C000000 		.4byte	lfclkPosedgeEnabledWdtCounter.4845
 3397 06b0 00       		.byte	0
 3398 06b1 18       		.uleb128 0x18
 3399 06b2 DD020000 		.4byte	.LASF95
 3400 06b6 01       		.byte	0x1
 3401 06b7 6607     		.2byte	0x766
 3402 06b9 00000000 		.4byte	.LFB33
 3403 06bd 3C000000 		.4byte	.LFE33-.LFB33
 3404 06c1 01       		.uleb128 0x1
 3405 06c2 9C       		.byte	0x9c
 3406 06c3 12       		.uleb128 0x12
 3407 06c4 42040000 		.4byte	.LASF79
 3408 06c8 01       		.byte	0x1
 3409 06c9 D70B     		.2byte	0xbd7
 3410 06cb 00000000 		.4byte	.LFB34
 3411 06cf 6C000000 		.4byte	.LFE34-.LFB34
 3412 06d3 01       		.uleb128 0x1
 3413 06d4 9C       		.byte	0x9c
 3414 06d5 25070000 		.4byte	0x725
 3415 06d9 0F       		.uleb128 0xf
 3416 06da 5B000000 		.4byte	.LASF40
 3417 06de 01       		.byte	0x1
 3418 06df D70B     		.2byte	0xbd7
 3419 06e1 83000000 		.4byte	0x83
 3420 06e5 02       		.uleb128 0x2
 3421 06e6 91       		.byte	0x91
 3422 06e7 6C       		.sleb128 -20
 3423 06e8 0F       		.uleb128 0xf
 3424 06e9 B5040000 		.4byte	.LASF80
 3425 06ed 01       		.byte	0x1
 3426 06ee D70B     		.2byte	0xbd7
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 118


 3427 06f0 DD000000 		.4byte	0xdd
 3428 06f4 02       		.uleb128 0x2
 3429 06f5 91       		.byte	0x91
 3430 06f6 6B       		.sleb128 -21
 3431 06f7 0F       		.uleb128 0xf
 3432 06f8 A5040000 		.4byte	.LASF81
 3433 06fc 01       		.byte	0x1
 3434 06fd D70B     		.2byte	0xbd7
 3435 06ff 83000000 		.4byte	0x83
 3436 0703 02       		.uleb128 0x2
 3437 0704 91       		.byte	0x91
 3438 0705 64       		.sleb128 -28
 3439 0706 10       		.uleb128 0x10
 3440 0707 4F010000 		.4byte	.LASF56
 3441 070b 01       		.byte	0x1
 3442 070c D90B     		.2byte	0xbd9
 3443 070e 83000000 		.4byte	0x83
 3444 0712 02       		.uleb128 0x2
 3445 0713 91       		.byte	0x91
 3446 0714 74       		.sleb128 -12
 3447 0715 10       		.uleb128 0x10
 3448 0716 D2020000 		.4byte	.LASF82
 3449 071a 01       		.byte	0x1
 3450 071b DA0B     		.2byte	0xbda
 3451 071d 83000000 		.4byte	0x83
 3452 0721 02       		.uleb128 0x2
 3453 0722 91       		.byte	0x91
 3454 0723 70       		.sleb128 -16
 3455 0724 00       		.byte	0
 3456 0725 12       		.uleb128 0x12
 3457 0726 28040000 		.4byte	.LASF83
 3458 072a 01       		.byte	0x1
 3459 072b 580C     		.2byte	0xc58
 3460 072d 00000000 		.4byte	.LFB35
 3461 0731 AC000000 		.4byte	.LFE35-.LFB35
 3462 0735 01       		.uleb128 0x1
 3463 0736 9C       		.byte	0x9c
 3464 0737 78070000 		.4byte	0x778
 3465 073b 0F       		.uleb128 0xf
 3466 073c 5B000000 		.4byte	.LASF40
 3467 0740 01       		.byte	0x1
 3468 0741 580C     		.2byte	0xc58
 3469 0743 83000000 		.4byte	0x83
 3470 0747 02       		.uleb128 0x2
 3471 0748 91       		.byte	0x91
 3472 0749 6C       		.sleb128 -20
 3473 074a 0F       		.uleb128 0xf
 3474 074b B5040000 		.4byte	.LASF80
 3475 074f 01       		.byte	0x1
 3476 0750 580C     		.2byte	0xc58
 3477 0752 DD000000 		.4byte	0xdd
 3478 0756 02       		.uleb128 0x2
 3479 0757 91       		.byte	0x91
 3480 0758 6B       		.sleb128 -21
 3481 0759 0F       		.uleb128 0xf
 3482 075a C3030000 		.4byte	.LASF55
 3483 075e 01       		.byte	0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 119


 3484 075f 580C     		.2byte	0xc58
 3485 0761 83000000 		.4byte	0x83
 3486 0765 02       		.uleb128 0x2
 3487 0766 91       		.byte	0x91
 3488 0767 64       		.sleb128 -28
 3489 0768 10       		.uleb128 0x10
 3490 0769 93030000 		.4byte	.LASF84
 3491 076d 01       		.byte	0x1
 3492 076e 5A0C     		.2byte	0xc5a
 3493 0770 83000000 		.4byte	0x83
 3494 0774 02       		.uleb128 0x2
 3495 0775 91       		.byte	0x91
 3496 0776 74       		.sleb128 -12
 3497 0777 00       		.byte	0
 3498 0778 0D       		.uleb128 0xd
 3499 0779 AF000000 		.4byte	.LASF85
 3500 077d 01       		.byte	0x1
 3501 077e 22       		.byte	0x22
 3502 077f 83000000 		.4byte	0x83
 3503 0783 05       		.uleb128 0x5
 3504 0784 03       		.byte	0x3
 3505 0785 00000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 3506 0789 0D       		.uleb128 0xd
 3507 078a DF050000 		.4byte	.LASF86
 3508 078e 01       		.byte	0x1
 3509 078f 23       		.byte	0x23
 3510 0790 83000000 		.4byte	0x83
 3511 0794 05       		.uleb128 0x5
 3512 0795 03       		.byte	0x3
 3513 0796 04000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 3514 079a 0D       		.uleb128 0xd
 3515 079b 60050000 		.4byte	.LASF87
 3516 079f 01       		.byte	0x1
 3517 07a0 25       		.byte	0x25
 3518 07a1 BC000000 		.4byte	0xbc
 3519 07a5 05       		.uleb128 0x5
 3520 07a6 03       		.byte	0x3
 3521 07a7 08000000 		.4byte	disableServicedIsr
 3522 07ab 0D       		.uleb128 0xd
 3523 07ac 34020000 		.4byte	.LASF88
 3524 07b0 01       		.byte	0x1
 3525 07b1 26       		.byte	0x26
 3526 07b2 BC000000 		.4byte	0xbc
 3527 07b6 05       		.uleb128 0x5
 3528 07b7 03       		.byte	0x3
 3529 07b8 00000000 		.4byte	wdtIsrMask
 3530 07bc 19       		.uleb128 0x19
 3531 07bd 83000000 		.4byte	0x83
 3532 07c1 CC070000 		.4byte	0x7cc
 3533 07c5 1A       		.uleb128 0x1a
 3534 07c6 F3000000 		.4byte	0xf3
 3535 07ca 02       		.byte	0x2
 3536 07cb 00       		.byte	0
 3537 07cc 0D       		.uleb128 0xd
 3538 07cd 07000000 		.4byte	.LASF89
 3539 07d1 01       		.byte	0x1
 3540 07d2 2A       		.byte	0x2a
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 120


 3541 07d3 DD070000 		.4byte	0x7dd
 3542 07d7 05       		.uleb128 0x5
 3543 07d8 03       		.byte	0x3
 3544 07d9 00000000 		.4byte	counterIntMaskTbl
 3545 07dd 1B       		.uleb128 0x1b
 3546 07de BC070000 		.4byte	0x7bc
 3547 07e2 19       		.uleb128 0x19
 3548 07e3 E8000000 		.4byte	0xe8
 3549 07e7 F2070000 		.4byte	0x7f2
 3550 07eb 1A       		.uleb128 0x1a
 3551 07ec F3000000 		.4byte	0xf3
 3552 07f0 02       		.byte	0x2
 3553 07f1 00       		.byte	0
 3554 07f2 0D       		.uleb128 0xd
 3555 07f3 19000000 		.4byte	.LASF90
 3556 07f7 01       		.byte	0x1
 3557 07f8 44       		.byte	0x44
 3558 07f9 E2070000 		.4byte	0x7e2
 3559 07fd 05       		.uleb128 0x5
 3560 07fe 03       		.byte	0x3
 3561 07ff 0C000000 		.4byte	cySysWdtCallback
 3562 0803 1C       		.uleb128 0x1c
 3563 0804 E7030000 		.4byte	.LASF96
 3564 0808 04       		.byte	0x4
 3565 0809 D4       		.byte	0xd4
 3566 080a 83000000 		.4byte	0x83
 3567 080e 00       		.byte	0
 3568              		.section	.debug_abbrev,"",%progbits
 3569              	.Ldebug_abbrev0:
 3570 0000 01       		.uleb128 0x1
 3571 0001 11       		.uleb128 0x11
 3572 0002 01       		.byte	0x1
 3573 0003 25       		.uleb128 0x25
 3574 0004 0E       		.uleb128 0xe
 3575 0005 13       		.uleb128 0x13
 3576 0006 0B       		.uleb128 0xb
 3577 0007 03       		.uleb128 0x3
 3578 0008 0E       		.uleb128 0xe
 3579 0009 1B       		.uleb128 0x1b
 3580 000a 0E       		.uleb128 0xe
 3581 000b 55       		.uleb128 0x55
 3582 000c 17       		.uleb128 0x17
 3583 000d 11       		.uleb128 0x11
 3584 000e 01       		.uleb128 0x1
 3585 000f 10       		.uleb128 0x10
 3586 0010 17       		.uleb128 0x17
 3587 0011 00       		.byte	0
 3588 0012 00       		.byte	0
 3589 0013 02       		.uleb128 0x2
 3590 0014 24       		.uleb128 0x24
 3591 0015 00       		.byte	0
 3592 0016 0B       		.uleb128 0xb
 3593 0017 0B       		.uleb128 0xb
 3594 0018 3E       		.uleb128 0x3e
 3595 0019 0B       		.uleb128 0xb
 3596 001a 03       		.uleb128 0x3
 3597 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 121


 3598 001c 00       		.byte	0
 3599 001d 00       		.byte	0
 3600 001e 03       		.uleb128 0x3
 3601 001f 24       		.uleb128 0x24
 3602 0020 00       		.byte	0
 3603 0021 0B       		.uleb128 0xb
 3604 0022 0B       		.uleb128 0xb
 3605 0023 3E       		.uleb128 0x3e
 3606 0024 0B       		.uleb128 0xb
 3607 0025 03       		.uleb128 0x3
 3608 0026 08       		.uleb128 0x8
 3609 0027 00       		.byte	0
 3610 0028 00       		.byte	0
 3611 0029 04       		.uleb128 0x4
 3612 002a 16       		.uleb128 0x16
 3613 002b 00       		.byte	0
 3614 002c 03       		.uleb128 0x3
 3615 002d 0E       		.uleb128 0xe
 3616 002e 3A       		.uleb128 0x3a
 3617 002f 0B       		.uleb128 0xb
 3618 0030 3B       		.uleb128 0x3b
 3619 0031 05       		.uleb128 0x5
 3620 0032 49       		.uleb128 0x49
 3621 0033 13       		.uleb128 0x13
 3622 0034 00       		.byte	0
 3623 0035 00       		.byte	0
 3624 0036 05       		.uleb128 0x5
 3625 0037 35       		.uleb128 0x35
 3626 0038 00       		.byte	0
 3627 0039 49       		.uleb128 0x49
 3628 003a 13       		.uleb128 0x13
 3629 003b 00       		.byte	0
 3630 003c 00       		.byte	0
 3631 003d 06       		.uleb128 0x6
 3632 003e 0F       		.uleb128 0xf
 3633 003f 00       		.byte	0
 3634 0040 0B       		.uleb128 0xb
 3635 0041 0B       		.uleb128 0xb
 3636 0042 49       		.uleb128 0x49
 3637 0043 13       		.uleb128 0x13
 3638 0044 00       		.byte	0
 3639 0045 00       		.byte	0
 3640 0046 07       		.uleb128 0x7
 3641 0047 15       		.uleb128 0x15
 3642 0048 00       		.byte	0
 3643 0049 27       		.uleb128 0x27
 3644 004a 19       		.uleb128 0x19
 3645 004b 00       		.byte	0
 3646 004c 00       		.byte	0
 3647 004d 08       		.uleb128 0x8
 3648 004e 04       		.uleb128 0x4
 3649 004f 01       		.byte	0x1
 3650 0050 0B       		.uleb128 0xb
 3651 0051 0B       		.uleb128 0xb
 3652 0052 3A       		.uleb128 0x3a
 3653 0053 0B       		.uleb128 0xb
 3654 0054 3B       		.uleb128 0x3b
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 122


 3655 0055 0B       		.uleb128 0xb
 3656 0056 01       		.uleb128 0x1
 3657 0057 13       		.uleb128 0x13
 3658 0058 00       		.byte	0
 3659 0059 00       		.byte	0
 3660 005a 09       		.uleb128 0x9
 3661 005b 28       		.uleb128 0x28
 3662 005c 00       		.byte	0
 3663 005d 03       		.uleb128 0x3
 3664 005e 0E       		.uleb128 0xe
 3665 005f 1C       		.uleb128 0x1c
 3666 0060 0D       		.uleb128 0xd
 3667 0061 00       		.byte	0
 3668 0062 00       		.byte	0
 3669 0063 0A       		.uleb128 0xa
 3670 0064 16       		.uleb128 0x16
 3671 0065 00       		.byte	0
 3672 0066 03       		.uleb128 0x3
 3673 0067 0E       		.uleb128 0xe
 3674 0068 3A       		.uleb128 0x3a
 3675 0069 0B       		.uleb128 0xb
 3676 006a 3B       		.uleb128 0x3b
 3677 006b 0B       		.uleb128 0xb
 3678 006c 49       		.uleb128 0x49
 3679 006d 13       		.uleb128 0x13
 3680 006e 00       		.byte	0
 3681 006f 00       		.byte	0
 3682 0070 0B       		.uleb128 0xb
 3683 0071 2E       		.uleb128 0x2e
 3684 0072 00       		.byte	0
 3685 0073 3F       		.uleb128 0x3f
 3686 0074 19       		.uleb128 0x19
 3687 0075 03       		.uleb128 0x3
 3688 0076 0E       		.uleb128 0xe
 3689 0077 3A       		.uleb128 0x3a
 3690 0078 0B       		.uleb128 0xb
 3691 0079 3B       		.uleb128 0x3b
 3692 007a 0B       		.uleb128 0xb
 3693 007b 27       		.uleb128 0x27
 3694 007c 19       		.uleb128 0x19
 3695 007d 11       		.uleb128 0x11
 3696 007e 01       		.uleb128 0x1
 3697 007f 12       		.uleb128 0x12
 3698 0080 06       		.uleb128 0x6
 3699 0081 40       		.uleb128 0x40
 3700 0082 18       		.uleb128 0x18
 3701 0083 9742     		.uleb128 0x2117
 3702 0085 19       		.uleb128 0x19
 3703 0086 00       		.byte	0
 3704 0087 00       		.byte	0
 3705 0088 0C       		.uleb128 0xc
 3706 0089 2E       		.uleb128 0x2e
 3707 008a 01       		.byte	0x1
 3708 008b 3F       		.uleb128 0x3f
 3709 008c 19       		.uleb128 0x19
 3710 008d 03       		.uleb128 0x3
 3711 008e 0E       		.uleb128 0xe
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 123


 3712 008f 3A       		.uleb128 0x3a
 3713 0090 0B       		.uleb128 0xb
 3714 0091 3B       		.uleb128 0x3b
 3715 0092 0B       		.uleb128 0xb
 3716 0093 27       		.uleb128 0x27
 3717 0094 19       		.uleb128 0x19
 3718 0095 11       		.uleb128 0x11
 3719 0096 01       		.uleb128 0x1
 3720 0097 12       		.uleb128 0x12
 3721 0098 06       		.uleb128 0x6
 3722 0099 40       		.uleb128 0x40
 3723 009a 18       		.uleb128 0x18
 3724 009b 9642     		.uleb128 0x2116
 3725 009d 19       		.uleb128 0x19
 3726 009e 01       		.uleb128 0x1
 3727 009f 13       		.uleb128 0x13
 3728 00a0 00       		.byte	0
 3729 00a1 00       		.byte	0
 3730 00a2 0D       		.uleb128 0xd
 3731 00a3 34       		.uleb128 0x34
 3732 00a4 00       		.byte	0
 3733 00a5 03       		.uleb128 0x3
 3734 00a6 0E       		.uleb128 0xe
 3735 00a7 3A       		.uleb128 0x3a
 3736 00a8 0B       		.uleb128 0xb
 3737 00a9 3B       		.uleb128 0x3b
 3738 00aa 0B       		.uleb128 0xb
 3739 00ab 49       		.uleb128 0x49
 3740 00ac 13       		.uleb128 0x13
 3741 00ad 02       		.uleb128 0x2
 3742 00ae 18       		.uleb128 0x18
 3743 00af 00       		.byte	0
 3744 00b0 00       		.byte	0
 3745 00b1 0E       		.uleb128 0xe
 3746 00b2 2E       		.uleb128 0x2e
 3747 00b3 01       		.byte	0x1
 3748 00b4 3F       		.uleb128 0x3f
 3749 00b5 19       		.uleb128 0x19
 3750 00b6 03       		.uleb128 0x3
 3751 00b7 0E       		.uleb128 0xe
 3752 00b8 3A       		.uleb128 0x3a
 3753 00b9 0B       		.uleb128 0xb
 3754 00ba 3B       		.uleb128 0x3b
 3755 00bb 05       		.uleb128 0x5
 3756 00bc 27       		.uleb128 0x27
 3757 00bd 19       		.uleb128 0x19
 3758 00be 49       		.uleb128 0x49
 3759 00bf 13       		.uleb128 0x13
 3760 00c0 11       		.uleb128 0x11
 3761 00c1 01       		.uleb128 0x1
 3762 00c2 12       		.uleb128 0x12
 3763 00c3 06       		.uleb128 0x6
 3764 00c4 40       		.uleb128 0x40
 3765 00c5 18       		.uleb128 0x18
 3766 00c6 9642     		.uleb128 0x2116
 3767 00c8 19       		.uleb128 0x19
 3768 00c9 01       		.uleb128 0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 124


 3769 00ca 13       		.uleb128 0x13
 3770 00cb 00       		.byte	0
 3771 00cc 00       		.byte	0
 3772 00cd 0F       		.uleb128 0xf
 3773 00ce 05       		.uleb128 0x5
 3774 00cf 00       		.byte	0
 3775 00d0 03       		.uleb128 0x3
 3776 00d1 0E       		.uleb128 0xe
 3777 00d2 3A       		.uleb128 0x3a
 3778 00d3 0B       		.uleb128 0xb
 3779 00d4 3B       		.uleb128 0x3b
 3780 00d5 05       		.uleb128 0x5
 3781 00d6 49       		.uleb128 0x49
 3782 00d7 13       		.uleb128 0x13
 3783 00d8 02       		.uleb128 0x2
 3784 00d9 18       		.uleb128 0x18
 3785 00da 00       		.byte	0
 3786 00db 00       		.byte	0
 3787 00dc 10       		.uleb128 0x10
 3788 00dd 34       		.uleb128 0x34
 3789 00de 00       		.byte	0
 3790 00df 03       		.uleb128 0x3
 3791 00e0 0E       		.uleb128 0xe
 3792 00e1 3A       		.uleb128 0x3a
 3793 00e2 0B       		.uleb128 0xb
 3794 00e3 3B       		.uleb128 0x3b
 3795 00e4 05       		.uleb128 0x5
 3796 00e5 49       		.uleb128 0x49
 3797 00e6 13       		.uleb128 0x13
 3798 00e7 02       		.uleb128 0x2
 3799 00e8 18       		.uleb128 0x18
 3800 00e9 00       		.byte	0
 3801 00ea 00       		.byte	0
 3802 00eb 11       		.uleb128 0x11
 3803 00ec 2E       		.uleb128 0x2e
 3804 00ed 00       		.byte	0
 3805 00ee 03       		.uleb128 0x3
 3806 00ef 0E       		.uleb128 0xe
 3807 00f0 3A       		.uleb128 0x3a
 3808 00f1 0B       		.uleb128 0xb
 3809 00f2 3B       		.uleb128 0x3b
 3810 00f3 05       		.uleb128 0x5
 3811 00f4 27       		.uleb128 0x27
 3812 00f5 19       		.uleb128 0x19
 3813 00f6 49       		.uleb128 0x49
 3814 00f7 13       		.uleb128 0x13
 3815 00f8 11       		.uleb128 0x11
 3816 00f9 01       		.uleb128 0x1
 3817 00fa 12       		.uleb128 0x12
 3818 00fb 06       		.uleb128 0x6
 3819 00fc 40       		.uleb128 0x40
 3820 00fd 18       		.uleb128 0x18
 3821 00fe 9742     		.uleb128 0x2117
 3822 0100 19       		.uleb128 0x19
 3823 0101 00       		.byte	0
 3824 0102 00       		.byte	0
 3825 0103 12       		.uleb128 0x12
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 125


 3826 0104 2E       		.uleb128 0x2e
 3827 0105 01       		.byte	0x1
 3828 0106 3F       		.uleb128 0x3f
 3829 0107 19       		.uleb128 0x19
 3830 0108 03       		.uleb128 0x3
 3831 0109 0E       		.uleb128 0xe
 3832 010a 3A       		.uleb128 0x3a
 3833 010b 0B       		.uleb128 0xb
 3834 010c 3B       		.uleb128 0x3b
 3835 010d 05       		.uleb128 0x5
 3836 010e 27       		.uleb128 0x27
 3837 010f 19       		.uleb128 0x19
 3838 0110 11       		.uleb128 0x11
 3839 0111 01       		.uleb128 0x1
 3840 0112 12       		.uleb128 0x12
 3841 0113 06       		.uleb128 0x6
 3842 0114 40       		.uleb128 0x40
 3843 0115 18       		.uleb128 0x18
 3844 0116 9642     		.uleb128 0x2116
 3845 0118 19       		.uleb128 0x19
 3846 0119 01       		.uleb128 0x1
 3847 011a 13       		.uleb128 0x13
 3848 011b 00       		.byte	0
 3849 011c 00       		.byte	0
 3850 011d 13       		.uleb128 0x13
 3851 011e 2E       		.uleb128 0x2e
 3852 011f 01       		.byte	0x1
 3853 0120 3F       		.uleb128 0x3f
 3854 0121 19       		.uleb128 0x19
 3855 0122 03       		.uleb128 0x3
 3856 0123 0E       		.uleb128 0xe
 3857 0124 3A       		.uleb128 0x3a
 3858 0125 0B       		.uleb128 0xb
 3859 0126 3B       		.uleb128 0x3b
 3860 0127 05       		.uleb128 0x5
 3861 0128 27       		.uleb128 0x27
 3862 0129 19       		.uleb128 0x19
 3863 012a 49       		.uleb128 0x49
 3864 012b 13       		.uleb128 0x13
 3865 012c 11       		.uleb128 0x11
 3866 012d 01       		.uleb128 0x1
 3867 012e 12       		.uleb128 0x12
 3868 012f 06       		.uleb128 0x6
 3869 0130 40       		.uleb128 0x40
 3870 0131 18       		.uleb128 0x18
 3871 0132 9742     		.uleb128 0x2117
 3872 0134 19       		.uleb128 0x19
 3873 0135 01       		.uleb128 0x1
 3874 0136 13       		.uleb128 0x13
 3875 0137 00       		.byte	0
 3876 0138 00       		.byte	0
 3877 0139 14       		.uleb128 0x14
 3878 013a 2E       		.uleb128 0x2e
 3879 013b 00       		.byte	0
 3880 013c 3F       		.uleb128 0x3f
 3881 013d 19       		.uleb128 0x19
 3882 013e 03       		.uleb128 0x3
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 126


 3883 013f 0E       		.uleb128 0xe
 3884 0140 3A       		.uleb128 0x3a
 3885 0141 0B       		.uleb128 0xb
 3886 0142 3B       		.uleb128 0x3b
 3887 0143 05       		.uleb128 0x5
 3888 0144 27       		.uleb128 0x27
 3889 0145 19       		.uleb128 0x19
 3890 0146 49       		.uleb128 0x49
 3891 0147 13       		.uleb128 0x13
 3892 0148 11       		.uleb128 0x11
 3893 0149 01       		.uleb128 0x1
 3894 014a 12       		.uleb128 0x12
 3895 014b 06       		.uleb128 0x6
 3896 014c 40       		.uleb128 0x40
 3897 014d 18       		.uleb128 0x18
 3898 014e 9742     		.uleb128 0x2117
 3899 0150 19       		.uleb128 0x19
 3900 0151 00       		.byte	0
 3901 0152 00       		.byte	0
 3902 0153 15       		.uleb128 0x15
 3903 0154 2E       		.uleb128 0x2e
 3904 0155 01       		.byte	0x1
 3905 0156 3F       		.uleb128 0x3f
 3906 0157 19       		.uleb128 0x19
 3907 0158 03       		.uleb128 0x3
 3908 0159 0E       		.uleb128 0xe
 3909 015a 3A       		.uleb128 0x3a
 3910 015b 0B       		.uleb128 0xb
 3911 015c 3B       		.uleb128 0x3b
 3912 015d 05       		.uleb128 0x5
 3913 015e 27       		.uleb128 0x27
 3914 015f 19       		.uleb128 0x19
 3915 0160 11       		.uleb128 0x11
 3916 0161 01       		.uleb128 0x1
 3917 0162 12       		.uleb128 0x12
 3918 0163 06       		.uleb128 0x6
 3919 0164 40       		.uleb128 0x40
 3920 0165 18       		.uleb128 0x18
 3921 0166 9742     		.uleb128 0x2117
 3922 0168 19       		.uleb128 0x19
 3923 0169 01       		.uleb128 0x1
 3924 016a 13       		.uleb128 0x13
 3925 016b 00       		.byte	0
 3926 016c 00       		.byte	0
 3927 016d 16       		.uleb128 0x16
 3928 016e 2E       		.uleb128 0x2e
 3929 016f 00       		.byte	0
 3930 0170 3F       		.uleb128 0x3f
 3931 0171 19       		.uleb128 0x19
 3932 0172 03       		.uleb128 0x3
 3933 0173 0E       		.uleb128 0xe
 3934 0174 3A       		.uleb128 0x3a
 3935 0175 0B       		.uleb128 0xb
 3936 0176 3B       		.uleb128 0x3b
 3937 0177 05       		.uleb128 0x5
 3938 0178 27       		.uleb128 0x27
 3939 0179 19       		.uleb128 0x19
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 127


 3940 017a 11       		.uleb128 0x11
 3941 017b 01       		.uleb128 0x1
 3942 017c 12       		.uleb128 0x12
 3943 017d 06       		.uleb128 0x6
 3944 017e 40       		.uleb128 0x40
 3945 017f 18       		.uleb128 0x18
 3946 0180 9642     		.uleb128 0x2116
 3947 0182 19       		.uleb128 0x19
 3948 0183 00       		.byte	0
 3949 0184 00       		.byte	0
 3950 0185 17       		.uleb128 0x17
 3951 0186 2E       		.uleb128 0x2e
 3952 0187 01       		.byte	0x1
 3953 0188 03       		.uleb128 0x3
 3954 0189 0E       		.uleb128 0xe
 3955 018a 3A       		.uleb128 0x3a
 3956 018b 0B       		.uleb128 0xb
 3957 018c 3B       		.uleb128 0x3b
 3958 018d 05       		.uleb128 0x5
 3959 018e 27       		.uleb128 0x27
 3960 018f 19       		.uleb128 0x19
 3961 0190 11       		.uleb128 0x11
 3962 0191 01       		.uleb128 0x1
 3963 0192 12       		.uleb128 0x12
 3964 0193 06       		.uleb128 0x6
 3965 0194 40       		.uleb128 0x40
 3966 0195 18       		.uleb128 0x18
 3967 0196 9642     		.uleb128 0x2116
 3968 0198 19       		.uleb128 0x19
 3969 0199 01       		.uleb128 0x1
 3970 019a 13       		.uleb128 0x13
 3971 019b 00       		.byte	0
 3972 019c 00       		.byte	0
 3973 019d 18       		.uleb128 0x18
 3974 019e 2E       		.uleb128 0x2e
 3975 019f 00       		.byte	0
 3976 01a0 03       		.uleb128 0x3
 3977 01a1 0E       		.uleb128 0xe
 3978 01a2 3A       		.uleb128 0x3a
 3979 01a3 0B       		.uleb128 0xb
 3980 01a4 3B       		.uleb128 0x3b
 3981 01a5 05       		.uleb128 0x5
 3982 01a6 27       		.uleb128 0x27
 3983 01a7 19       		.uleb128 0x19
 3984 01a8 11       		.uleb128 0x11
 3985 01a9 01       		.uleb128 0x1
 3986 01aa 12       		.uleb128 0x12
 3987 01ab 06       		.uleb128 0x6
 3988 01ac 40       		.uleb128 0x40
 3989 01ad 18       		.uleb128 0x18
 3990 01ae 9642     		.uleb128 0x2116
 3991 01b0 19       		.uleb128 0x19
 3992 01b1 00       		.byte	0
 3993 01b2 00       		.byte	0
 3994 01b3 19       		.uleb128 0x19
 3995 01b4 01       		.uleb128 0x1
 3996 01b5 01       		.byte	0x1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 128


 3997 01b6 49       		.uleb128 0x49
 3998 01b7 13       		.uleb128 0x13
 3999 01b8 01       		.uleb128 0x1
 4000 01b9 13       		.uleb128 0x13
 4001 01ba 00       		.byte	0
 4002 01bb 00       		.byte	0
 4003 01bc 1A       		.uleb128 0x1a
 4004 01bd 21       		.uleb128 0x21
 4005 01be 00       		.byte	0
 4006 01bf 49       		.uleb128 0x49
 4007 01c0 13       		.uleb128 0x13
 4008 01c1 2F       		.uleb128 0x2f
 4009 01c2 0B       		.uleb128 0xb
 4010 01c3 00       		.byte	0
 4011 01c4 00       		.byte	0
 4012 01c5 1B       		.uleb128 0x1b
 4013 01c6 26       		.uleb128 0x26
 4014 01c7 00       		.byte	0
 4015 01c8 49       		.uleb128 0x49
 4016 01c9 13       		.uleb128 0x13
 4017 01ca 00       		.byte	0
 4018 01cb 00       		.byte	0
 4019 01cc 1C       		.uleb128 0x1c
 4020 01cd 34       		.uleb128 0x34
 4021 01ce 00       		.byte	0
 4022 01cf 03       		.uleb128 0x3
 4023 01d0 0E       		.uleb128 0xe
 4024 01d1 3A       		.uleb128 0x3a
 4025 01d2 0B       		.uleb128 0xb
 4026 01d3 3B       		.uleb128 0x3b
 4027 01d4 0B       		.uleb128 0xb
 4028 01d5 49       		.uleb128 0x49
 4029 01d6 13       		.uleb128 0x13
 4030 01d7 3F       		.uleb128 0x3f
 4031 01d8 19       		.uleb128 0x19
 4032 01d9 3C       		.uleb128 0x3c
 4033 01da 19       		.uleb128 0x19
 4034 01db 00       		.byte	0
 4035 01dc 00       		.byte	0
 4036 01dd 00       		.byte	0
 4037              		.section	.debug_aranges,"",%progbits
 4038 0000 34010000 		.4byte	0x134
 4039 0004 0200     		.2byte	0x2
 4040 0006 00000000 		.4byte	.Ldebug_info0
 4041 000a 04       		.byte	0x4
 4042 000b 00       		.byte	0
 4043 000c 0000     		.2byte	0
 4044 000e 0000     		.2byte	0
 4045 0010 00000000 		.4byte	.LFB0
 4046 0014 1C000000 		.4byte	.LFE0-.LFB0
 4047 0018 00000000 		.4byte	.LFB1
 4048 001c 48000000 		.4byte	.LFE1-.LFB1
 4049 0020 00000000 		.4byte	.LFB2
 4050 0024 40000000 		.4byte	.LFE2-.LFB2
 4051 0028 00000000 		.4byte	.LFB3
 4052 002c 1C000000 		.4byte	.LFE3-.LFB3
 4053 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 129


 4054 0034 5C010000 		.4byte	.LFE4-.LFB4
 4055 0038 00000000 		.4byte	.LFB5
 4056 003c 1C000000 		.4byte	.LFE5-.LFB5
 4057 0040 00000000 		.4byte	.LFB6
 4058 0044 34000000 		.4byte	.LFE6-.LFB6
 4059 0048 00000000 		.4byte	.LFB7
 4060 004c 20000000 		.4byte	.LFE7-.LFB7
 4061 0050 00000000 		.4byte	.LFB8
 4062 0054 4C000000 		.4byte	.LFE8-.LFB8
 4063 0058 00000000 		.4byte	.LFB9
 4064 005c 30000000 		.4byte	.LFE9-.LFB9
 4065 0060 00000000 		.4byte	.LFB10
 4066 0064 58000000 		.4byte	.LFE10-.LFB10
 4067 0068 00000000 		.4byte	.LFB11
 4068 006c 24000000 		.4byte	.LFE11-.LFB11
 4069 0070 00000000 		.4byte	.LFB12
 4070 0074 6C000000 		.4byte	.LFE12-.LFB12
 4071 0078 00000000 		.4byte	.LFB13
 4072 007c 40000000 		.4byte	.LFE13-.LFB13
 4073 0080 00000000 		.4byte	.LFB14
 4074 0084 64000000 		.4byte	.LFE14-.LFB14
 4075 0088 00000000 		.4byte	.LFB15
 4076 008c 68000000 		.4byte	.LFE15-.LFB15
 4077 0090 00000000 		.4byte	.LFB16
 4078 0094 58000000 		.4byte	.LFE16-.LFB16
 4079 0098 00000000 		.4byte	.LFB17
 4080 009c 1C000000 		.4byte	.LFE17-.LFB17
 4081 00a0 00000000 		.4byte	.LFB18
 4082 00a4 6C000000 		.4byte	.LFE18-.LFB18
 4083 00a8 00000000 		.4byte	.LFB19
 4084 00ac 44000000 		.4byte	.LFE19-.LFB19
 4085 00b0 00000000 		.4byte	.LFB20
 4086 00b4 18000000 		.4byte	.LFE20-.LFB20
 4087 00b8 00000000 		.4byte	.LFB21
 4088 00bc 40000000 		.4byte	.LFE21-.LFB21
 4089 00c0 00000000 		.4byte	.LFB22
 4090 00c4 54000000 		.4byte	.LFE22-.LFB22
 4091 00c8 00000000 		.4byte	.LFB23
 4092 00cc 1C000000 		.4byte	.LFE23-.LFB23
 4093 00d0 00000000 		.4byte	.LFB24
 4094 00d4 70000000 		.4byte	.LFE24-.LFB24
 4095 00d8 00000000 		.4byte	.LFB25
 4096 00dc 34000000 		.4byte	.LFE25-.LFB25
 4097 00e0 00000000 		.4byte	.LFB26
 4098 00e4 40000000 		.4byte	.LFE26-.LFB26
 4099 00e8 00000000 		.4byte	.LFB27
 4100 00ec 34000000 		.4byte	.LFE27-.LFB27
 4101 00f0 00000000 		.4byte	.LFB28
 4102 00f4 50000000 		.4byte	.LFE28-.LFB28
 4103 00f8 00000000 		.4byte	.LFB29
 4104 00fc 38000000 		.4byte	.LFE29-.LFB29
 4105 0100 00000000 		.4byte	.LFB30
 4106 0104 E8000000 		.4byte	.LFE30-.LFB30
 4107 0108 00000000 		.4byte	.LFB31
 4108 010c 88000000 		.4byte	.LFE31-.LFB31
 4109 0110 00000000 		.4byte	.LFB32
 4110 0114 98000000 		.4byte	.LFE32-.LFB32
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 130


 4111 0118 00000000 		.4byte	.LFB33
 4112 011c 3C000000 		.4byte	.LFE33-.LFB33
 4113 0120 00000000 		.4byte	.LFB34
 4114 0124 6C000000 		.4byte	.LFE34-.LFB34
 4115 0128 00000000 		.4byte	.LFB35
 4116 012c AC000000 		.4byte	.LFE35-.LFB35
 4117 0130 00000000 		.4byte	0
 4118 0134 00000000 		.4byte	0
 4119              		.section	.debug_ranges,"",%progbits
 4120              	.Ldebug_ranges0:
 4121 0000 00000000 		.4byte	.LFB0
 4122 0004 1C000000 		.4byte	.LFE0
 4123 0008 00000000 		.4byte	.LFB1
 4124 000c 48000000 		.4byte	.LFE1
 4125 0010 00000000 		.4byte	.LFB2
 4126 0014 40000000 		.4byte	.LFE2
 4127 0018 00000000 		.4byte	.LFB3
 4128 001c 1C000000 		.4byte	.LFE3
 4129 0020 00000000 		.4byte	.LFB4
 4130 0024 5C010000 		.4byte	.LFE4
 4131 0028 00000000 		.4byte	.LFB5
 4132 002c 1C000000 		.4byte	.LFE5
 4133 0030 00000000 		.4byte	.LFB6
 4134 0034 34000000 		.4byte	.LFE6
 4135 0038 00000000 		.4byte	.LFB7
 4136 003c 20000000 		.4byte	.LFE7
 4137 0040 00000000 		.4byte	.LFB8
 4138 0044 4C000000 		.4byte	.LFE8
 4139 0048 00000000 		.4byte	.LFB9
 4140 004c 30000000 		.4byte	.LFE9
 4141 0050 00000000 		.4byte	.LFB10
 4142 0054 58000000 		.4byte	.LFE10
 4143 0058 00000000 		.4byte	.LFB11
 4144 005c 24000000 		.4byte	.LFE11
 4145 0060 00000000 		.4byte	.LFB12
 4146 0064 6C000000 		.4byte	.LFE12
 4147 0068 00000000 		.4byte	.LFB13
 4148 006c 40000000 		.4byte	.LFE13
 4149 0070 00000000 		.4byte	.LFB14
 4150 0074 64000000 		.4byte	.LFE14
 4151 0078 00000000 		.4byte	.LFB15
 4152 007c 68000000 		.4byte	.LFE15
 4153 0080 00000000 		.4byte	.LFB16
 4154 0084 58000000 		.4byte	.LFE16
 4155 0088 00000000 		.4byte	.LFB17
 4156 008c 1C000000 		.4byte	.LFE17
 4157 0090 00000000 		.4byte	.LFB18
 4158 0094 6C000000 		.4byte	.LFE18
 4159 0098 00000000 		.4byte	.LFB19
 4160 009c 44000000 		.4byte	.LFE19
 4161 00a0 00000000 		.4byte	.LFB20
 4162 00a4 18000000 		.4byte	.LFE20
 4163 00a8 00000000 		.4byte	.LFB21
 4164 00ac 40000000 		.4byte	.LFE21
 4165 00b0 00000000 		.4byte	.LFB22
 4166 00b4 54000000 		.4byte	.LFE22
 4167 00b8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 131


 4168 00bc 1C000000 		.4byte	.LFE23
 4169 00c0 00000000 		.4byte	.LFB24
 4170 00c4 70000000 		.4byte	.LFE24
 4171 00c8 00000000 		.4byte	.LFB25
 4172 00cc 34000000 		.4byte	.LFE25
 4173 00d0 00000000 		.4byte	.LFB26
 4174 00d4 40000000 		.4byte	.LFE26
 4175 00d8 00000000 		.4byte	.LFB27
 4176 00dc 34000000 		.4byte	.LFE27
 4177 00e0 00000000 		.4byte	.LFB28
 4178 00e4 50000000 		.4byte	.LFE28
 4179 00e8 00000000 		.4byte	.LFB29
 4180 00ec 38000000 		.4byte	.LFE29
 4181 00f0 00000000 		.4byte	.LFB30
 4182 00f4 E8000000 		.4byte	.LFE30
 4183 00f8 00000000 		.4byte	.LFB31
 4184 00fc 88000000 		.4byte	.LFE31
 4185 0100 00000000 		.4byte	.LFB32
 4186 0104 98000000 		.4byte	.LFE32
 4187 0108 00000000 		.4byte	.LFB33
 4188 010c 3C000000 		.4byte	.LFE33
 4189 0110 00000000 		.4byte	.LFB34
 4190 0114 6C000000 		.4byte	.LFE34
 4191 0118 00000000 		.4byte	.LFB35
 4192 011c AC000000 		.4byte	.LFE35
 4193 0120 00000000 		.4byte	0
 4194 0124 00000000 		.4byte	0
 4195              		.section	.debug_line,"",%progbits
 4196              	.Ldebug_line0:
 4197 0000 E3040000 		.section	.debug_str,"MS",%progbits,1
 4197      02005C00 
 4197      00000201 
 4197      FB0E0D00 
 4197      01010101 
 4198              	.LASF10:
 4199 0000 75696E74 		.ascii	"uint16\000"
 4199      313600
 4200              	.LASF89:
 4201 0007 636F756E 		.ascii	"counterIntMaskTbl\000"
 4201      74657249 
 4201      6E744D61 
 4201      736B5462 
 4201      6C00
 4202              	.LASF90:
 4203 0019 63795379 		.ascii	"cySysWdtCallback\000"
 4203      73576474 
 4203      43616C6C 
 4203      6261636B 
 4203      00
 4204              	.LASF41:
 4205 002a 43795379 		.ascii	"CySysWdtSetMode\000"
 4205      73576474 
 4205      5365744D 
 4205      6F646500 
 4206              	.LASF37:
 4207 003a 43795379 		.ascii	"CySysWdtUnlock\000"
 4207      73576474 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 132


 4207      556E6C6F 
 4207      636B00
 4208              	.LASF76:
 4209 0049 43795379 		.ascii	"CySysWatchdogFeed\000"
 4209      73576174 
 4209      6368646F 
 4209      67466565 
 4209      6400
 4210              	.LASF40:
 4211 005b 636F756E 		.ascii	"counterNum\000"
 4211      7465724E 
 4211      756D00
 4212              	.LASF94:
 4213 0066 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 4213      73436C6B 
 4213      4C66636C 
 4213      6B506F73 
 4213      65646765 
 4214              	.LASF59:
 4215 0080 43795379 		.ascii	"CySysWdtGetCascade\000"
 4215      73576474 
 4215      47657443 
 4215      61736361 
 4215      646500
 4216              	.LASF23:
 4217 0093 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 4217      73436C6B 
 4217      496C6F53 
 4217      74617274 
 4217      4D656173 
 4218              	.LASF85:
 4219 00af 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 4219      6B506F73 
 4219      65646765 
 4219      57647443 
 4219      6F756E74 
 4220              	.LASF7:
 4221 00ce 6C6F6E67 		.ascii	"long long unsigned int\000"
 4221      206C6F6E 
 4221      6720756E 
 4221      7369676E 
 4221      65642069 
 4222              	.LASF6:
 4223 00e5 6C6F6E67 		.ascii	"long long int\000"
 4223      206C6F6E 
 4223      6720696E 
 4223      7400
 4224              	.LASF0:
 4225 00f3 7369676E 		.ascii	"signed char\000"
 4225      65642063 
 4225      68617200 
 4226              	.LASF69:
 4227 00ff 66756E63 		.ascii	"function\000"
 4227      74696F6E 
 4227      00
 4228              	.LASF27:
 4229 0108 696E7465 		.ascii	"interruptState\000"
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 133


 4229      72727570 
 4229      74537461 
 4229      746500
 4230              	.LASF20:
 4231 0117 63795764 		.ascii	"cyWdtCallback\000"
 4231      7443616C 
 4231      6C626163 
 4231      6B00
 4232              	.LASF19:
 4233 0125 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 4233      79735F74 
 4233      696D6572 
 4233      5F64656C 
 4233      61797479 
 4234              	.LASF58:
 4235 0141 62697473 		.ascii	"bits\000"
 4235      00
 4236              	.LASF4:
 4237 0146 6C6F6E67 		.ascii	"long int\000"
 4237      20696E74 
 4237      00
 4238              	.LASF56:
 4239 014f 72656756 		.ascii	"regValue\000"
 4239      616C7565 
 4239      00
 4240              	.LASF93:
 4241 0158 433A5C55 		.ascii	"C:\\Users\\Breyana_2\\Documents\\SDCard_Demo.cydsn\000"
 4241      73657273 
 4241      5C427265 
 4241      79616E61 
 4241      5F325C44 
 4242              	.LASF9:
 4243 0187 75696E74 		.ascii	"uint8\000"
 4243      3800
 4244              	.LASF46:
 4245 018d 656E6162 		.ascii	"enable\000"
 4245      6C6500
 4246              	.LASF13:
 4247 0194 646F7562 		.ascii	"double\000"
 4247      6C6500
 4248              	.LASF26:
 4249 019b 636F6D70 		.ascii	"compensatedCycles\000"
 4249      656E7361 
 4249      74656443 
 4249      79636C65 
 4249      7300
 4250              	.LASF33:
 4251 01ad 43795379 		.ascii	"CySysClkIloStop\000"
 4251      73436C6B 
 4251      496C6F53 
 4251      746F7000 
 4252              	.LASF28:
 4253 01bd 696C6F43 		.ascii	"iloCompensatedCycles\000"
 4253      6F6D7065 
 4253      6E736174 
 4253      65644379 
 4253      636C6573 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 134


 4254              	.LASF67:
 4255 01d2 636F756E 		.ascii	"countersMask\000"
 4255      74657273 
 4255      4D61736B 
 4255      00
 4256              	.LASF11:
 4257 01df 75696E74 		.ascii	"uint32\000"
 4257      333200
 4258              	.LASF24:
 4259 01e6 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 4259      73436C6B 
 4259      496C6F53 
 4259      746F704D 
 4259      65617375 
 4260              	.LASF70:
 4261 0201 70726576 		.ascii	"prevCallback\000"
 4261      43616C6C 
 4261      6261636B 
 4261      00
 4262              	.LASF54:
 4263 020e 43795379 		.ascii	"CySysWdtSetMatch\000"
 4263      73576474 
 4263      5365744D 
 4263      61746368 
 4263      00
 4264              	.LASF53:
 4265 021f 636F756E 		.ascii	"countersEnableStatus\000"
 4265      74657273 
 4265      456E6162 
 4265      6C655374 
 4265      61747573 
 4266              	.LASF88:
 4267 0234 77647449 		.ascii	"wdtIsrMask\000"
 4267      73724D61 
 4267      736B00
 4268              	.LASF48:
 4269 023f 43795379 		.ascii	"CySysWdtEnable\000"
 4269      73576474 
 4269      456E6162 
 4269      6C6500
 4270              	.LASF68:
 4271 024e 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 4271      73576474 
 4271      53657449 
 4271      6E746572 
 4271      72757074 
 4272              	.LASF49:
 4273 026b 636F756E 		.ascii	"counterMask\000"
 4273      7465724D 
 4273      61736B00 
 4274              	.LASF47:
 4275 0277 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 4275      73576474 
 4275      47657443 
 4275      6C656172 
 4275      4F6E4D61 
 4276              	.LASF8:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 135


 4277 028f 756E7369 		.ascii	"unsigned int\000"
 4277      676E6564 
 4277      20696E74 
 4277      00
 4278              	.LASF77:
 4279 029c 66697273 		.ascii	"firstCount\000"
 4279      74436F75 
 4279      6E7400
 4280              	.LASF72:
 4281 02a7 72657443 		.ascii	"retCallback\000"
 4281      616C6C62 
 4281      61636B00 
 4282              	.LASF25:
 4283 02b3 64657369 		.ascii	"desiredDelay\000"
 4283      72656444 
 4283      656C6179 
 4283      00
 4284              	.LASF5:
 4285 02c0 6C6F6E67 		.ascii	"long unsigned int\000"
 4285      20756E73 
 4285      69676E65 
 4285      6420696E 
 4285      7400
 4286              	.LASF82:
 4287 02d2 6D617463 		.ascii	"matchValue\000"
 4287      6856616C 
 4287      756500
 4288              	.LASF95:
 4289 02dd 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 4289      73436C6B 
 4289      4C66636C 
 4289      6B506F73 
 4289      65646765 
 4290              	.LASF73:
 4291 02f9 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 4291      73576474 
 4291      456E6162 
 4291      6C65436F 
 4291      756E7465 
 4292              	.LASF3:
 4293 0312 73686F72 		.ascii	"short unsigned int\000"
 4293      7420756E 
 4293      7369676E 
 4293      65642069 
 4293      6E7400
 4294              	.LASF39:
 4295 0325 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 4295      73576474 
 4295      47657445 
 4295      6E61626C 
 4295      65645374 
 4296              	.LASF71:
 4297 033e 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 4297      73576474 
 4297      47657449 
 4297      6E746572 
 4297      72757074 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 136


 4298              	.LASF75:
 4299 035b 43795379 		.ascii	"CySysWdtIsr\000"
 4299      73576474 
 4299      49737200 
 4300              	.LASF22:
 4301 0367 43795379 		.ascii	"CySysClkIloStart\000"
 4301      73436C6B 
 4301      496C6F53 
 4301      74617274 
 4301      00
 4302              	.LASF57:
 4303 0378 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 4303      73576474 
 4303      53657454 
 4303      6F67676C 
 4303      65426974 
 4304              	.LASF16:
 4305 038d 72656733 		.ascii	"reg32\000"
 4305      3200
 4306              	.LASF84:
 4307 0393 746D7056 		.ascii	"tmpValue\000"
 4307      616C7565 
 4307      00
 4308              	.LASF32:
 4309 039c 72657475 		.ascii	"returnStatus\000"
 4309      726E5374 
 4309      61747573 
 4309      00
 4310              	.LASF21:
 4311 03a9 73697A65 		.ascii	"sizetype\000"
 4311      74797065 
 4311      00
 4312              	.LASF61:
 4313 03b2 43795379 		.ascii	"CySysWdtGetMatch\000"
 4313      73576474 
 4313      4765744D 
 4313      61746368 
 4313      00
 4314              	.LASF55:
 4315 03c3 6D617463 		.ascii	"match\000"
 4315      6800
 4316              	.LASF17:
 4317 03c9 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 4317      59535F54 
 4317      494D4552 
 4317      5F574149 
 4317      5400
 4318              	.LASF31:
 4319 03db 63686563 		.ascii	"checkStatus\000"
 4319      6B537461 
 4319      74757300 
 4320              	.LASF96:
 4321 03e7 63796465 		.ascii	"cydelayFreqHz\000"
 4321      6C617946 
 4321      72657148 
 4321      7A00
 4322              	.LASF66:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 137


 4323 03f5 43795379 		.ascii	"CySysWdtResetCounters\000"
 4323      73576474 
 4323      52657365 
 4323      74436F75 
 4323      6E746572 
 4324              	.LASF64:
 4325 040b 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 4325      73576474 
 4325      436C6561 
 4325      72496E74 
 4325      65727275 
 4326              	.LASF12:
 4327 0422 666C6F61 		.ascii	"float\000"
 4327      7400
 4328              	.LASF83:
 4329 0428 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 4329      7354696D 
 4329      65724465 
 4329      6C617955 
 4329      6E74696C 
 4330              	.LASF79:
 4331 0442 43795379 		.ascii	"CySysTimerDelay\000"
 4331      7354696D 
 4331      65724465 
 4331      6C617900 
 4332              	.LASF36:
 4333 0452 43795379 		.ascii	"CySysWdtLocked\000"
 4333      73576474 
 4333      4C6F636B 
 4333      656400
 4334              	.LASF1:
 4335 0461 756E7369 		.ascii	"unsigned char\000"
 4335      676E6564 
 4335      20636861 
 4335      7200
 4336              	.LASF30:
 4337 046f 636F6D70 		.ascii	"compensateRunningStatus\000"
 4337      656E7361 
 4337      74655275 
 4337      6E6E696E 
 4337      67537461 
 4338              	.LASF78:
 4339 0487 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 4339      6B506F73 
 4339      65646765 
 4339      456E6162 
 4339      6C656457 
 4340              	.LASF81:
 4341 04a5 64656C61 		.ascii	"delay\000"
 4341      7900
 4342              	.LASF2:
 4343 04ab 73686F72 		.ascii	"short int\000"
 4343      7420696E 
 4343      7400
 4344              	.LASF80:
 4345 04b5 64656C61 		.ascii	"delayType\000"
 4345      79547970 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 138


 4345      6500
 4346              	.LASF50:
 4347 04bf 43795379 		.ascii	"CySysWdtDisable\000"
 4347      73576474 
 4347      44697361 
 4347      626C6500 
 4348              	.LASF35:
 4349 04cf 43795379 		.ascii	"CySysClkIloEnabled\000"
 4349      73436C6B 
 4349      496C6F45 
 4349      6E61626C 
 4349      656400
 4350              	.LASF63:
 4351 04e2 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 4351      73576474 
 4351      47657449 
 4351      6E746572 
 4351      72757074 
 4352              	.LASF92:
 4353 04fd 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 4353      72617465 
 4353      645F536F 
 4353      75726365 
 4353      5C50536F 
 4354              	.LASF74:
 4355 051e 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 4355      73576474 
 4355      44697361 
 4355      626C6543 
 4355      6F756E74 
 4356              	.LASF14:
 4357 0538 63686172 		.ascii	"char\000"
 4357      00
 4358              	.LASF42:
 4359 053d 6D6F6465 		.ascii	"mode\000"
 4359      00
 4360              	.LASF62:
 4361 0542 43795379 		.ascii	"CySysWdtGetCount\000"
 4361      73576474 
 4361      47657443 
 4361      6F756E74 
 4361      00
 4362              	.LASF34:
 4363 0553 43795379 		.ascii	"CySysWdtLock\000"
 4363      73576474 
 4363      4C6F636B 
 4363      00
 4364              	.LASF87:
 4365 0560 64697361 		.ascii	"disableServicedIsr\000"
 4365      626C6553 
 4365      65727669 
 4365      63656449 
 4365      737200
 4366              	.LASF45:
 4367 0573 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 4367      73576474 
 4367      53657443 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 139


 4367      6C656172 
 4367      4F6E4D61 
 4368              	.LASF51:
 4369 058b 43795379 		.ascii	"CySysWdtSetCascade\000"
 4369      73576474 
 4369      53657443 
 4369      61736361 
 4369      646500
 4370              	.LASF44:
 4371 059e 43795379 		.ascii	"CySysWdtGetMode\000"
 4371      73576474 
 4371      4765744D 
 4371      6F646500 
 4372              	.LASF29:
 4373 05ae 64657369 		.ascii	"desiredDelayInCounts\000"
 4373      72656444 
 4373      656C6179 
 4373      496E436F 
 4373      756E7473 
 4374              	.LASF43:
 4375 05c3 636F6E66 		.ascii	"configRegValue\000"
 4375      69675265 
 4375      6756616C 
 4375      756500
 4376              	.LASF65:
 4377 05d2 7764744C 		.ascii	"wdtLockState\000"
 4377      6F636B53 
 4377      74617465 
 4377      00
 4378              	.LASF86:
 4379 05df 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 4379      6B506F73 
 4379      65646765 
 4379      57647443 
 4379      6F756E74 
 4380              	.LASF52:
 4381 05fb 63617363 		.ascii	"cascadeMask\000"
 4381      6164654D 
 4381      61736B00 
 4382              	.LASF15:
 4383 0607 63797374 		.ascii	"cystatus\000"
 4383      61747573 
 4383      00
 4384              	.LASF91:
 4385 0610 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4385      4320342E 
 4385      392E3320 
 4385      32303135 
 4385      30333033 
 4386 0643 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4386      20726576 
 4386      6973696F 
 4386      6E203232 
 4386      31323230 
 4387 0676 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4387      66756E63 
 4387      74696F6E 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccW2TyRf.s 			page 140


 4387      2D736563 
 4387      74696F6E 
 4388              	.LASF60:
 4389 069e 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 4389      73576474 
 4389      47657454 
 4389      6F67676C 
 4389      65426974 
 4390              	.LASF38:
 4391 06b3 43795379 		.ascii	"CySysClkIloCompensate\000"
 4391      73436C6B 
 4391      496C6F43 
 4391      6F6D7065 
 4391      6E736174 
 4392              	.LASF18:
 4393 06c9 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 4393      59535F54 
 4393      494D4552 
 4393      5F494E54 
 4393      45525255 
 4394              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
