ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103              		.global	CySysClkPumpConfig
 104 002e 0000     		.data
 105              		.align	2
 106              		.type	CySysClkPumpConfig, %object
 107              		.size	CySysClkPumpConfig, 4
 108              	CySysClkPumpConfig:
 109 0010 01000000 		.word	1
 110              		.section	.text.CySysClkImoStart,"ax",%progbits
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 3


 111              		.align	2
 112              		.global	CySysClkImoStart
 113              		.code	16
 114              		.thumb_func
 115              		.type	CySysClkImoStart, %function
 116              	CySysClkImoStart:
 117              	.LFB0:
 118              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 4


  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 5


 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 119              		.loc 1 108 0
 120              		.cfi_startproc
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 127              		.loc 1 109 0
 128 0004 044B     		ldr	r3, .L2
 129 0006 044A     		ldr	r2, .L2
 130 0008 1268     		ldr	r2, [r2]
 131 000a 8021     		mov	r1, #128
 132 000c 0906     		lsl	r1, r1, #24
 133 000e 0A43     		orr	r2, r1
 134 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 135              		.loc 1 124 0
 136 0012 BD46     		mov	sp, r7
 137              		@ sp needed
 138 0014 80BD     		pop	{r7, pc}
 139              	.L3:
 140 0016 C046     		.align	2
 141              	.L2:
 142 0018 08010B40 		.word	1074462984
 143              		.cfi_endproc
 144              	.LFE0:
 145              		.size	CySysClkImoStart, .-CySysClkImoStart
 146              		.section	.text.CySysClkImoStop,"ax",%progbits
 147              		.align	2
 148              		.global	CySysClkImoStop
 149              		.code	16
 150              		.thumb_func
 151              		.type	CySysClkImoStop, %function
 152              	CySysClkImoStop:
 153              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 6


 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 154              		.loc 1 140 0
 155              		.cfi_startproc
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 162              		.loc 1 149 0
 163 0004 034B     		ldr	r3, .L5
 164 0006 034A     		ldr	r2, .L5
 165 0008 1268     		ldr	r2, [r2]
 166 000a 5200     		lsl	r2, r2, #1
 167 000c 5208     		lsr	r2, r2, #1
 168 000e 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 150 0
 170 0010 BD46     		mov	sp, r7
 171              		@ sp needed
 172 0012 80BD     		pop	{r7, pc}
 173              	.L6:
 174              		.align	2
 175              	.L5:
 176 0014 08010B40 		.word	1074462984
 177              		.cfi_endproc
 178              	.LFE1:
 179              		.size	CySysClkImoStop, .-CySysClkImoStop
 180              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkWriteHfclkDirect
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkWriteHfclkDirect, %function
 186              	CySysClkWriteHfclkDirect:
 187              	.LFB2:
 151:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 7


 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 8


 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 9


 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 10


 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 11


 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 430 0
 189              		.cfi_startproc
 190 0000 90B5     		push	{r4, r7, lr}
 191              		.cfi_def_cfa_offset 12
 192              		.cfi_offset 4, -12
 193              		.cfi_offset 7, -8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 12


 194              		.cfi_offset 14, -4
 195 0002 85B0     		sub	sp, sp, #20
 196              		.cfi_def_cfa_offset 32
 197 0004 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 200              		.loc 1 434 0
 201 0008 0F23     		mov	r3, #15
 202 000a FC18     		add	r4, r7, r3
 203 000c FFF7FEFF 		bl	CyEnterCriticalSection
 204 0010 031C     		mov	r3, r0
 205 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 206              		.loc 1 437 0
 207 0014 0B4B     		ldr	r3, .L8
 208 0016 1B68     		ldr	r3, [r3]
 209 0018 0722     		mov	r2, #7
 210 001a 9343     		bic	r3, r2
 211 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 212              		.loc 1 448 0
 213 001e 7B68     		ldr	r3, [r7, #4]
 214 0020 0722     		mov	r2, #7
 215 0022 1340     		and	r3, r2
 216 0024 BA68     		ldr	r2, [r7, #8]
 217 0026 1343     		orr	r3, r2
 218 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 219              		.loc 1 451 0
 220 002a 064B     		ldr	r3, .L8
 221 002c BA68     		ldr	r2, [r7, #8]
 222 002e 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 223              		.loc 1 453 0
 224 0030 0F23     		mov	r3, #15
 225 0032 FB18     		add	r3, r7, r3
 226 0034 1B78     		ldrb	r3, [r3]
 227 0036 181C     		mov	r0, r3
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 13


 228 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 229              		.loc 1 454 0
 230 003c BD46     		mov	sp, r7
 231 003e 05B0     		add	sp, sp, #20
 232              		@ sp needed
 233 0040 90BD     		pop	{r4, r7, pc}
 234              	.L9:
 235 0042 C046     		.align	2
 236              	.L8:
 237 0044 00010B40 		.word	1074462976
 238              		.cfi_endproc
 239              	.LFE2:
 240              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 241              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 242              		.align	2
 243              		.global	CySysEnablePumpClock
 244              		.code	16
 245              		.thumb_func
 246              		.type	CySysEnablePumpClock, %function
 247              	CySysEnablePumpClock:
 248              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 249              		.loc 1 474 0
 250              		.cfi_startproc
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              		.cfi_def_cfa_offset 16
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 260              		.loc 1 476 0
 261 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 14


 262 000a 0122     		mov	r2, #1
 263 000c 1340     		and	r3, r2
 264 000e 08D0     		beq	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 265              		.loc 1 478 0
 266 0010 0C4A     		ldr	r2, .L13
 267 0012 0C4B     		ldr	r3, .L13
 268 0014 1968     		ldr	r1, [r3]
 269 0016 0C4B     		ldr	r3, .L13+4
 270 0018 1B68     		ldr	r3, [r3]
 271 001a 5B06     		lsl	r3, r3, #25
 272 001c 0B43     		orr	r3, r1
 273 001e 1360     		str	r3, [r2]
 274 0020 0CE0     		b	.L10
 275              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 276              		.loc 1 482 0
 277 0022 084B     		ldr	r3, .L13
 278 0024 1B68     		ldr	r3, [r3]
 279 0026 5B0E     		lsr	r3, r3, #25
 280 0028 0722     		mov	r2, #7
 281 002a 1A40     		and	r2, r3
 282 002c 064B     		ldr	r3, .L13+4
 283 002e 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 284              		.loc 1 484 0
 285 0030 044B     		ldr	r3, .L13
 286 0032 044A     		ldr	r2, .L13
 287 0034 1268     		ldr	r2, [r2]
 288 0036 0549     		ldr	r1, .L13+8
 289 0038 0A40     		and	r2, r1
 290 003a 1A60     		str	r2, [r3]
 291              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 292              		.loc 1 498 0
 293 003c BD46     		mov	sp, r7
 294 003e 02B0     		add	sp, sp, #8
 295              		@ sp needed
 296 0040 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 15


 297              	.L14:
 298 0042 C046     		.align	2
 299              	.L13:
 300 0044 08010B40 		.word	1074462984
 301 0048 00000000 		.word	CySysClkPumpConfig
 302 004c FFFFFFF1 		.word	-234881025
 303              		.cfi_endproc
 304              	.LFE3:
 305              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 306              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 307              		.align	2
 308              		.global	CySysClkGetSysclkSource
 309              		.code	16
 310              		.thumb_func
 311              		.type	CySysClkGetSysclkSource, %function
 312              	CySysClkGetSysclkSource:
 313              	.LFB4:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 314              		.loc 1 511 0
 315              		.cfi_startproc
 316 0000 90B5     		push	{r4, r7, lr}
 317              		.cfi_def_cfa_offset 12
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 83B0     		sub	sp, sp, #12
 322              		.cfi_def_cfa_offset 24
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 325              		.loc 1 515 0
 326 0006 FC1D     		add	r4, r7, #7
 327 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 328 000c 031C     		mov	r3, r0
 329 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 16


 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 330              		.loc 1 525 0
 331 0010 074B     		ldr	r3, .L17
 332 0012 1B68     		ldr	r3, [r3]
 333 0014 0722     		mov	r2, #7
 334 0016 1340     		and	r3, r2
 335 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 336              		.loc 1 528 0
 337 001a FB1D     		add	r3, r7, #7
 338 001c 1B78     		ldrb	r3, [r3]
 339 001e 181C     		mov	r0, r3
 340 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 341              		.loc 1 530 0
 342 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
 343              		.loc 1 531 0
 344 0026 181C     		mov	r0, r3
 345 0028 BD46     		mov	sp, r7
 346 002a 03B0     		add	sp, sp, #12
 347              		@ sp needed
 348 002c 90BD     		pop	{r4, r7, pc}
 349              	.L18:
 350 002e C046     		.align	2
 351              	.L17:
 352 0030 00010B40 		.word	1074462976
 353              		.cfi_endproc
 354              	.LFE4:
 355              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 356              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 357              		.align	2
 358              		.global	CySysClkWriteSysclkDiv
 359              		.code	16
 360              		.thumb_func
 361              		.type	CySysClkWriteSysclkDiv, %function
 362              	CySysClkWriteSysclkDiv:
 363              	.LFB5:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 17


 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 364              		.loc 1 566 0
 365              		.cfi_startproc
 366 0000 90B5     		push	{r4, r7, lr}
 367              		.cfi_def_cfa_offset 12
 368              		.cfi_offset 4, -12
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 85B0     		sub	sp, sp, #20
 372              		.cfi_def_cfa_offset 32
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 375 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 376              		.loc 1 569 0
 377 0008 0F23     		mov	r3, #15
 378 000a FC18     		add	r4, r7, r3
 379 000c FFF7FEFF 		bl	CyEnterCriticalSection
 380 0010 031C     		mov	r3, r0
 381 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 382              		.loc 1 571 0
 383 0014 094B     		ldr	r3, .L20
 384 0016 7A68     		ldr	r2, [r7, #4]
 385 0018 0721     		mov	r1, #7
 386 001a 0A40     		and	r2, r1
 387 001c D104     		lsl	r1, r2, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 388              		.loc 1 573 0
 389 001e 074A     		ldr	r2, .L20
 390 0020 1268     		ldr	r2, [r2]
 391 0022 0748     		ldr	r0, .L20+4
 392 0024 0240     		and	r2, r0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 18


 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 393              		.loc 1 572 0
 394 0026 0A43     		orr	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 395              		.loc 1 571 0
 396 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 397              		.loc 1 576 0
 398 002a 0F23     		mov	r3, #15
 399 002c FB18     		add	r3, r7, r3
 400 002e 1B78     		ldrb	r3, [r3]
 401 0030 181C     		mov	r0, r3
 402 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 403              		.loc 1 577 0
 404 0036 BD46     		mov	sp, r7
 405 0038 05B0     		add	sp, sp, #20
 406              		@ sp needed
 407 003a 90BD     		pop	{r4, r7, pc}
 408              	.L21:
 409              		.align	2
 410              	.L20:
 411 003c 00010B40 		.word	1074462976
 412 0040 FFFFC7FF 		.word	-3670017
 413              		.cfi_endproc
 414              	.LFE5:
 415              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 416              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 417              		.align	2
 418              		.global	CySysClkWriteImoFreq
 419              		.code	16
 420              		.thumb_func
 421              		.type	CySysClkWriteImoFreq, %function
 422              	CySysClkWriteImoFreq:
 423              	.LFB6:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 19


 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 424              		.loc 1 624 0
 425              		.cfi_startproc
 426 0000 90B5     		push	{r4, r7, lr}
 427              		.cfi_def_cfa_offset 12
 428              		.cfi_offset 4, -12
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 85B0     		sub	sp, sp, #20
 432              		.cfi_def_cfa_offset 32
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 435 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 20


 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 436              		.loc 1 647 0
 437 0008 0C23     		mov	r3, #12
 438 000a FC18     		add	r4, r7, r3
 439 000c FFF7FEFF 		bl	CyEnterCriticalSection
 440 0010 031C     		mov	r3, r0
 441 0012 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 21


 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 442              		.loc 1 697 0
 443 0014 7B68     		ldr	r3, [r7, #4]
 444 0016 022B     		cmp	r3, #2
 445 0018 00D8     		bhi	.LCB296
 446 001a B4E0     		b	.L23	@long jump
 447              	.LCB296:
 448              		.loc 1 697 0 is_stmt 0 discriminator 1
 449 001c 7B68     		ldr	r3, [r7, #4]
 450 001e 302B     		cmp	r3, #48
 451 0020 00D9     		bls	.LCB299
 452 0022 B0E0     		b	.L23	@long jump
 453              	.LCB299:
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 454              		.loc 1 699 0 is_stmt 1
 455 0024 5E4B     		ldr	r3, .L34
 456 0026 1B78     		ldrb	r3, [r3]
 457 0028 DBB2     		uxtb	r3, r3
 458 002a 1A1E     		sub	r2, r3, #0
 459 002c 7B68     		ldr	r3, [r7, #4]
 460 002e 9A42     		cmp	r2, r3
 461 0030 0AD3     		bcc	.L24
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 462              		.loc 1 701 0
 463 0032 5C4A     		ldr	r2, .L34+4
 464 0034 0F23     		mov	r3, #15
 465 0036 FB18     		add	r3, r7, r3
 466 0038 1278     		ldrb	r2, [r2]
 467 003a 1A70     		strb	r2, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 468              		.loc 1 702 0
 469 003c 5A4A     		ldr	r2, .L34+8
 470 003e 0E23     		mov	r3, #14
 471 0040 FB18     		add	r3, r7, r3
 472 0042 1278     		ldrb	r2, [r2]
 473 0044 1A70     		strb	r2, [r3]
 474 0046 3FE0     		b	.L25
 475              	.L24:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 476              		.loc 1 704 0
 477 0048 584B     		ldr	r3, .L34+12
 478 004a 1B78     		ldrb	r3, [r3]
 479 004c DBB2     		uxtb	r3, r3
 480 004e 1A1E     		sub	r2, r3, #0
 481 0050 7B68     		ldr	r3, [r7, #4]
 482 0052 9A42     		cmp	r2, r3
 483 0054 0AD3     		bcc	.L26
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 484              		.loc 1 706 0
 485 0056 564A     		ldr	r2, .L34+16
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 22


 486 0058 0F23     		mov	r3, #15
 487 005a FB18     		add	r3, r7, r3
 488 005c 1278     		ldrb	r2, [r2]
 489 005e 1A70     		strb	r2, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 490              		.loc 1 707 0
 491 0060 544A     		ldr	r2, .L34+20
 492 0062 0E23     		mov	r3, #14
 493 0064 FB18     		add	r3, r7, r3
 494 0066 1278     		ldrb	r2, [r2]
 495 0068 1A70     		strb	r2, [r3]
 496 006a 2DE0     		b	.L25
 497              	.L26:
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 498              		.loc 1 709 0
 499 006c 524B     		ldr	r3, .L34+24
 500 006e 1B78     		ldrb	r3, [r3]
 501 0070 DBB2     		uxtb	r3, r3
 502 0072 1A1E     		sub	r2, r3, #0
 503 0074 7B68     		ldr	r3, [r7, #4]
 504 0076 9A42     		cmp	r2, r3
 505 0078 0AD3     		bcc	.L27
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 506              		.loc 1 711 0
 507 007a 504A     		ldr	r2, .L34+28
 508 007c 0F23     		mov	r3, #15
 509 007e FB18     		add	r3, r7, r3
 510 0080 1278     		ldrb	r2, [r2]
 511 0082 1A70     		strb	r2, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 512              		.loc 1 712 0
 513 0084 4E4A     		ldr	r2, .L34+32
 514 0086 0E23     		mov	r3, #14
 515 0088 FB18     		add	r3, r7, r3
 516 008a 1278     		ldrb	r2, [r2]
 517 008c 1A70     		strb	r2, [r3]
 518 008e 1BE0     		b	.L25
 519              	.L27:
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 520              		.loc 1 714 0
 521 0090 4C4B     		ldr	r3, .L34+36
 522 0092 1B78     		ldrb	r3, [r3]
 523 0094 DBB2     		uxtb	r3, r3
 524 0096 1A1E     		sub	r2, r3, #0
 525 0098 7B68     		ldr	r3, [r7, #4]
 526 009a 9A42     		cmp	r2, r3
 527 009c 0AD3     		bcc	.L28
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 528              		.loc 1 716 0
 529 009e 4A4A     		ldr	r2, .L34+40
 530 00a0 0F23     		mov	r3, #15
 531 00a2 FB18     		add	r3, r7, r3
 532 00a4 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 23


 533 00a6 1A70     		strb	r2, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 534              		.loc 1 717 0
 535 00a8 484A     		ldr	r2, .L34+44
 536 00aa 0E23     		mov	r3, #14
 537 00ac FB18     		add	r3, r7, r3
 538 00ae 1278     		ldrb	r2, [r2]
 539 00b0 1A70     		strb	r2, [r3]
 540 00b2 09E0     		b	.L25
 541              	.L28:
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 542              		.loc 1 721 0
 543 00b4 464A     		ldr	r2, .L34+48
 544 00b6 0F23     		mov	r3, #15
 545 00b8 FB18     		add	r3, r7, r3
 546 00ba 1278     		ldrb	r2, [r2]
 547 00bc 1A70     		strb	r2, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 548              		.loc 1 722 0
 549 00be 454A     		ldr	r2, .L34+52
 550 00c0 0E23     		mov	r3, #14
 551 00c2 FB18     		add	r3, r7, r3
 552 00c4 1278     		ldrb	r2, [r2]
 553 00c6 1A70     		strb	r2, [r3]
 554              	.L25:
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 555              		.loc 1 726 0
 556 00c8 7B68     		ldr	r3, [r7, #4]
 557 00ca DA1E     		sub	r2, r3, #3
 558 00cc 0B23     		mov	r3, #11
 559 00ce FB18     		add	r3, r7, r3
 560 00d0 4149     		ldr	r1, .L34+56
 561 00d2 8A5C     		ldrb	r2, [r1, r2]
 562 00d4 1A70     		strb	r2, [r3]
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 563              		.loc 1 738 0
 564 00d6 0B23     		mov	r3, #11
 565 00d8 FB18     		add	r3, r7, r3
 566 00da 1B78     		ldrb	r3, [r3]
 567 00dc 2F2B     		cmp	r3, #47
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 24


 568 00de 0DD9     		bls	.L29
 569              		.loc 1 738 0 is_stmt 0 discriminator 1
 570 00e0 7B68     		ldr	r3, [r7, #4]
 571 00e2 2A2B     		cmp	r3, #42
 572 00e4 0AD9     		bls	.L29
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 573              		.loc 1 741 0 is_stmt 1
 574 00e6 3D4B     		ldr	r3, .L34+60
 575 00e8 1922     		mov	r2, #25
 576 00ea 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 577              		.loc 1 744 0
 578 00ec 0520     		mov	r0, #5
 579 00ee FFF7FEFF 		bl	CyDelayCycles
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 580              		.loc 1 746 0
 581 00f2 0D23     		mov	r3, #13
 582 00f4 FB18     		add	r3, r7, r3
 583 00f6 1922     		mov	r2, #25
 584 00f8 1A70     		strb	r2, [r3]
 585 00fa 07E0     		b	.L30
 586              	.L29:
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 587              		.loc 1 750 0
 588 00fc 374B     		ldr	r3, .L34+60
 589 00fe 1B68     		ldr	r3, [r3]
 590 0100 DAB2     		uxtb	r2, r3
 591 0102 0D23     		mov	r3, #13
 592 0104 FB18     		add	r3, r7, r3
 593 0106 3F21     		mov	r1, #63
 594 0108 0A40     		and	r2, r1
 595 010a 1A70     		strb	r2, [r3]
 596              	.L30:
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 597              		.loc 1 762 0
 598 010c 0B23     		mov	r3, #11
 599 010e FA18     		add	r2, r7, r3
 600 0110 0D23     		mov	r3, #13
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 25


 601 0112 FB18     		add	r3, r7, r3
 602 0114 1278     		ldrb	r2, [r2]
 603 0116 1B78     		ldrb	r3, [r3]
 604 0118 9A42     		cmp	r2, r3
 605 011a 08D2     		bcs	.L31
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 606              		.loc 1 765 0
 607 011c 2F4B     		ldr	r3, .L34+60
 608 011e 7A68     		ldr	r2, [r7, #4]
 609 0120 033A     		sub	r2, r2, #3
 610 0122 2D49     		ldr	r1, .L34+56
 611 0124 8A5C     		ldrb	r2, [r1, r2]
 612 0126 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 613              		.loc 1 766 0
 614 0128 0520     		mov	r0, #5
 615 012a FFF7FEFF 		bl	CyDelayCycles
 616              	.L31:
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 617              		.loc 1 785 0
 618 012e 7B68     		ldr	r3, [r7, #4]
 619 0130 284A     		ldr	r2, .L34+52
 620 0132 9A18     		add	r2, r3, r2
 621 0134 0A23     		mov	r3, #10
 622 0136 FB18     		add	r3, r7, r3
 623 0138 1278     		ldrb	r2, [r2]
 624 013a 1A70     		strb	r2, [r3]
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 625              		.loc 1 789 0
 626 013c 284B     		ldr	r3, .L34+64
 627 013e 0A22     		mov	r2, #10
 628 0140 BA18     		add	r2, r7, r2
 629 0142 1278     		ldrb	r2, [r2]
 630 0144 1A60     		str	r2, [r3]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 26


 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 631              		.loc 1 790 0
 632 0146 274B     		ldr	r3, .L34+68
 633 0148 0F22     		mov	r2, #15
 634 014a BA18     		add	r2, r7, r2
 635 014c 1278     		ldrb	r2, [r2]
 636 014e 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 637              		.loc 1 791 0
 638 0150 254B     		ldr	r3, .L34+72
 639 0152 0E22     		mov	r2, #14
 640 0154 BA18     		add	r2, r7, r2
 641 0156 1278     		ldrb	r2, [r2]
 642 0158 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 643              		.loc 1 792 0
 644 015a 0520     		mov	r0, #5
 645 015c FFF7FEFF 		bl	CyDelayUs
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 646              		.loc 1 794 0
 647 0160 0B23     		mov	r3, #11
 648 0162 FA18     		add	r2, r7, r3
 649 0164 0D23     		mov	r3, #13
 650 0166 FB18     		add	r3, r7, r3
 651 0168 1278     		ldrb	r2, [r2]
 652 016a 1B78     		ldrb	r3, [r3]
 653 016c 9A42     		cmp	r2, r3
 654 016e 09D9     		bls	.L32
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 655              		.loc 1 797 0
 656 0170 1A4B     		ldr	r3, .L34+60
 657 0172 7A68     		ldr	r2, [r7, #4]
 658 0174 033A     		sub	r2, r2, #3
 659 0176 1849     		ldr	r1, .L34+56
 660 0178 8A5C     		ldrb	r2, [r1, r2]
 661 017a 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 662              		.loc 1 798 0
 663 017c 0520     		mov	r0, #5
 664 017e FFF7FEFF 		bl	CyDelayCycles
 794:Generated_Source\PSoC4/CyLib.c ****             {
 665              		.loc 1 794 0
 666 0182 03E0     		b	.L33
 667              	.L32:
 668 0184 02E0     		b	.L33
 669              	.L23:
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 670              		.loc 1 804 0 discriminator 1
 671 0186 0020     		mov	r0, #0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 27


 672 0188 FFF7FEFF 		bl	CyHalt
 673              	.L33:
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 674              		.loc 1 823 0
 675 018c 0C23     		mov	r3, #12
 676 018e FB18     		add	r3, r7, r3
 677 0190 1B78     		ldrb	r3, [r3]
 678 0192 181C     		mov	r0, r3
 679 0194 FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 680              		.loc 1 824 0
 681 0198 BD46     		mov	sp, r7
 682 019a 05B0     		add	sp, sp, #20
 683              		@ sp needed
 684 019c 90BD     		pop	{r4, r7, pc}
 685              	.L35:
 686 019e C046     		.align	2
 687              	.L34:
 688 01a0 C0F1FF0F 		.word	268431808
 689 01a4 C1F1FF0F 		.word	268431809
 690 01a8 C2F1FF0F 		.word	268431810
 691 01ac C3F1FF0F 		.word	268431811
 692 01b0 C4F1FF0F 		.word	268431812
 693 01b4 C5F1FF0F 		.word	268431813
 694 01b8 C6F1FF0F 		.word	268431814
 695 01bc C7F1FF0F 		.word	268431815
 696 01c0 C8F1FF0F 		.word	268431816
 697 01c4 C9F1FF0F 		.word	268431817
 698 01c8 CAF1FF0F 		.word	268431818
 699 01cc CBF1FF0F 		.word	268431819
 700 01d0 CCF1FF0F 		.word	268431820
 701 01d4 CDF1FF0F 		.word	268431821
 702 01d8 00000000 		.word	cyImoFreqMhz2Reg
 703 01dc 2CFF0B40 		.word	1074528044
 704 01e0 28FF0B40 		.word	1074528040
 705 01e4 1CFF0B40 		.word	1074528028
 706 01e8 20FF0B40 		.word	1074528032
 707              		.cfi_endproc
 708              	.LFE6:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 28


 709              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 710              		.section	.text.CySysLvdEnable,"ax",%progbits
 711              		.align	2
 712              		.global	CySysLvdEnable
 713              		.code	16
 714              		.thumb_func
 715              		.type	CySysLvdEnable, %function
 716              	CySysLvdEnable:
 717              	.LFB7:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 29


 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 30


 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 31


 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 32


1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 33


1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 34


1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 35


1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 36


1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 37


1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 38


1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 39


1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 40


1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 41


1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 42


1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 43


1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 44


1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 45


1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 46


1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 47


1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 48


1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 49


2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 50


2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 718              		.loc 1 2119 0
 719              		.cfi_startproc
 720 0000 80B5     		push	{r7, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 51


 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 729              		.loc 1 2121 0
 730 0008 134B     		ldr	r3, .L37
 731 000a 134A     		ldr	r2, .L37
 732 000c 1268     		ldr	r2, [r2]
 733 000e 0221     		mov	r1, #2
 734 0010 8A43     		bic	r2, r1
 735 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 736              		.loc 1 2124 0
 737 0014 114B     		ldr	r3, .L37+4
 738 0016 114A     		ldr	r2, .L37+4
 739 0018 1268     		ldr	r2, [r2]
 740 001a 1E21     		mov	r1, #30
 741 001c 8A43     		bic	r2, r1
 742 001e 111C     		mov	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 743              		.loc 1 2125 0
 744 0020 7A68     		ldr	r2, [r7, #4]
 745 0022 5200     		lsl	r2, r2, #1
 746 0024 1E20     		mov	r0, #30
 747 0026 0240     		and	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 748              		.loc 1 2124 0
 749 0028 0A43     		orr	r2, r1
 750 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 751              		.loc 1 2128 0
 752 002c 0B4B     		ldr	r3, .L37+4
 753 002e 0B4A     		ldr	r2, .L37+4
 754 0030 1268     		ldr	r2, [r2]
 755 0032 0121     		mov	r1, #1
 756 0034 0A43     		orr	r2, r1
 757 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 758              		.loc 1 2131 0
 759 0038 FA23     		mov	r3, #250
 760 003a 9B00     		lsl	r3, r3, #2
 761 003c 181C     		mov	r0, r3
 762 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 763              		.loc 1 2134 0
 764 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 52


2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 765              		.loc 1 2137 0
 766 0046 044B     		ldr	r3, .L37
 767 0048 034A     		ldr	r2, .L37
 768 004a 1268     		ldr	r2, [r2]
 769 004c 0221     		mov	r1, #2
 770 004e 0A43     		orr	r2, r1
 771 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 772              		.loc 1 2138 0
 773 0052 BD46     		mov	sp, r7
 774 0054 02B0     		add	sp, sp, #8
 775              		@ sp needed
 776 0056 80BD     		pop	{r7, pc}
 777              	.L38:
 778              		.align	2
 779              	.L37:
 780 0058 08000B40 		.word	1074462728
 781 005c 18000B40 		.word	1074462744
 782              		.cfi_endproc
 783              	.LFE7:
 784              		.size	CySysLvdEnable, .-CySysLvdEnable
 785              		.section	.text.CySysLvdDisable,"ax",%progbits
 786              		.align	2
 787              		.global	CySysLvdDisable
 788              		.code	16
 789              		.thumb_func
 790              		.type	CySysLvdDisable, %function
 791              	CySysLvdDisable:
 792              	.LFB8:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 793              		.loc 1 2149 0
 794              		.cfi_startproc
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 801              		.loc 1 2150 0
 802 0004 064B     		ldr	r3, .L40
 803 0006 064A     		ldr	r2, .L40
 804 0008 1268     		ldr	r2, [r2]
 805 000a 0221     		mov	r1, #2
 806 000c 8A43     		bic	r2, r1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 53


 807 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 808              		.loc 1 2151 0
 809 0010 044B     		ldr	r3, .L40+4
 810 0012 044A     		ldr	r2, .L40+4
 811 0014 1268     		ldr	r2, [r2]
 812 0016 0121     		mov	r1, #1
 813 0018 8A43     		bic	r2, r1
 814 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 815              		.loc 1 2152 0
 816 001c BD46     		mov	sp, r7
 817              		@ sp needed
 818 001e 80BD     		pop	{r7, pc}
 819              	.L41:
 820              		.align	2
 821              	.L40:
 822 0020 08000B40 		.word	1074462728
 823 0024 18000B40 		.word	1074462744
 824              		.cfi_endproc
 825              	.LFE8:
 826              		.size	CySysLvdDisable, .-CySysLvdDisable
 827              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 828              		.align	2
 829              		.global	CySysLvdGetInterruptSource
 830              		.code	16
 831              		.thumb_func
 832              		.type	CySysLvdGetInterruptSource, %function
 833              	CySysLvdGetInterruptSource:
 834              	.LFB9:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 835              		.loc 1 2167 0
 836              		.cfi_startproc
 837 0000 80B5     		push	{r7, lr}
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 843              		.loc 1 2168 0
 844 0004 034B     		ldr	r3, .L44
 845 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 54


 846 0008 0222     		mov	r2, #2
 847 000a 1340     		and	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 848              		.loc 1 2169 0
 849 000c 181C     		mov	r0, r3
 850 000e BD46     		mov	sp, r7
 851              		@ sp needed
 852 0010 80BD     		pop	{r7, pc}
 853              	.L45:
 854 0012 C046     		.align	2
 855              	.L44:
 856 0014 04000B40 		.word	1074462724
 857              		.cfi_endproc
 858              	.LFE9:
 859              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 860              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 861              		.align	2
 862              		.global	CySysLvdClearInterrupt
 863              		.code	16
 864              		.thumb_func
 865              		.type	CySysLvdClearInterrupt, %function
 866              	CySysLvdClearInterrupt:
 867              	.LFB10:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 868              		.loc 1 2183 0
 869              		.cfi_startproc
 870 0000 80B5     		push	{r7, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 876              		.loc 1 2184 0
 877 0004 024B     		ldr	r3, .L47
 878 0006 0222     		mov	r2, #2
 879 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 880              		.loc 1 2185 0
 881 000a BD46     		mov	sp, r7
 882              		@ sp needed
 883 000c 80BD     		pop	{r7, pc}
 884              	.L48:
 885 000e C046     		.align	2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 55


 886              	.L47:
 887 0010 04000B40 		.word	1074462724
 888              		.cfi_endproc
 889              	.LFE10:
 890              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 891              		.section	.text.CySysGetResetReason,"ax",%progbits
 892              		.align	2
 893              		.global	CySysGetResetReason
 894              		.code	16
 895              		.thumb_func
 896              		.type	CySysGetResetReason, %function
 897              	CySysGetResetReason:
 898              	.LFB11:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 899              		.loc 1 2209 0
 900              		.cfi_startproc
 901 0000 80B5     		push	{r7, lr}
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 905 0002 84B0     		sub	sp, sp, #16
 906              		.cfi_def_cfa_offset 24
 907 0004 00AF     		add	r7, sp, #0
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 910              		.loc 1 2212 0
 911 0008 7B68     		ldr	r3, [r7, #4]
 912 000a 1922     		mov	r2, #25
 913 000c 1340     		and	r3, r2
 914 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 56


 915              		.loc 1 2213 0
 916 0010 064B     		ldr	r3, .L51
 917 0012 1B68     		ldr	r3, [r3]
 918 0014 1922     		mov	r2, #25
 919 0016 1340     		and	r3, r2
 920 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 921              		.loc 1 2215 0
 922 001a 044B     		ldr	r3, .L51
 923 001c 7A68     		ldr	r2, [r7, #4]
 924 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 925              		.loc 1 2217 0
 926 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 927              		.loc 1 2218 0
 928 0022 181C     		mov	r0, r3
 929 0024 BD46     		mov	sp, r7
 930 0026 04B0     		add	sp, sp, #16
 931              		@ sp needed
 932 0028 80BD     		pop	{r7, pc}
 933              	.L52:
 934 002a C046     		.align	2
 935              	.L51:
 936 002c 00030B40 		.word	1074463488
 937              		.cfi_endproc
 938              	.LFE11:
 939              		.size	CySysGetResetReason, .-CySysGetResetReason
 940              		.section	.text.CyDisableInts,"ax",%progbits
 941              		.align	2
 942              		.global	CyDisableInts
 943              		.code	16
 944              		.thumb_func
 945              		.type	CyDisableInts, %function
 946              	CyDisableInts:
 947              	.LFB12:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 948              		.loc 1 2232 0
 949              		.cfi_startproc
 950 0000 80B5     		push	{r7, lr}
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 7, -8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 57


 953              		.cfi_offset 14, -4
 954 0002 82B0     		sub	sp, sp, #8
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 958              		.loc 1 2236 0
 959 0006 064B     		ldr	r3, .L55
 960 0008 1B68     		ldr	r3, [r3]
 961 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 962              		.loc 1 2239 0
 963 000c 044B     		ldr	r3, .L55
 964 000e 0122     		mov	r2, #1
 965 0010 5242     		neg	r2, r2
 966 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 967              		.loc 1 2241 0
 968 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 969              		.loc 1 2242 0
 970 0016 181C     		mov	r0, r3
 971 0018 BD46     		mov	sp, r7
 972 001a 02B0     		add	sp, sp, #8
 973              		@ sp needed
 974 001c 80BD     		pop	{r7, pc}
 975              	.L56:
 976 001e C046     		.align	2
 977              	.L55:
 978 0020 80E100E0 		.word	-536813184
 979              		.cfi_endproc
 980              	.LFE12:
 981              		.size	CyDisableInts, .-CyDisableInts
 982              		.section	.text.CyEnableInts,"ax",%progbits
 983              		.align	2
 984              		.global	CyEnableInts
 985              		.code	16
 986              		.thumb_func
 987              		.type	CyEnableInts, %function
 988              	CyEnableInts:
 989              	.LFB13:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 58


2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 990              		.loc 1 2255 0
 991              		.cfi_startproc
 992 0000 80B5     		push	{r7, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 996 0002 82B0     		sub	sp, sp, #8
 997              		.cfi_def_cfa_offset 16
 998 0004 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 1000 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1001              		.loc 1 2256 0
 1002 0008 024B     		ldr	r3, .L58
 1003 000a 7A68     		ldr	r2, [r7, #4]
 1004 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1005              		.loc 1 2257 0
 1006 000e BD46     		mov	sp, r7
 1007 0010 02B0     		add	sp, sp, #8
 1008              		@ sp needed
 1009 0012 80BD     		pop	{r7, pc}
 1010              	.L59:
 1011              		.align	2
 1012              	.L58:
 1013 0014 00E100E0 		.word	-536813312
 1014              		.cfi_endproc
 1015              	.LFE13:
 1016              		.size	CyEnableInts, .-CyEnableInts
 1017              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1018              		.align	2
 1019              		.global	CyIntSetSysVector
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	CyIntSetSysVector, %function
 1023              	CyIntSetSysVector:
 1024              	.LFB14:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 59


2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1025              		.loc 1 2280 0
 1026              		.cfi_startproc
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 84B0     		sub	sp, sp, #16
 1032              		.cfi_def_cfa_offset 24
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 1035 0006 021C     		mov	r2, r0
 1036 0008 3960     		str	r1, [r7]
 1037 000a FB1D     		add	r3, r7, #7
 1038 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1039              		.loc 1 2282 0
 1040 000e 8023     		mov	r3, #128
 1041 0010 9B05     		lsl	r3, r3, #22
 1042 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1043              		.loc 1 2284 0
 1044 0014 FB1D     		add	r3, r7, #7
 1045 0016 1B78     		ldrb	r3, [r3]
 1046 0018 0F2B     		cmp	r3, #15
 1047 001a 02D9     		bls	.L61
 1048              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1049 001c 0020     		mov	r0, #0
 1050 001e FFF7FEFF 		bl	CyHalt
 1051              	.L61:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1052              		.loc 1 2287 0 is_stmt 1
 1053 0022 FB1D     		add	r3, r7, #7
 1054 0024 1B78     		ldrb	r3, [r3]
 1055 0026 9B00     		lsl	r3, r3, #2
 1056 0028 FA68     		ldr	r2, [r7, #12]
 1057 002a D318     		add	r3, r2, r3
 1058 002c 1B68     		ldr	r3, [r3]
 1059 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1060              		.loc 1 2290 0
 1061 0030 FB1D     		add	r3, r7, #7
 1062 0032 1B78     		ldrb	r3, [r3]
 1063 0034 9B00     		lsl	r3, r3, #2
 1064 0036 FA68     		ldr	r2, [r7, #12]
 1065 0038 D318     		add	r3, r2, r3
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 60


 1066 003a 3A68     		ldr	r2, [r7]
 1067 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1068              		.loc 1 2292 0
 1069 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1070              		.loc 1 2293 0
 1071 0040 181C     		mov	r0, r3
 1072 0042 BD46     		mov	sp, r7
 1073 0044 04B0     		add	sp, sp, #16
 1074              		@ sp needed
 1075 0046 80BD     		pop	{r7, pc}
 1076              		.cfi_endproc
 1077              	.LFE14:
 1078              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1079              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1080              		.align	2
 1081              		.global	CyIntGetSysVector
 1082              		.code	16
 1083              		.thumb_func
 1084              		.type	CyIntGetSysVector, %function
 1085              	CyIntGetSysVector:
 1086              	.LFB15:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1087              		.loc 1 2314 0
 1088              		.cfi_startproc
 1089 0000 80B5     		push	{r7, lr}
 1090              		.cfi_def_cfa_offset 8
 1091              		.cfi_offset 7, -8
 1092              		.cfi_offset 14, -4
 1093 0002 84B0     		sub	sp, sp, #16
 1094              		.cfi_def_cfa_offset 24
 1095 0004 00AF     		add	r7, sp, #0
 1096              		.cfi_def_cfa_register 7
 1097 0006 021C     		mov	r2, r0
 1098 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 61


 1099 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1100              		.loc 1 2315 0
 1101 000c 8023     		mov	r3, #128
 1102 000e 9B05     		lsl	r3, r3, #22
 1103 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1104              		.loc 1 2317 0
 1105 0012 FB1D     		add	r3, r7, #7
 1106 0014 1B78     		ldrb	r3, [r3]
 1107 0016 0F2B     		cmp	r3, #15
 1108 0018 02D9     		bls	.L64
 1109              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1110 001a 0020     		mov	r0, #0
 1111 001c FFF7FEFF 		bl	CyHalt
 1112              	.L64:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1113              		.loc 1 2319 0 is_stmt 1
 1114 0020 FB1D     		add	r3, r7, #7
 1115 0022 1B78     		ldrb	r3, [r3]
 1116 0024 9B00     		lsl	r3, r3, #2
 1117 0026 FA68     		ldr	r2, [r7, #12]
 1118 0028 D318     		add	r3, r2, r3
 1119 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1120              		.loc 1 2320 0
 1121 002c 181C     		mov	r0, r3
 1122 002e BD46     		mov	sp, r7
 1123 0030 04B0     		add	sp, sp, #16
 1124              		@ sp needed
 1125 0032 80BD     		pop	{r7, pc}
 1126              		.cfi_endproc
 1127              	.LFE15:
 1128              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1129              		.section	.text.CyIntSetVector,"ax",%progbits
 1130              		.align	2
 1131              		.global	CyIntSetVector
 1132              		.code	16
 1133              		.thumb_func
 1134              		.type	CyIntSetVector, %function
 1135              	CyIntSetVector:
 1136              	.LFB16:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 62


2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1137              		.loc 1 2336 0
 1138              		.cfi_startproc
 1139 0000 80B5     		push	{r7, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 84B0     		sub	sp, sp, #16
 1144              		.cfi_def_cfa_offset 24
 1145 0004 00AF     		add	r7, sp, #0
 1146              		.cfi_def_cfa_register 7
 1147 0006 021C     		mov	r2, r0
 1148 0008 3960     		str	r1, [r7]
 1149 000a FB1D     		add	r3, r7, #7
 1150 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1151              		.loc 1 2338 0
 1152 000e 8023     		mov	r3, #128
 1153 0010 9B05     		lsl	r3, r3, #22
 1154 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1155              		.loc 1 2340 0
 1156 0014 FB1D     		add	r3, r7, #7
 1157 0016 1B78     		ldrb	r3, [r3]
 1158 0018 1F2B     		cmp	r3, #31
 1159 001a 02D9     		bls	.L67
 1160              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1161 001c 0020     		mov	r0, #0
 1162 001e FFF7FEFF 		bl	CyHalt
 1163              	.L67:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1164              		.loc 1 2343 0 is_stmt 1
 1165 0022 FB1D     		add	r3, r7, #7
 1166 0024 1B78     		ldrb	r3, [r3]
 1167 0026 1033     		add	r3, r3, #16
 1168 0028 9B00     		lsl	r3, r3, #2
 1169 002a FA68     		ldr	r2, [r7, #12]
 1170 002c D318     		add	r3, r2, r3
 1171 002e 1B68     		ldr	r3, [r3]
 1172 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1173              		.loc 1 2346 0
 1174 0032 FB1D     		add	r3, r7, #7
 1175 0034 1B78     		ldrb	r3, [r3]
 1176 0036 1033     		add	r3, r3, #16
 1177 0038 9B00     		lsl	r3, r3, #2
 1178 003a FA68     		ldr	r2, [r7, #12]
 1179 003c D318     		add	r3, r2, r3
 1180 003e 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 63


 1181 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1182              		.loc 1 2348 0
 1183 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1184              		.loc 1 2349 0
 1185 0044 181C     		mov	r0, r3
 1186 0046 BD46     		mov	sp, r7
 1187 0048 04B0     		add	sp, sp, #16
 1188              		@ sp needed
 1189 004a 80BD     		pop	{r7, pc}
 1190              		.cfi_endproc
 1191              	.LFE16:
 1192              		.size	CyIntSetVector, .-CyIntSetVector
 1193              		.section	.text.CyIntGetVector,"ax",%progbits
 1194              		.align	2
 1195              		.global	CyIntGetVector
 1196              		.code	16
 1197              		.thumb_func
 1198              		.type	CyIntGetVector, %function
 1199              	CyIntGetVector:
 1200              	.LFB17:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1201              		.loc 1 2364 0
 1202              		.cfi_startproc
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 84B0     		sub	sp, sp, #16
 1208              		.cfi_def_cfa_offset 24
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 1211 0006 021C     		mov	r2, r0
 1212 0008 FB1D     		add	r3, r7, #7
 1213 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1214              		.loc 1 2365 0
 1215 000c 8023     		mov	r3, #128
 1216 000e 9B05     		lsl	r3, r3, #22
 1217 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 64


2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1218              		.loc 1 2367 0
 1219 0012 FB1D     		add	r3, r7, #7
 1220 0014 1B78     		ldrb	r3, [r3]
 1221 0016 1F2B     		cmp	r3, #31
 1222 0018 02D9     		bls	.L70
 1223              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1224 001a 0020     		mov	r0, #0
 1225 001c FFF7FEFF 		bl	CyHalt
 1226              	.L70:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1227              		.loc 1 2369 0 is_stmt 1
 1228 0020 FB1D     		add	r3, r7, #7
 1229 0022 1B78     		ldrb	r3, [r3]
 1230 0024 1033     		add	r3, r3, #16
 1231 0026 9B00     		lsl	r3, r3, #2
 1232 0028 FA68     		ldr	r2, [r7, #12]
 1233 002a D318     		add	r3, r2, r3
 1234 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1235              		.loc 1 2370 0
 1236 002e 181C     		mov	r0, r3
 1237 0030 BD46     		mov	sp, r7
 1238 0032 04B0     		add	sp, sp, #16
 1239              		@ sp needed
 1240 0034 80BD     		pop	{r7, pc}
 1241              		.cfi_endproc
 1242              	.LFE17:
 1243              		.size	CyIntGetVector, .-CyIntGetVector
 1244              		.section	.text.CyIntSetPriority,"ax",%progbits
 1245              		.align	2
 1246              		.global	CyIntSetPriority
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	CyIntSetPriority, %function
 1250              	CyIntSetPriority:
 1251              	.LFB18:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1252              		.loc 1 2383 0
 1253              		.cfi_startproc
 1254 0000 90B5     		push	{r4, r7, lr}
 1255              		.cfi_def_cfa_offset 12
 1256              		.cfi_offset 4, -12
 1257              		.cfi_offset 7, -8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 65


 1258              		.cfi_offset 14, -4
 1259 0002 87B0     		sub	sp, sp, #28
 1260              		.cfi_def_cfa_offset 40
 1261 0004 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 1263 0006 021C     		mov	r2, r0
 1264 0008 FB1D     		add	r3, r7, #7
 1265 000a 1A70     		strb	r2, [r3]
 1266 000c BB1D     		add	r3, r7, #6
 1267 000e 0A1C     		add	r2, r1, #0
 1268 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1269              		.loc 1 2388 0
 1270 0012 BB1D     		add	r3, r7, #6
 1271 0014 1B78     		ldrb	r3, [r3]
 1272 0016 032B     		cmp	r3, #3
 1273 0018 02D9     		bls	.L73
 1274              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1275 001a 0020     		mov	r0, #0
 1276 001c FFF7FEFF 		bl	CyHalt
 1277              	.L73:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1278              		.loc 1 2389 0 is_stmt 1
 1279 0020 FB1D     		add	r3, r7, #7
 1280 0022 1B78     		ldrb	r3, [r3]
 1281 0024 1F2B     		cmp	r3, #31
 1282 0026 02D9     		bls	.L74
 1283              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1284 0028 0020     		mov	r0, #0
 1285 002a FFF7FEFF 		bl	CyHalt
 1286              	.L74:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1287              		.loc 1 2391 0 is_stmt 1
 1288 002e FB1D     		add	r3, r7, #7
 1289 0030 1B78     		ldrb	r3, [r3]
 1290 0032 0322     		mov	r2, #3
 1291 0034 1340     		and	r3, r2
 1292 0036 DB00     		lsl	r3, r3, #3
 1293 0038 0633     		add	r3, r3, #6
 1294 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1295              		.loc 1 2393 0
 1296 003c 1323     		mov	r3, #19
 1297 003e FC18     		add	r4, r7, r3
 1298 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1299 0044 031C     		mov	r3, r0
 1300 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1301              		.loc 1 2395 0
 1302 0048 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 66


 1303 004a 1B78     		ldrb	r3, [r3]
 1304 004c 9B08     		lsr	r3, r3, #2
 1305 004e DBB2     		uxtb	r3, r3
 1306 0050 9B00     		lsl	r3, r3, #2
 1307 0052 144A     		ldr	r2, .L75
 1308 0054 9446     		mov	ip, r2
 1309 0056 6344     		add	r3, r3, ip
 1310 0058 1B68     		ldr	r3, [r3]
 1311 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1312              		.loc 1 2396 0
 1313 005c 7B69     		ldr	r3, [r7, #20]
 1314 005e 0322     		mov	r2, #3
 1315 0060 9A40     		lsl	r2, r2, r3
 1316 0062 131C     		mov	r3, r2
 1317 0064 DA43     		mvn	r2, r3
 1318 0066 FB68     		ldr	r3, [r7, #12]
 1319 0068 1340     		and	r3, r2
 1320 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1321              		.loc 1 2397 0
 1322 006c BB1D     		add	r3, r7, #6
 1323 006e 1A78     		ldrb	r2, [r3]
 1324 0070 7B69     		ldr	r3, [r7, #20]
 1325 0072 9A40     		lsl	r2, r2, r3
 1326 0074 131C     		mov	r3, r2
 1327 0076 FA68     		ldr	r2, [r7, #12]
 1328 0078 1343     		orr	r3, r2
 1329 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1330              		.loc 1 2398 0
 1331 007c FB1D     		add	r3, r7, #7
 1332 007e 1B78     		ldrb	r3, [r3]
 1333 0080 9B08     		lsr	r3, r3, #2
 1334 0082 DBB2     		uxtb	r3, r3
 1335 0084 9B00     		lsl	r3, r3, #2
 1336 0086 074A     		ldr	r2, .L75
 1337 0088 9446     		mov	ip, r2
 1338 008a 6344     		add	r3, r3, ip
 1339 008c FA68     		ldr	r2, [r7, #12]
 1340 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1341              		.loc 1 2400 0
 1342 0090 1323     		mov	r3, #19
 1343 0092 FB18     		add	r3, r7, r3
 1344 0094 1B78     		ldrb	r3, [r3]
 1345 0096 181C     		mov	r0, r3
 1346 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1347              		.loc 1 2401 0
 1348 009c BD46     		mov	sp, r7
 1349 009e 07B0     		add	sp, sp, #28
 1350              		@ sp needed
 1351 00a0 90BD     		pop	{r4, r7, pc}
 1352              	.L76:
 1353 00a2 C046     		.align	2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 67


 1354              	.L75:
 1355 00a4 00E400E0 		.word	-536812544
 1356              		.cfi_endproc
 1357              	.LFE18:
 1358              		.size	CyIntSetPriority, .-CyIntSetPriority
 1359              		.section	.text.CyIntGetPriority,"ax",%progbits
 1360              		.align	2
 1361              		.global	CyIntGetPriority
 1362              		.code	16
 1363              		.thumb_func
 1364              		.type	CyIntGetPriority, %function
 1365              	CyIntGetPriority:
 1366              	.LFB19:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1367              		.loc 1 2417 0
 1368              		.cfi_startproc
 1369 0000 80B5     		push	{r7, lr}
 1370              		.cfi_def_cfa_offset 8
 1371              		.cfi_offset 7, -8
 1372              		.cfi_offset 14, -4
 1373 0002 84B0     		sub	sp, sp, #16
 1374              		.cfi_def_cfa_offset 24
 1375 0004 00AF     		add	r7, sp, #0
 1376              		.cfi_def_cfa_register 7
 1377 0006 021C     		mov	r2, r0
 1378 0008 FB1D     		add	r3, r7, #7
 1379 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1380              		.loc 1 2420 0
 1381 000c FB1D     		add	r3, r7, #7
 1382 000e 1B78     		ldrb	r3, [r3]
 1383 0010 1F2B     		cmp	r3, #31
 1384 0012 02D9     		bls	.L78
 1385              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1386 0014 0020     		mov	r0, #0
 1387 0016 FFF7FEFF 		bl	CyHalt
 1388              	.L78:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1389              		.loc 1 2422 0 is_stmt 1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 68


 1390 001a FB1D     		add	r3, r7, #7
 1391 001c 1B78     		ldrb	r3, [r3]
 1392 001e 9B08     		lsr	r3, r3, #2
 1393 0020 DBB2     		uxtb	r3, r3
 1394 0022 9B00     		lsl	r3, r3, #2
 1395 0024 0C4A     		ldr	r2, .L80
 1396 0026 9446     		mov	ip, r2
 1397 0028 6344     		add	r3, r3, ip
 1398 002a 1B68     		ldr	r3, [r3]
 1399 002c FA1D     		add	r2, r7, #7
 1400 002e 1278     		ldrb	r2, [r2]
 1401 0030 0321     		mov	r1, #3
 1402 0032 0A40     		and	r2, r1
 1403 0034 D200     		lsl	r2, r2, #3
 1404 0036 0632     		add	r2, r2, #6
 1405 0038 D340     		lsr	r3, r3, r2
 1406 003a 1A1C     		mov	r2, r3
 1407 003c 0F23     		mov	r3, #15
 1408 003e FB18     		add	r3, r7, r3
 1409 0040 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1410              		.loc 1 2424 0
 1411 0042 0F23     		mov	r3, #15
 1412 0044 FB18     		add	r3, r7, r3
 1413 0046 1B78     		ldrb	r3, [r3]
 1414 0048 0322     		mov	r2, #3
 1415 004a 1340     		and	r3, r2
 1416 004c DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1417              		.loc 1 2425 0
 1418 004e 181C     		mov	r0, r3
 1419 0050 BD46     		mov	sp, r7
 1420 0052 04B0     		add	sp, sp, #16
 1421              		@ sp needed
 1422 0054 80BD     		pop	{r7, pc}
 1423              	.L81:
 1424 0056 C046     		.align	2
 1425              	.L80:
 1426 0058 00E400E0 		.word	-536812544
 1427              		.cfi_endproc
 1428              	.LFE19:
 1429              		.size	CyIntGetPriority, .-CyIntGetPriority
 1430              		.section	.text.CyIntEnable,"ax",%progbits
 1431              		.align	2
 1432              		.global	CyIntEnable
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	CyIntEnable, %function
 1436              	CyIntEnable:
 1437              	.LFB20:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 69


2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1438              		.loc 1 2438 0
 1439              		.cfi_startproc
 1440 0000 80B5     		push	{r7, lr}
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 7, -8
 1443              		.cfi_offset 14, -4
 1444 0002 82B0     		sub	sp, sp, #8
 1445              		.cfi_def_cfa_offset 16
 1446 0004 00AF     		add	r7, sp, #0
 1447              		.cfi_def_cfa_register 7
 1448 0006 021C     		mov	r2, r0
 1449 0008 FB1D     		add	r3, r7, #7
 1450 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1451              		.loc 1 2439 0
 1452 000c 054B     		ldr	r3, .L83
 1453 000e FA1D     		add	r2, r7, #7
 1454 0010 1278     		ldrb	r2, [r2]
 1455 0012 1F21     		mov	r1, #31
 1456 0014 0A40     		and	r2, r1
 1457 0016 0121     		mov	r1, #1
 1458 0018 9140     		lsl	r1, r1, r2
 1459 001a 0A1C     		mov	r2, r1
 1460 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1461              		.loc 1 2440 0
 1462 001e BD46     		mov	sp, r7
 1463 0020 02B0     		add	sp, sp, #8
 1464              		@ sp needed
 1465 0022 80BD     		pop	{r7, pc}
 1466              	.L84:
 1467              		.align	2
 1468              	.L83:
 1469 0024 00E100E0 		.word	-536813312
 1470              		.cfi_endproc
 1471              	.LFE20:
 1472              		.size	CyIntEnable, .-CyIntEnable
 1473              		.section	.text.CyIntGetState,"ax",%progbits
 1474              		.align	2
 1475              		.global	CyIntGetState
 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	CyIntGetState, %function
 1479              	CyIntGetState:
 1480              	.LFB21:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 70


2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1481              		.loc 1 2456 0
 1482              		.cfi_startproc
 1483 0000 80B5     		push	{r7, lr}
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 7, -8
 1486              		.cfi_offset 14, -4
 1487 0002 82B0     		sub	sp, sp, #8
 1488              		.cfi_def_cfa_offset 16
 1489 0004 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 1491 0006 021C     		mov	r2, r0
 1492 0008 FB1D     		add	r3, r7, #7
 1493 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1494              		.loc 1 2458 0
 1495 000c 074B     		ldr	r3, .L87
 1496 000e 1A68     		ldr	r2, [r3]
 1497 0010 FB1D     		add	r3, r7, #7
 1498 0012 1B78     		ldrb	r3, [r3]
 1499 0014 1F21     		mov	r1, #31
 1500 0016 0B40     		and	r3, r1
 1501 0018 DA40     		lsr	r2, r2, r3
 1502 001a 131C     		mov	r3, r2
 1503 001c DBB2     		uxtb	r3, r3
 1504 001e 0122     		mov	r2, #1
 1505 0020 1340     		and	r3, r2
 1506 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1507              		.loc 1 2459 0
 1508 0024 181C     		mov	r0, r3
 1509 0026 BD46     		mov	sp, r7
 1510 0028 02B0     		add	sp, sp, #8
 1511              		@ sp needed
 1512 002a 80BD     		pop	{r7, pc}
 1513              	.L88:
 1514              		.align	2
 1515              	.L87:
 1516 002c 00E100E0 		.word	-536813312
 1517              		.cfi_endproc
 1518              	.LFE21:
 1519              		.size	CyIntGetState, .-CyIntGetState
 1520              		.section	.text.CyIntDisable,"ax",%progbits
 1521              		.align	2
 1522              		.global	CyIntDisable
 1523              		.code	16
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 71


 1524              		.thumb_func
 1525              		.type	CyIntDisable, %function
 1526              	CyIntDisable:
 1527              	.LFB22:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1528              		.loc 1 2472 0
 1529              		.cfi_startproc
 1530 0000 80B5     		push	{r7, lr}
 1531              		.cfi_def_cfa_offset 8
 1532              		.cfi_offset 7, -8
 1533              		.cfi_offset 14, -4
 1534 0002 82B0     		sub	sp, sp, #8
 1535              		.cfi_def_cfa_offset 16
 1536 0004 00AF     		add	r7, sp, #0
 1537              		.cfi_def_cfa_register 7
 1538 0006 021C     		mov	r2, r0
 1539 0008 FB1D     		add	r3, r7, #7
 1540 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1541              		.loc 1 2473 0
 1542 000c 054B     		ldr	r3, .L90
 1543 000e FA1D     		add	r2, r7, #7
 1544 0010 1278     		ldrb	r2, [r2]
 1545 0012 1F21     		mov	r1, #31
 1546 0014 0A40     		and	r2, r1
 1547 0016 0121     		mov	r1, #1
 1548 0018 9140     		lsl	r1, r1, r2
 1549 001a 0A1C     		mov	r2, r1
 1550 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 1551              		.loc 1 2474 0
 1552 001e BD46     		mov	sp, r7
 1553 0020 02B0     		add	sp, sp, #8
 1554              		@ sp needed
 1555 0022 80BD     		pop	{r7, pc}
 1556              	.L91:
 1557              		.align	2
 1558              	.L90:
 1559 0024 80E100E0 		.word	-536813184
 1560              		.cfi_endproc
 1561              	.LFE22:
 1562              		.size	CyIntDisable, .-CyIntDisable
 1563              		.section	.text.CyIntSetPending,"ax",%progbits
 1564              		.align	2
 1565              		.global	CyIntSetPending
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 72


 1566              		.code	16
 1567              		.thumb_func
 1568              		.type	CyIntSetPending, %function
 1569              	CyIntSetPending:
 1570              	.LFB23:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1571              		.loc 1 2486 0
 1572              		.cfi_startproc
 1573 0000 80B5     		push	{r7, lr}
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
 1577 0002 82B0     		sub	sp, sp, #8
 1578              		.cfi_def_cfa_offset 16
 1579 0004 00AF     		add	r7, sp, #0
 1580              		.cfi_def_cfa_register 7
 1581 0006 021C     		mov	r2, r0
 1582 0008 FB1D     		add	r3, r7, #7
 1583 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1584              		.loc 1 2487 0
 1585 000c 054B     		ldr	r3, .L93
 1586 000e FA1D     		add	r2, r7, #7
 1587 0010 1278     		ldrb	r2, [r2]
 1588 0012 1F21     		mov	r1, #31
 1589 0014 0A40     		and	r2, r1
 1590 0016 0121     		mov	r1, #1
 1591 0018 9140     		lsl	r1, r1, r2
 1592 001a 0A1C     		mov	r2, r1
 1593 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1594              		.loc 1 2488 0
 1595 001e BD46     		mov	sp, r7
 1596 0020 02B0     		add	sp, sp, #8
 1597              		@ sp needed
 1598 0022 80BD     		pop	{r7, pc}
 1599              	.L94:
 1600              		.align	2
 1601              	.L93:
 1602 0024 00E200E0 		.word	-536813056
 1603              		.cfi_endproc
 1604              	.LFE23:
 1605              		.size	CyIntSetPending, .-CyIntSetPending
 1606              		.section	.text.CyIntClearPending,"ax",%progbits
 1607              		.align	2
 1608              		.global	CyIntClearPending
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 73


 1609              		.code	16
 1610              		.thumb_func
 1611              		.type	CyIntClearPending, %function
 1612              	CyIntClearPending:
 1613              	.LFB24:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1614              		.loc 1 2501 0
 1615              		.cfi_startproc
 1616 0000 80B5     		push	{r7, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 82B0     		sub	sp, sp, #8
 1621              		.cfi_def_cfa_offset 16
 1622 0004 00AF     		add	r7, sp, #0
 1623              		.cfi_def_cfa_register 7
 1624 0006 021C     		mov	r2, r0
 1625 0008 FB1D     		add	r3, r7, #7
 1626 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1627              		.loc 1 2502 0
 1628 000c 054B     		ldr	r3, .L96
 1629 000e FA1D     		add	r2, r7, #7
 1630 0010 1278     		ldrb	r2, [r2]
 1631 0012 1F21     		mov	r1, #31
 1632 0014 0A40     		and	r2, r1
 1633 0016 0121     		mov	r1, #1
 1634 0018 9140     		lsl	r1, r1, r2
 1635 001a 0A1C     		mov	r2, r1
 1636 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1637              		.loc 1 2503 0
 1638 001e BD46     		mov	sp, r7
 1639 0020 02B0     		add	sp, sp, #8
 1640              		@ sp needed
 1641 0022 80BD     		pop	{r7, pc}
 1642              	.L97:
 1643              		.align	2
 1644              	.L96:
 1645 0024 80E200E0 		.word	-536812928
 1646              		.cfi_endproc
 1647              	.LFE24:
 1648              		.size	CyIntClearPending, .-CyIntClearPending
 1649              		.section	.text.CyHalt,"ax",%progbits
 1650              		.align	2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 74


 1651              		.global	CyHalt
 1652              		.code	16
 1653              		.thumb_func
 1654              		.type	CyHalt, %function
 1655              	CyHalt:
 1656              	.LFB25:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1657              		.loc 1 2516 0
 1658              		.cfi_startproc
 1659 0000 80B5     		push	{r7, lr}
 1660              		.cfi_def_cfa_offset 8
 1661              		.cfi_offset 7, -8
 1662              		.cfi_offset 14, -4
 1663 0002 82B0     		sub	sp, sp, #8
 1664              		.cfi_def_cfa_offset 16
 1665 0004 00AF     		add	r7, sp, #0
 1666              		.cfi_def_cfa_register 7
 1667 0006 021C     		mov	r2, r0
 1668 0008 FB1D     		add	r3, r7, #7
 1669 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1670              		.loc 1 2525 0
 1671              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1672 000c 01BE     		    bkpt    1
 1673              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1674              		.loc 1 2529 0
 1675              		.code	16
 1676 000e BD46     		mov	sp, r7
 1677 0010 02B0     		add	sp, sp, #8
 1678              		@ sp needed
 1679 0012 80BD     		pop	{r7, pc}
 1680              		.cfi_endproc
 1681              	.LFE25:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 75


 1682              		.size	CyHalt, .-CyHalt
 1683              		.section	.text.CySoftwareReset,"ax",%progbits
 1684              		.align	2
 1685              		.global	CySoftwareReset
 1686              		.code	16
 1687              		.thumb_func
 1688              		.type	CySoftwareReset, %function
 1689              	CySoftwareReset:
 1690              	.LFB26:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1691              		.loc 1 2540 0
 1692              		.cfi_startproc
 1693 0000 80B5     		push	{r7, lr}
 1694              		.cfi_def_cfa_offset 8
 1695              		.cfi_offset 7, -8
 1696              		.cfi_offset 14, -4
 1697 0002 00AF     		add	r7, sp, #0
 1698              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1699              		.loc 1 2545 0
 1700 0004 044B     		ldr	r3, .L100
 1701 0006 044A     		ldr	r2, .L100
 1702 0008 1268     		ldr	r2, [r2]
 1703 000a 1204     		lsl	r2, r2, #16
 1704 000c 120C     		lsr	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1705              		.loc 1 2546 0
 1706 000e 0349     		ldr	r1, .L100+4
 1707 0010 0A43     		orr	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1708              		.loc 1 2545 0
 1709 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 2547 0
 1711 0014 BD46     		mov	sp, r7
 1712              		@ sp needed
 1713 0016 80BD     		pop	{r7, pc}
 1714              	.L101:
 1715              		.align	2
 1716              	.L100:
 1717 0018 0CED00E0 		.word	-536810228
 1718 001c 0400FA05 		.word	100270084
 1719              		.cfi_endproc
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 76


 1720              	.LFE26:
 1721              		.size	CySoftwareReset, .-CySoftwareReset
 1722              		.section	.text.CyDelay,"ax",%progbits
 1723              		.align	2
 1724              		.global	CyDelay
 1725              		.code	16
 1726              		.thumb_func
 1727              		.type	CyDelay, %function
 1728              	CyDelay:
 1729              	.LFB27:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1730              		.loc 1 2560 0
 1731              		.cfi_startproc
 1732 0000 80B5     		push	{r7, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 7, -8
 1735              		.cfi_offset 14, -4
 1736 0002 82B0     		sub	sp, sp, #8
 1737              		.cfi_def_cfa_offset 16
 1738 0004 00AF     		add	r7, sp, #0
 1739              		.cfi_def_cfa_register 7
 1740 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1741              		.loc 1 2561 0
 1742 0008 09E0     		b	.L103
 1743              	.L104:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1744              		.loc 1 2566 0
 1745 000a 0C4B     		ldr	r3, .L105
 1746 000c 1B68     		ldr	r3, [r3]
 1747 000e 181C     		mov	r0, r3
 1748 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1749              		.loc 1 2567 0
 1750 0014 7B68     		ldr	r3, [r7, #4]
 1751 0016 0A4A     		ldr	r2, .L105+4
 1752 0018 9446     		mov	ip, r2
 1753 001a 6344     		add	r3, r3, ip
 1754 001c 7B60     		str	r3, [r7, #4]
 1755              	.L103:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 77


 1756              		.loc 1 2561 0
 1757 001e 7A68     		ldr	r2, [r7, #4]
 1758 0020 8023     		mov	r3, #128
 1759 0022 1B02     		lsl	r3, r3, #8
 1760 0024 9A42     		cmp	r2, r3
 1761 0026 F0D8     		bhi	.L104
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1762              		.loc 1 2570 0
 1763 0028 064B     		ldr	r3, .L105+8
 1764 002a 1B68     		ldr	r3, [r3]
 1765 002c 7A68     		ldr	r2, [r7, #4]
 1766 002e 5343     		mul	r3, r2
 1767 0030 181C     		mov	r0, r3
 1768 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2571 0
 1770 0036 BD46     		mov	sp, r7
 1771 0038 02B0     		add	sp, sp, #8
 1772              		@ sp needed
 1773 003a 80BD     		pop	{r7, pc}
 1774              	.L106:
 1775              		.align	2
 1776              	.L105:
 1777 003c 00000000 		.word	cydelay32kMs
 1778 0040 0080FFFF 		.word	-32768
 1779 0044 00000000 		.word	cydelayFreqKhz
 1780              		.cfi_endproc
 1781              	.LFE27:
 1782              		.size	CyDelay, .-CyDelay
 1783              		.section	.text.CyDelayUs,"ax",%progbits
 1784              		.align	2
 1785              		.global	CyDelayUs
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CyDelayUs, %function
 1789              	CyDelayUs:
 1790              	.LFB28:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1791              		.loc 1 2583 0
 1792              		.cfi_startproc
 1793 0000 80B5     		push	{r7, lr}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 7, -8
 1796              		.cfi_offset 14, -4
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 78


 1797 0002 82B0     		sub	sp, sp, #8
 1798              		.cfi_def_cfa_offset 16
 1799 0004 00AF     		add	r7, sp, #0
 1800              		.cfi_def_cfa_register 7
 1801 0006 021C     		mov	r2, r0
 1802 0008 BB1D     		add	r3, r7, #6
 1803 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1804              		.loc 1 2584 0
 1805 000c BB1D     		add	r3, r7, #6
 1806 000e 1B88     		ldrh	r3, [r3]
 1807 0010 044A     		ldr	r2, .L108
 1808 0012 1278     		ldrb	r2, [r2]
 1809 0014 5343     		mul	r3, r2
 1810 0016 181C     		mov	r0, r3
 1811 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 1812              		.loc 1 2585 0
 1813 001c BD46     		mov	sp, r7
 1814 001e 02B0     		add	sp, sp, #8
 1815              		@ sp needed
 1816 0020 80BD     		pop	{r7, pc}
 1817              	.L109:
 1818 0022 C046     		.align	2
 1819              	.L108:
 1820 0024 00000000 		.word	cydelayFreqMhz
 1821              		.cfi_endproc
 1822              	.LFE28:
 1823              		.size	CyDelayUs, .-CyDelayUs
 1824              		.global	__aeabi_uidiv
 1825              		.section	.text.CyDelayFreq,"ax",%progbits
 1826              		.align	2
 1827              		.global	CyDelayFreq
 1828              		.code	16
 1829              		.thumb_func
 1830              		.type	CyDelayFreq, %function
 1831              	CyDelayFreq:
 1832              	.LFB29:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1833              		.loc 1 2597 0
 1834              		.cfi_startproc
 1835 0000 80B5     		push	{r7, lr}
 1836              		.cfi_def_cfa_offset 8
 1837              		.cfi_offset 7, -8
 1838              		.cfi_offset 14, -4
 1839 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 79


 1840              		.cfi_def_cfa_offset 16
 1841 0004 00AF     		add	r7, sp, #0
 1842              		.cfi_def_cfa_register 7
 1843 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1844              		.loc 1 2598 0
 1845 0008 7B68     		ldr	r3, [r7, #4]
 1846 000a 002B     		cmp	r3, #0
 1847 000c 03D0     		beq	.L111
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1848              		.loc 1 2600 0
 1849 000e 154B     		ldr	r3, .L113
 1850 0010 7A68     		ldr	r2, [r7, #4]
 1851 0012 1A60     		str	r2, [r3]
 1852 0014 02E0     		b	.L112
 1853              	.L111:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1854              		.loc 1 2604 0
 1855 0016 134B     		ldr	r3, .L113
 1856 0018 134A     		ldr	r2, .L113+4
 1857 001a 1A60     		str	r2, [r3]
 1858              	.L112:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1859              		.loc 1 2607 0
 1860 001c 114B     		ldr	r3, .L113
 1861 001e 1B68     		ldr	r3, [r3]
 1862 0020 124A     		ldr	r2, .L113+8
 1863 0022 9446     		mov	ip, r2
 1864 0024 6344     		add	r3, r3, ip
 1865 0026 181C     		mov	r0, r3
 1866 0028 1149     		ldr	r1, .L113+12
 1867 002a FFF7FEFF 		bl	__aeabi_uidiv
 1868 002e 031C     		mov	r3, r0
 1869 0030 DAB2     		uxtb	r2, r3
 1870 0032 104B     		ldr	r3, .L113+16
 1871 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1872              		.loc 1 2608 0
 1873 0036 0B4B     		ldr	r3, .L113
 1874 0038 1B68     		ldr	r3, [r3]
 1875 003a 0F4A     		ldr	r2, .L113+20
 1876 003c 9446     		mov	ip, r2
 1877 003e 6344     		add	r3, r3, ip
 1878 0040 181C     		mov	r0, r3
 1879 0042 FA23     		mov	r3, #250
 1880 0044 9900     		lsl	r1, r3, #2
 1881 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1882 004a 031C     		mov	r3, r0
 1883 004c 1A1C     		mov	r2, r3
 1884 004e 0B4B     		ldr	r3, .L113+24
 1885 0050 1A60     		str	r2, [r3]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 80


2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1886              		.loc 1 2609 0
 1887 0052 0A4B     		ldr	r3, .L113+24
 1888 0054 1B68     		ldr	r3, [r3]
 1889 0056 DA03     		lsl	r2, r3, #15
 1890 0058 094B     		ldr	r3, .L113+28
 1891 005a 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1892              		.loc 1 2610 0
 1893 005c BD46     		mov	sp, r7
 1894 005e 02B0     		add	sp, sp, #8
 1895              		@ sp needed
 1896 0060 80BD     		pop	{r7, pc}
 1897              	.L114:
 1898 0062 C046     		.align	2
 1899              	.L113:
 1900 0064 00000000 		.word	cydelayFreqHz
 1901 0068 006CDC02 		.word	48000000
 1902 006c 3F420F00 		.word	999999
 1903 0070 40420F00 		.word	1000000
 1904 0074 00000000 		.word	cydelayFreqMhz
 1905 0078 E7030000 		.word	999
 1906 007c 00000000 		.word	cydelayFreqKhz
 1907 0080 00000000 		.word	cydelay32kMs
 1908              		.cfi_endproc
 1909              	.LFE29:
 1910              		.size	CyDelayFreq, .-CyDelayFreq
 1911              		.section	.text.CySysTickStart,"ax",%progbits
 1912              		.align	2
 1913              		.global	CySysTickStart
 1914              		.code	16
 1915              		.thumb_func
 1916              		.type	CySysTickStart, %function
 1917              	CySysTickStart:
 1918              	.LFB30:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 1919              		.loc 1 2629 0
 1920              		.cfi_startproc
 1921 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 81


 1922              		.cfi_def_cfa_offset 8
 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 1925 0002 00AF     		add	r7, sp, #0
 1926              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1927              		.loc 1 2630 0
 1928 0004 064B     		ldr	r3, .L117
 1929 0006 1B68     		ldr	r3, [r3]
 1930 0008 002B     		cmp	r3, #0
 1931 000a 04D1     		bne	.L116
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1932              		.loc 1 2632 0
 1933 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1934              		.loc 1 2633 0
 1935 0010 034B     		ldr	r3, .L117
 1936 0012 0122     		mov	r2, #1
 1937 0014 1A60     		str	r2, [r3]
 1938              	.L116:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1939              		.loc 1 2636 0
 1940 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 1941              		.loc 1 2637 0
 1942 001a BD46     		mov	sp, r7
 1943              		@ sp needed
 1944 001c 80BD     		pop	{r7, pc}
 1945              	.L118:
 1946 001e C046     		.align	2
 1947              	.L117:
 1948 0020 00000000 		.word	CySysTickInitVar
 1949              		.cfi_endproc
 1950              	.LFE30:
 1951              		.size	CySysTickStart, .-CySysTickStart
 1952              		.section	.text.CySysTickInit,"ax",%progbits
 1953              		.align	2
 1954              		.global	CySysTickInit
 1955              		.code	16
 1956              		.thumb_func
 1957              		.type	CySysTickInit, %function
 1958              	CySysTickInit:
 1959              	.LFB31:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 82


2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1960              		.loc 1 2658 0
 1961              		.cfi_startproc
 1962 0000 80B5     		push	{r7, lr}
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 7, -8
 1965              		.cfi_offset 14, -4
 1966 0002 82B0     		sub	sp, sp, #8
 1967              		.cfi_def_cfa_offset 16
 1968 0004 00AF     		add	r7, sp, #0
 1969              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1970              		.loc 1 2661 0
 1971 0006 0023     		mov	r3, #0
 1972 0008 7B60     		str	r3, [r7, #4]
 1973 000a 07E0     		b	.L120
 1974              	.L121:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1975              		.loc 1 2663 0 discriminator 3
 1976 000c 114B     		ldr	r3, .L122
 1977 000e 7A68     		ldr	r2, [r7, #4]
 1978 0010 9200     		lsl	r2, r2, #2
 1979 0012 0021     		mov	r1, #0
 1980 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1981              		.loc 1 2661 0 discriminator 3
 1982 0016 7B68     		ldr	r3, [r7, #4]
 1983 0018 0133     		add	r3, r3, #1
 1984 001a 7B60     		str	r3, [r7, #4]
 1985              	.L120:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1986              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1987 001c 7B68     		ldr	r3, [r7, #4]
 1988 001e 042B     		cmp	r3, #4
 1989 0020 F4D9     		bls	.L121
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1990              		.loc 1 2666 0 is_stmt 1
 1991 0022 0D4B     		ldr	r3, .L122+4
 1992 0024 0F20     		mov	r0, #15
 1993 0026 191C     		mov	r1, r3
 1994 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 83


2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1995              		.loc 1 2672 0
 1996 002c 0B4B     		ldr	r3, .L122+8
 1997 002e 1B68     		ldr	r3, [r3]
 1998 0030 181C     		mov	r0, r3
 1999 0032 FA23     		mov	r3, #250
 2000 0034 9900     		lsl	r1, r3, #2
 2001 0036 FFF7FEFF 		bl	__aeabi_uidiv
 2002 003a 031C     		mov	r3, r0
 2003 003c 181C     		mov	r0, r3
 2004 003e FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2005              		.loc 1 2673 0
 2006 0042 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2007              		.loc 1 2674 0
 2008 0046 0F20     		mov	r0, #15
 2009 0048 FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
 2010              		.loc 1 2675 0
 2011 004c BD46     		mov	sp, r7
 2012 004e 02B0     		add	sp, sp, #8
 2013              		@ sp needed
 2014 0050 80BD     		pop	{r7, pc}
 2015              	.L123:
 2016 0052 C046     		.align	2
 2017              	.L122:
 2018 0054 00000000 		.word	CySysTickCallbacks
 2019 0058 00000000 		.word	CySysTickServiceCallbacks
 2020 005c 00000000 		.word	cydelayFreqHz
 2021              		.cfi_endproc
 2022              	.LFE31:
 2023              		.size	CySysTickInit, .-CySysTickInit
 2024              		.section	.text.CySysTickEnable,"ax",%progbits
 2025              		.align	2
 2026              		.global	CySysTickEnable
 2027              		.code	16
 2028              		.thumb_func
 2029              		.type	CySysTickEnable, %function
 2030              	CySysTickEnable:
 2031              	.LFB32:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 84


2689:Generated_Source\PSoC4/CyLib.c **** {
 2032              		.loc 1 2689 0
 2033              		.cfi_startproc
 2034 0000 80B5     		push	{r7, lr}
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 7, -8
 2037              		.cfi_offset 14, -4
 2038 0002 00AF     		add	r7, sp, #0
 2039              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2040              		.loc 1 2690 0
 2041 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2042              		.loc 1 2691 0
 2043 0008 034B     		ldr	r3, .L125
 2044 000a 034A     		ldr	r2, .L125
 2045 000c 1268     		ldr	r2, [r2]
 2046 000e 0121     		mov	r1, #1
 2047 0010 0A43     		orr	r2, r1
 2048 0012 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c **** }
 2049              		.loc 1 2692 0
 2050 0014 BD46     		mov	sp, r7
 2051              		@ sp needed
 2052 0016 80BD     		pop	{r7, pc}
 2053              	.L126:
 2054              		.align	2
 2055              	.L125:
 2056 0018 10E000E0 		.word	-536813552
 2057              		.cfi_endproc
 2058              	.LFE32:
 2059              		.size	CySysTickEnable, .-CySysTickEnable
 2060              		.section	.text.CySysTickStop,"ax",%progbits
 2061              		.align	2
 2062              		.global	CySysTickStop
 2063              		.code	16
 2064              		.thumb_func
 2065              		.type	CySysTickStop, %function
 2066              	CySysTickStop:
 2067              	.LFB33:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 2068              		.loc 1 2706 0
 2069              		.cfi_startproc
 2070 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 85


 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 2074 0002 00AF     		add	r7, sp, #0
 2075              		.cfi_def_cfa_register 7
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2076              		.loc 1 2707 0
 2077 0004 034B     		ldr	r3, .L128
 2078 0006 034A     		ldr	r2, .L128
 2079 0008 1268     		ldr	r2, [r2]
 2080 000a 0121     		mov	r1, #1
 2081 000c 8A43     		bic	r2, r1
 2082 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 2083              		.loc 1 2708 0
 2084 0010 BD46     		mov	sp, r7
 2085              		@ sp needed
 2086 0012 80BD     		pop	{r7, pc}
 2087              	.L129:
 2088              		.align	2
 2089              	.L128:
 2090 0014 10E000E0 		.word	-536813552
 2091              		.cfi_endproc
 2092              	.LFE33:
 2093              		.size	CySysTickStop, .-CySysTickStop
 2094              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2095              		.align	2
 2096              		.global	CySysTickEnableInterrupt
 2097              		.code	16
 2098              		.thumb_func
 2099              		.type	CySysTickEnableInterrupt, %function
 2100              	CySysTickEnableInterrupt:
 2101              	.LFB34:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 2102              		.loc 1 2722 0
 2103              		.cfi_startproc
 2104 0000 80B5     		push	{r7, lr}
 2105              		.cfi_def_cfa_offset 8
 2106              		.cfi_offset 7, -8
 2107              		.cfi_offset 14, -4
 2108 0002 00AF     		add	r7, sp, #0
 2109              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2110              		.loc 1 2723 0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 86


 2111 0004 034B     		ldr	r3, .L131
 2112 0006 034A     		ldr	r2, .L131
 2113 0008 1268     		ldr	r2, [r2]
 2114 000a 0221     		mov	r1, #2
 2115 000c 0A43     		orr	r2, r1
 2116 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 2117              		.loc 1 2724 0
 2118 0010 BD46     		mov	sp, r7
 2119              		@ sp needed
 2120 0012 80BD     		pop	{r7, pc}
 2121              	.L132:
 2122              		.align	2
 2123              	.L131:
 2124 0014 10E000E0 		.word	-536813552
 2125              		.cfi_endproc
 2126              	.LFE34:
 2127              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2128              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2129              		.align	2
 2130              		.global	CySysTickDisableInterrupt
 2131              		.code	16
 2132              		.thumb_func
 2133              		.type	CySysTickDisableInterrupt, %function
 2134              	CySysTickDisableInterrupt:
 2135              	.LFB35:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 2136              		.loc 1 2738 0
 2137              		.cfi_startproc
 2138 0000 80B5     		push	{r7, lr}
 2139              		.cfi_def_cfa_offset 8
 2140              		.cfi_offset 7, -8
 2141              		.cfi_offset 14, -4
 2142 0002 00AF     		add	r7, sp, #0
 2143              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2144              		.loc 1 2739 0
 2145 0004 034B     		ldr	r3, .L134
 2146 0006 034A     		ldr	r2, .L134
 2147 0008 1268     		ldr	r2, [r2]
 2148 000a 0221     		mov	r1, #2
 2149 000c 8A43     		bic	r2, r1
 2150 000e 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 87


 2151              		.loc 1 2740 0
 2152 0010 BD46     		mov	sp, r7
 2153              		@ sp needed
 2154 0012 80BD     		pop	{r7, pc}
 2155              	.L135:
 2156              		.align	2
 2157              	.L134:
 2158 0014 10E000E0 		.word	-536813552
 2159              		.cfi_endproc
 2160              	.LFE35:
 2161              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2162              		.section	.text.CySysTickSetReload,"ax",%progbits
 2163              		.align	2
 2164              		.global	CySysTickSetReload
 2165              		.code	16
 2166              		.thumb_func
 2167              		.type	CySysTickSetReload, %function
 2168              	CySysTickSetReload:
 2169              	.LFB36:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2170              		.loc 1 2755 0
 2171              		.cfi_startproc
 2172 0000 80B5     		push	{r7, lr}
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 7, -8
 2175              		.cfi_offset 14, -4
 2176 0002 82B0     		sub	sp, sp, #8
 2177              		.cfi_def_cfa_offset 16
 2178 0004 00AF     		add	r7, sp, #0
 2179              		.cfi_def_cfa_register 7
 2180 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2181              		.loc 1 2756 0
 2182 0008 034B     		ldr	r3, .L137
 2183 000a 7A68     		ldr	r2, [r7, #4]
 2184 000c 1202     		lsl	r2, r2, #8
 2185 000e 120A     		lsr	r2, r2, #8
 2186 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 2187              		.loc 1 2757 0
 2188 0012 BD46     		mov	sp, r7
 2189 0014 02B0     		add	sp, sp, #8
 2190              		@ sp needed
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 88


 2191 0016 80BD     		pop	{r7, pc}
 2192              	.L138:
 2193              		.align	2
 2194              	.L137:
 2195 0018 14E000E0 		.word	-536813548
 2196              		.cfi_endproc
 2197              	.LFE36:
 2198              		.size	CySysTickSetReload, .-CySysTickSetReload
 2199              		.section	.text.CySysTickGetReload,"ax",%progbits
 2200              		.align	2
 2201              		.global	CySysTickGetReload
 2202              		.code	16
 2203              		.thumb_func
 2204              		.type	CySysTickGetReload, %function
 2205              	CySysTickGetReload:
 2206              	.LFB37:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2207              		.loc 1 2771 0
 2208              		.cfi_startproc
 2209 0000 80B5     		push	{r7, lr}
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 7, -8
 2212              		.cfi_offset 14, -4
 2213 0002 00AF     		add	r7, sp, #0
 2214              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2215              		.loc 1 2772 0
 2216 0004 034B     		ldr	r3, .L141
 2217 0006 1B68     		ldr	r3, [r3]
 2218 0008 1B02     		lsl	r3, r3, #8
 2219 000a 1B0A     		lsr	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 2220              		.loc 1 2773 0
 2221 000c 181C     		mov	r0, r3
 2222 000e BD46     		mov	sp, r7
 2223              		@ sp needed
 2224 0010 80BD     		pop	{r7, pc}
 2225              	.L142:
 2226 0012 C046     		.align	2
 2227              	.L141:
 2228 0014 14E000E0 		.word	-536813548
 2229              		.cfi_endproc
 2230              	.LFE37:
 2231              		.size	CySysTickGetReload, .-CySysTickGetReload
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 89


 2232              		.section	.text.CySysTickGetValue,"ax",%progbits
 2233              		.align	2
 2234              		.global	CySysTickGetValue
 2235              		.code	16
 2236              		.thumb_func
 2237              		.type	CySysTickGetValue, %function
 2238              	CySysTickGetValue:
 2239              	.LFB38:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 2240              		.loc 1 2787 0
 2241              		.cfi_startproc
 2242 0000 80B5     		push	{r7, lr}
 2243              		.cfi_def_cfa_offset 8
 2244              		.cfi_offset 7, -8
 2245              		.cfi_offset 14, -4
 2246 0002 00AF     		add	r7, sp, #0
 2247              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2248              		.loc 1 2788 0
 2249 0004 034B     		ldr	r3, .L145
 2250 0006 1B68     		ldr	r3, [r3]
 2251 0008 1B02     		lsl	r3, r3, #8
 2252 000a 1B0A     		lsr	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 2253              		.loc 1 2789 0
 2254 000c 181C     		mov	r0, r3
 2255 000e BD46     		mov	sp, r7
 2256              		@ sp needed
 2257 0010 80BD     		pop	{r7, pc}
 2258              	.L146:
 2259 0012 C046     		.align	2
 2260              	.L145:
 2261 0014 18E000E0 		.word	-536813544
 2262              		.cfi_endproc
 2263              	.LFE38:
 2264              		.size	CySysTickGetValue, .-CySysTickGetValue
 2265              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2266              		.align	2
 2267              		.global	CySysTickGetCountFlag
 2268              		.code	16
 2269              		.thumb_func
 2270              		.type	CySysTickGetCountFlag, %function
 2271              	CySysTickGetCountFlag:
 2272              	.LFB39:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 90


2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 91


2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 2273              		.loc 1 2867 0
 2274              		.cfi_startproc
 2275 0000 80B5     		push	{r7, lr}
 2276              		.cfi_def_cfa_offset 8
 2277              		.cfi_offset 7, -8
 2278              		.cfi_offset 14, -4
 2279 0002 00AF     		add	r7, sp, #0
 2280              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2281              		.loc 1 2868 0
 2282 0004 034B     		ldr	r3, .L149
 2283 0006 1B68     		ldr	r3, [r3]
 2284 0008 1B0C     		lsr	r3, r3, #16
 2285 000a 0122     		mov	r2, #1
 2286 000c 1340     		and	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 2287              		.loc 1 2869 0
 2288 000e 181C     		mov	r0, r3
 2289 0010 BD46     		mov	sp, r7
 2290              		@ sp needed
 2291 0012 80BD     		pop	{r7, pc}
 2292              	.L150:
 2293              		.align	2
 2294              	.L149:
 2295 0014 10E000E0 		.word	-536813552
 2296              		.cfi_endproc
 2297              	.LFE39:
 2298              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2299              		.section	.text.CySysTickClear,"ax",%progbits
 2300              		.align	2
 2301              		.global	CySysTickClear
 2302              		.code	16
 2303              		.thumb_func
 2304              		.type	CySysTickClear, %function
 2305              	CySysTickClear:
 2306              	.LFB40:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 92


2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
 2307              		.loc 1 2880 0
 2308              		.cfi_startproc
 2309 0000 80B5     		push	{r7, lr}
 2310              		.cfi_def_cfa_offset 8
 2311              		.cfi_offset 7, -8
 2312              		.cfi_offset 14, -4
 2313 0002 00AF     		add	r7, sp, #0
 2314              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2315              		.loc 1 2881 0
 2316 0004 024B     		ldr	r3, .L152
 2317 0006 0022     		mov	r2, #0
 2318 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 2319              		.loc 1 2882 0
 2320 000a BD46     		mov	sp, r7
 2321              		@ sp needed
 2322 000c 80BD     		pop	{r7, pc}
 2323              	.L153:
 2324 000e C046     		.align	2
 2325              	.L152:
 2326 0010 18E000E0 		.word	-536813544
 2327              		.cfi_endproc
 2328              	.LFE40:
 2329              		.size	CySysTickClear, .-CySysTickClear
 2330              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2331              		.align	2
 2332              		.global	CySysTickSetCallback
 2333              		.code	16
 2334              		.thumb_func
 2335              		.type	CySysTickSetCallback, %function
 2336              	CySysTickSetCallback:
 2337              	.LFB41:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 93


2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 2338              		.loc 1 2915 0
 2339              		.cfi_startproc
 2340 0000 80B5     		push	{r7, lr}
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 7, -8
 2343              		.cfi_offset 14, -4
 2344 0002 84B0     		sub	sp, sp, #16
 2345              		.cfi_def_cfa_offset 24
 2346 0004 00AF     		add	r7, sp, #0
 2347              		.cfi_def_cfa_register 7
 2348 0006 7860     		str	r0, [r7, #4]
 2349 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2350              		.loc 1 2918 0
 2351 000a 074B     		ldr	r3, .L156
 2352 000c 7A68     		ldr	r2, [r7, #4]
 2353 000e 9200     		lsl	r2, r2, #2
 2354 0010 D358     		ldr	r3, [r2, r3]
 2355 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2356              		.loc 1 2919 0
 2357 0014 044B     		ldr	r3, .L156
 2358 0016 7A68     		ldr	r2, [r7, #4]
 2359 0018 9200     		lsl	r2, r2, #2
 2360 001a 3968     		ldr	r1, [r7]
 2361 001c D150     		str	r1, [r2, r3]
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2362              		.loc 1 2920 0
 2363 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 2364              		.loc 1 2921 0
 2365 0020 181C     		mov	r0, r3
 2366 0022 BD46     		mov	sp, r7
 2367 0024 04B0     		add	sp, sp, #16
 2368              		@ sp needed
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 94


 2369 0026 80BD     		pop	{r7, pc}
 2370              	.L157:
 2371              		.align	2
 2372              	.L156:
 2373 0028 00000000 		.word	CySysTickCallbacks
 2374              		.cfi_endproc
 2375              	.LFE41:
 2376              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2377              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2378              		.align	2
 2379              		.global	CySysTickGetCallback
 2380              		.code	16
 2381              		.thumb_func
 2382              		.type	CySysTickGetCallback, %function
 2383              	CySysTickGetCallback:
 2384              	.LFB42:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 2385              		.loc 1 2939 0
 2386              		.cfi_startproc
 2387 0000 80B5     		push	{r7, lr}
 2388              		.cfi_def_cfa_offset 8
 2389              		.cfi_offset 7, -8
 2390              		.cfi_offset 14, -4
 2391 0002 82B0     		sub	sp, sp, #8
 2392              		.cfi_def_cfa_offset 16
 2393 0004 00AF     		add	r7, sp, #0
 2394              		.cfi_def_cfa_register 7
 2395 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2396              		.loc 1 2940 0
 2397 0008 034B     		ldr	r3, .L160
 2398 000a 7A68     		ldr	r2, [r7, #4]
 2399 000c 9200     		lsl	r2, r2, #2
 2400 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 2401              		.loc 1 2941 0
 2402 0010 181C     		mov	r0, r3
 2403 0012 BD46     		mov	sp, r7
 2404 0014 02B0     		add	sp, sp, #8
 2405              		@ sp needed
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 95


 2406 0016 80BD     		pop	{r7, pc}
 2407              	.L161:
 2408              		.align	2
 2409              	.L160:
 2410 0018 00000000 		.word	CySysTickCallbacks
 2411              		.cfi_endproc
 2412              	.LFE42:
 2413              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2414              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2415              		.align	2
 2416              		.code	16
 2417              		.thumb_func
 2418              		.type	CySysTickServiceCallbacks, %function
 2419              	CySysTickServiceCallbacks:
 2420              	.LFB43:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2421              		.loc 1 2952 0
 2422              		.cfi_startproc
 2423 0000 80B5     		push	{r7, lr}
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 7, -8
 2426              		.cfi_offset 14, -4
 2427 0002 82B0     		sub	sp, sp, #8
 2428              		.cfi_def_cfa_offset 16
 2429 0004 00AF     		add	r7, sp, #0
 2430              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2431              		.loc 1 2956 0
 2432 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2433 000a 031E     		sub	r3, r0, #0
 2434 000c 012B     		cmp	r3, #1
 2435 000e 13D1     		bne	.L162
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2436              		.loc 1 2958 0
 2437 0010 0023     		mov	r3, #0
 2438 0012 7B60     		str	r3, [r7, #4]
 2439 0014 0DE0     		b	.L164
 2440              	.L166:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2441              		.loc 1 2960 0
 2442 0016 0A4B     		ldr	r3, .L167
 2443 0018 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 96


 2444 001a 9200     		lsl	r2, r2, #2
 2445 001c D358     		ldr	r3, [r2, r3]
 2446 001e 002B     		cmp	r3, #0
 2447 0020 04D0     		beq	.L165
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2448              		.loc 1 2962 0
 2449 0022 074B     		ldr	r3, .L167
 2450 0024 7A68     		ldr	r2, [r7, #4]
 2451 0026 9200     		lsl	r2, r2, #2
 2452 0028 D358     		ldr	r3, [r2, r3]
 2453 002a 9847     		blx	r3
 2454              	.L165:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2455              		.loc 1 2958 0 discriminator 2
 2456 002c 7B68     		ldr	r3, [r7, #4]
 2457 002e 0133     		add	r3, r3, #1
 2458 0030 7B60     		str	r3, [r7, #4]
 2459              	.L164:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2460              		.loc 1 2958 0 is_stmt 0 discriminator 1
 2461 0032 7B68     		ldr	r3, [r7, #4]
 2462 0034 042B     		cmp	r3, #4
 2463 0036 EED9     		bls	.L166
 2464              	.L162:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 2465              		.loc 1 2966 0 is_stmt 1
 2466 0038 BD46     		mov	sp, r7
 2467 003a 02B0     		add	sp, sp, #8
 2468              		@ sp needed
 2469 003c 80BD     		pop	{r7, pc}
 2470              	.L168:
 2471 003e C046     		.align	2
 2472              	.L167:
 2473 0040 00000000 		.word	CySysTickCallbacks
 2474              		.cfi_endproc
 2475              	.LFE43:
 2476              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2477              		.section	.text.CyGetUniqueId,"ax",%progbits
 2478              		.align	2
 2479              		.global	CyGetUniqueId
 2480              		.code	16
 2481              		.thumb_func
 2482              		.type	CyGetUniqueId, %function
 2483              	CyGetUniqueId:
 2484              	.LFB44:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 97


2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2485              		.loc 1 2984 0
 2486              		.cfi_startproc
 2487 0000 80B5     		push	{r7, lr}
 2488              		.cfi_def_cfa_offset 8
 2489              		.cfi_offset 7, -8
 2490              		.cfi_offset 14, -4
 2491 0002 82B0     		sub	sp, sp, #8
 2492              		.cfi_def_cfa_offset 16
 2493 0004 00AF     		add	r7, sp, #0
 2494              		.cfi_def_cfa_register 7
 2495 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2496              		.loc 1 2986 0
 2497 0008 254B     		ldr	r3, .L170
 2498 000a 1B78     		ldrb	r3, [r3]
 2499 000c DBB2     		uxtb	r3, r3
 2500 000e 1A1C     		mov	r2, r3
 2501 0010 7B68     		ldr	r3, [r7, #4]
 2502 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2503              		.loc 1 2987 0
 2504 0014 234B     		ldr	r3, .L170+4
 2505 0016 1B78     		ldrb	r3, [r3]
 2506 0018 DBB2     		uxtb	r3, r3
 2507 001a 1A02     		lsl	r2, r3, #8
 2508 001c 7B68     		ldr	r3, [r7, #4]
 2509 001e 1B68     		ldr	r3, [r3]
 2510 0020 1A43     		orr	r2, r3
 2511 0022 7B68     		ldr	r3, [r7, #4]
 2512 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2513              		.loc 1 2988 0
 2514 0026 204B     		ldr	r3, .L170+8
 2515 0028 1B78     		ldrb	r3, [r3]
 2516 002a DBB2     		uxtb	r3, r3
 2517 002c 1A04     		lsl	r2, r3, #16
 2518 002e 7B68     		ldr	r3, [r7, #4]
 2519 0030 1B68     		ldr	r3, [r3]
 2520 0032 1A43     		orr	r2, r3
 2521 0034 7B68     		ldr	r3, [r7, #4]
 2522 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2523              		.loc 1 2989 0
 2524 0038 1C4B     		ldr	r3, .L170+12
 2525 003a 1B78     		ldrb	r3, [r3]
 2526 003c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 98


 2527 003e 1A06     		lsl	r2, r3, #24
 2528 0040 7B68     		ldr	r3, [r7, #4]
 2529 0042 1B68     		ldr	r3, [r3]
 2530 0044 1A43     		orr	r2, r3
 2531 0046 7B68     		ldr	r3, [r7, #4]
 2532 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2533              		.loc 1 2991 0
 2534 004a 7B68     		ldr	r3, [r7, #4]
 2535 004c 0433     		add	r3, r3, #4
 2536 004e 184A     		ldr	r2, .L170+16
 2537 0050 1278     		ldrb	r2, [r2]
 2538 0052 D2B2     		uxtb	r2, r2
 2539 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2540              		.loc 1 2992 0
 2541 0056 174B     		ldr	r3, .L170+20
 2542 0058 1B78     		ldrb	r3, [r3]
 2543 005a DBB2     		uxtb	r3, r3
 2544 005c 1902     		lsl	r1, r3, #8
 2545 005e 7B68     		ldr	r3, [r7, #4]
 2546 0060 0433     		add	r3, r3, #4
 2547 0062 7A68     		ldr	r2, [r7, #4]
 2548 0064 0432     		add	r2, r2, #4
 2549 0066 1268     		ldr	r2, [r2]
 2550 0068 0A43     		orr	r2, r1
 2551 006a 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2552              		.loc 1 2993 0
 2553 006c 124B     		ldr	r3, .L170+24
 2554 006e 1B78     		ldrb	r3, [r3]
 2555 0070 DBB2     		uxtb	r3, r3
 2556 0072 1904     		lsl	r1, r3, #16
 2557 0074 7B68     		ldr	r3, [r7, #4]
 2558 0076 0433     		add	r3, r3, #4
 2559 0078 7A68     		ldr	r2, [r7, #4]
 2560 007a 0432     		add	r2, r2, #4
 2561 007c 1268     		ldr	r2, [r2]
 2562 007e 0A43     		orr	r2, r1
 2563 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2564              		.loc 1 2994 0
 2565 0082 0E4B     		ldr	r3, .L170+28
 2566 0084 1B78     		ldrb	r3, [r3]
 2567 0086 DBB2     		uxtb	r3, r3
 2568 0088 1906     		lsl	r1, r3, #24
 2569 008a 7B68     		ldr	r3, [r7, #4]
 2570 008c 0433     		add	r3, r3, #4
 2571 008e 7A68     		ldr	r2, [r7, #4]
 2572 0090 0432     		add	r2, r2, #4
 2573 0092 1268     		ldr	r2, [r2]
 2574 0094 0A43     		orr	r2, r1
 2575 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 99


2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2576              		.loc 1 3006 0
 2577 0098 BD46     		mov	sp, r7
 2578 009a 02B0     		add	sp, sp, #8
 2579              		@ sp needed
 2580 009c 80BD     		pop	{r7, pc}
 2581              	.L171:
 2582 009e C046     		.align	2
 2583              	.L170:
 2584 00a0 78F1FF0F 		.word	268431736
 2585 00a4 79F1FF0F 		.word	268431737
 2586 00a8 7AF1FF0F 		.word	268431738
 2587 00ac 7BF1FF0F 		.word	268431739
 2588 00b0 7CF1FF0F 		.word	268431740
 2589 00b4 7DF1FF0F 		.word	268431741
 2590 00b8 7EF1FF0F 		.word	268431742
 2591 00bc 7FF1FF0F 		.word	268431743
 2592              		.cfi_endproc
 2593              	.LFE44:
 2594              		.size	CyGetUniqueId, .-CyGetUniqueId
 2595              		.text
 2596              	.Letext0:
 2597              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2598              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2599              		.section	.debug_info,"",%progbits
 2600              	.Ldebug_info0:
 2601 0000 DF080000 		.4byte	0x8df
 2602 0004 0400     		.2byte	0x4
 2603 0006 00000000 		.4byte	.Ldebug_abbrev0
 2604 000a 04       		.byte	0x4
 2605 000b 01       		.uleb128 0x1
 2606 000c 5A050000 		.4byte	.LASF101
 2607 0010 01       		.byte	0x1
 2608 0011 0A060000 		.4byte	.LASF102
 2609 0015 68010000 		.4byte	.LASF103
 2610 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2611 001d 00000000 		.4byte	0
 2612 0021 00000000 		.4byte	.Ldebug_line0
 2613 0025 02       		.uleb128 0x2
 2614 0026 01       		.byte	0x1
 2615 0027 06       		.byte	0x6
 2616 0028 FE000000 		.4byte	.LASF0
 2617 002c 02       		.uleb128 0x2
 2618 002d 01       		.byte	0x1
 2619 002e 08       		.byte	0x8
 2620 002f 3A040000 		.4byte	.LASF1
 2621 0033 02       		.uleb128 0x2
 2622 0034 02       		.byte	0x2
 2623 0035 05       		.byte	0x5
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 100


 2624 0036 48040000 		.4byte	.LASF2
 2625 003a 02       		.uleb128 0x2
 2626 003b 02       		.byte	0x2
 2627 003c 07       		.byte	0x7
 2628 003d CE020000 		.4byte	.LASF3
 2629 0041 02       		.uleb128 0x2
 2630 0042 04       		.byte	0x4
 2631 0043 05       		.byte	0x5
 2632 0044 3D010000 		.4byte	.LASF4
 2633 0048 02       		.uleb128 0x2
 2634 0049 04       		.byte	0x4
 2635 004a 07       		.byte	0x7
 2636 004b 6D020000 		.4byte	.LASF5
 2637 004f 02       		.uleb128 0x2
 2638 0050 08       		.byte	0x8
 2639 0051 05       		.byte	0x5
 2640 0052 F0000000 		.4byte	.LASF6
 2641 0056 02       		.uleb128 0x2
 2642 0057 08       		.byte	0x8
 2643 0058 07       		.byte	0x7
 2644 0059 84000000 		.4byte	.LASF7
 2645 005d 03       		.uleb128 0x3
 2646 005e 04       		.byte	0x4
 2647 005f 05       		.byte	0x5
 2648 0060 696E7400 		.ascii	"int\000"
 2649 0064 02       		.uleb128 0x2
 2650 0065 04       		.byte	0x4
 2651 0066 07       		.byte	0x7
 2652 0067 51020000 		.4byte	.LASF8
 2653 006b 04       		.uleb128 0x4
 2654 006c 97010000 		.4byte	.LASF9
 2655 0070 02       		.byte	0x2
 2656 0071 B901     		.2byte	0x1b9
 2657 0073 2C000000 		.4byte	0x2c
 2658 0077 04       		.uleb128 0x4
 2659 0078 17000000 		.4byte	.LASF10
 2660 007c 02       		.byte	0x2
 2661 007d BA01     		.2byte	0x1ba
 2662 007f 3A000000 		.4byte	0x3a
 2663 0083 04       		.uleb128 0x4
 2664 0084 D7010000 		.4byte	.LASF11
 2665 0088 02       		.byte	0x2
 2666 0089 BB01     		.2byte	0x1bb
 2667 008b 48000000 		.4byte	0x48
 2668 008f 02       		.uleb128 0x2
 2669 0090 04       		.byte	0x4
 2670 0091 04       		.byte	0x4
 2671 0092 E1030000 		.4byte	.LASF12
 2672 0096 02       		.uleb128 0x2
 2673 0097 08       		.byte	0x8
 2674 0098 04       		.byte	0x4
 2675 0099 B3010000 		.4byte	.LASF13
 2676 009d 02       		.uleb128 0x2
 2677 009e 01       		.byte	0x1
 2678 009f 08       		.byte	0x8
 2679 00a0 8B040000 		.4byte	.LASF14
 2680 00a4 04       		.uleb128 0x4
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 101


 2681 00a5 24040000 		.4byte	.LASF15
 2682 00a9 02       		.byte	0x2
 2683 00aa 6302     		.2byte	0x263
 2684 00ac B0000000 		.4byte	0xb0
 2685 00b0 05       		.uleb128 0x5
 2686 00b1 6B000000 		.4byte	0x6b
 2687 00b5 04       		.uleb128 0x4
 2688 00b6 3C030000 		.4byte	.LASF16
 2689 00ba 02       		.byte	0x2
 2690 00bb 6502     		.2byte	0x265
 2691 00bd C1000000 		.4byte	0xc1
 2692 00c1 05       		.uleb128 0x5
 2693 00c2 83000000 		.4byte	0x83
 2694 00c6 04       		.uleb128 0x4
 2695 00c7 90040000 		.4byte	.LASF17
 2696 00cb 02       		.byte	0x2
 2697 00cc 7502     		.2byte	0x275
 2698 00ce D2000000 		.4byte	0xd2
 2699 00d2 06       		.uleb128 0x6
 2700 00d3 04       		.byte	0x4
 2701 00d4 D8000000 		.4byte	0xd8
 2702 00d8 07       		.uleb128 0x7
 2703 00d9 02       		.uleb128 0x2
 2704 00da 04       		.byte	0x4
 2705 00db 07       		.byte	0x7
 2706 00dc 5E030000 		.4byte	.LASF18
 2707 00e0 08       		.uleb128 0x8
 2708 00e1 F6030000 		.4byte	.LASF19
 2709 00e5 03       		.byte	0x3
 2710 00e6 F5       		.byte	0xf5
 2711 00e7 D2000000 		.4byte	0xd2
 2712 00eb 09       		.uleb128 0x9
 2713 00ec E8050000 		.4byte	.LASF20
 2714 00f0 01       		.byte	0x1
 2715 00f1 6B       		.byte	0x6b
 2716 00f2 00000000 		.4byte	.LFB0
 2717 00f6 1C000000 		.4byte	.LFE0-.LFB0
 2718 00fa 01       		.uleb128 0x1
 2719 00fb 9C       		.byte	0x9c
 2720 00fc 09       		.uleb128 0x9
 2721 00fd 9A020000 		.4byte	.LASF21
 2722 0101 01       		.byte	0x1
 2723 0102 8B       		.byte	0x8b
 2724 0103 00000000 		.4byte	.LFB1
 2725 0107 18000000 		.4byte	.LFE1-.LFB1
 2726 010b 01       		.uleb128 0x1
 2727 010c 9C       		.byte	0x9c
 2728 010d 0A       		.uleb128 0xa
 2729 010e 27000000 		.4byte	.LASF24
 2730 0112 01       		.byte	0x1
 2731 0113 AD01     		.2byte	0x1ad
 2732 0115 00000000 		.4byte	.LFB2
 2733 0119 48000000 		.4byte	.LFE2-.LFB2
 2734 011d 01       		.uleb128 0x1
 2735 011e 9C       		.byte	0x9c
 2736 011f 51010000 		.4byte	0x151
 2737 0123 0B       		.uleb128 0xb
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 102


 2738 0124 70040000 		.4byte	.LASF26
 2739 0128 01       		.byte	0x1
 2740 0129 AD01     		.2byte	0x1ad
 2741 012b 83000000 		.4byte	0x83
 2742 012f 02       		.uleb128 0x2
 2743 0130 91       		.byte	0x91
 2744 0131 64       		.sleb128 -28
 2745 0132 0C       		.uleb128 0xc
 2746 0133 1B010000 		.4byte	.LASF22
 2747 0137 01       		.byte	0x1
 2748 0138 AF01     		.2byte	0x1af
 2749 013a 6B000000 		.4byte	0x6b
 2750 013e 02       		.uleb128 0x2
 2751 013f 91       		.byte	0x91
 2752 0140 6F       		.sleb128 -17
 2753 0141 0C       		.uleb128 0xc
 2754 0142 36060000 		.4byte	.LASF23
 2755 0146 01       		.byte	0x1
 2756 0147 B001     		.2byte	0x1b0
 2757 0149 83000000 		.4byte	0x83
 2758 014d 02       		.uleb128 0x2
 2759 014e 91       		.byte	0x91
 2760 014f 68       		.sleb128 -24
 2761 0150 00       		.byte	0
 2762 0151 0D       		.uleb128 0xd
 2763 0152 27030000 		.4byte	.LASF25
 2764 0156 01       		.byte	0x1
 2765 0157 D901     		.2byte	0x1d9
 2766 0159 00000000 		.4byte	.LFB3
 2767 015d 50000000 		.4byte	.LFE3-.LFB3
 2768 0161 01       		.uleb128 0x1
 2769 0162 9C       		.byte	0x9c
 2770 0163 77010000 		.4byte	0x177
 2771 0167 0B       		.uleb128 0xb
 2772 0168 AC010000 		.4byte	.LASF27
 2773 016c 01       		.byte	0x1
 2774 016d D901     		.2byte	0x1d9
 2775 016f 83000000 		.4byte	0x83
 2776 0173 02       		.uleb128 0x2
 2777 0174 91       		.byte	0x91
 2778 0175 74       		.sleb128 -12
 2779 0176 00       		.byte	0
 2780 0177 0E       		.uleb128 0xe
 2781 0178 E3010000 		.4byte	.LASF42
 2782 017c 01       		.byte	0x1
 2783 017d FE01     		.2byte	0x1fe
 2784 017f 83000000 		.4byte	0x83
 2785 0183 00000000 		.4byte	.LFB4
 2786 0187 34000000 		.4byte	.LFE4-.LFB4
 2787 018b 01       		.uleb128 0x1
 2788 018c 9C       		.byte	0x9c
 2789 018d B0010000 		.4byte	0x1b0
 2790 0191 0C       		.uleb128 0xc
 2791 0192 1B010000 		.4byte	.LASF22
 2792 0196 01       		.byte	0x1
 2793 0197 0002     		.2byte	0x200
 2794 0199 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 103


 2795 019d 02       		.uleb128 0x2
 2796 019e 91       		.byte	0x91
 2797 019f 6F       		.sleb128 -17
 2798 01a0 0C       		.uleb128 0xc
 2799 01a1 89030000 		.4byte	.LASF28
 2800 01a5 01       		.byte	0x1
 2801 01a6 0102     		.2byte	0x201
 2802 01a8 83000000 		.4byte	0x83
 2803 01ac 02       		.uleb128 0x2
 2804 01ad 91       		.byte	0x91
 2805 01ae 68       		.sleb128 -24
 2806 01af 00       		.byte	0
 2807 01b0 0A       		.uleb128 0xa
 2808 01b1 AD040000 		.4byte	.LASF29
 2809 01b5 01       		.byte	0x1
 2810 01b6 3502     		.2byte	0x235
 2811 01b8 00000000 		.4byte	.LFB5
 2812 01bc 44000000 		.4byte	.LFE5-.LFB5
 2813 01c0 01       		.uleb128 0x1
 2814 01c1 9C       		.byte	0x9c
 2815 01c2 E5010000 		.4byte	0x1e5
 2816 01c6 0B       		.uleb128 0xb
 2817 01c7 52050000 		.4byte	.LASF30
 2818 01cb 01       		.byte	0x1
 2819 01cc 3502     		.2byte	0x235
 2820 01ce 83000000 		.4byte	0x83
 2821 01d2 02       		.uleb128 0x2
 2822 01d3 91       		.byte	0x91
 2823 01d4 64       		.sleb128 -28
 2824 01d5 0C       		.uleb128 0xc
 2825 01d6 1B010000 		.4byte	.LASF22
 2826 01da 01       		.byte	0x1
 2827 01db 3702     		.2byte	0x237
 2828 01dd 6B000000 		.4byte	0x6b
 2829 01e1 02       		.uleb128 0x2
 2830 01e2 91       		.byte	0x91
 2831 01e3 6F       		.sleb128 -17
 2832 01e4 00       		.byte	0
 2833 01e5 0A       		.uleb128 0xa
 2834 01e6 00030000 		.4byte	.LASF31
 2835 01ea 01       		.byte	0x1
 2836 01eb 6F02     		.2byte	0x26f
 2837 01ed 00000000 		.4byte	.LFB6
 2838 01f1 EC010000 		.4byte	.LFE6-.LFB6
 2839 01f5 01       		.uleb128 0x1
 2840 01f6 9C       		.byte	0x9c
 2841 01f7 65020000 		.4byte	0x265
 2842 01fb 0B       		.uleb128 0xb
 2843 01fc 0A010000 		.4byte	.LASF32
 2844 0200 01       		.byte	0x1
 2845 0201 6F02     		.2byte	0x26f
 2846 0203 83000000 		.4byte	0x83
 2847 0207 02       		.uleb128 0x2
 2848 0208 91       		.byte	0x91
 2849 0209 64       		.sleb128 -28
 2850 020a 0C       		.uleb128 0xc
 2851 020b 0F000000 		.4byte	.LASF33
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 104


 2852 020f 01       		.byte	0x1
 2853 0210 7502     		.2byte	0x275
 2854 0212 6B000000 		.4byte	0x6b
 2855 0216 02       		.uleb128 0x2
 2856 0217 91       		.byte	0x91
 2857 0218 6F       		.sleb128 -17
 2858 0219 0C       		.uleb128 0xc
 2859 021a 81030000 		.4byte	.LASF34
 2860 021e 01       		.byte	0x1
 2861 021f 7602     		.2byte	0x276
 2862 0221 6B000000 		.4byte	0x6b
 2863 0225 02       		.uleb128 0x2
 2864 0226 91       		.byte	0x91
 2865 0227 6E       		.sleb128 -18
 2866 0228 0C       		.uleb128 0xc
 2867 0229 F9050000 		.4byte	.LASF35
 2868 022d 01       		.byte	0x1
 2869 022e 7702     		.2byte	0x277
 2870 0230 6B000000 		.4byte	0x6b
 2871 0234 02       		.uleb128 0x2
 2872 0235 91       		.byte	0x91
 2873 0236 6B       		.sleb128 -21
 2874 0237 0C       		.uleb128 0xc
 2875 0238 6F000000 		.4byte	.LASF36
 2876 023c 01       		.byte	0x1
 2877 023d 7802     		.2byte	0x278
 2878 023f 6B000000 		.4byte	0x6b
 2879 0243 02       		.uleb128 0x2
 2880 0244 91       		.byte	0x91
 2881 0245 6D       		.sleb128 -19
 2882 0246 0C       		.uleb128 0xc
 2883 0247 EC040000 		.4byte	.LASF37
 2884 024b 01       		.byte	0x1
 2885 024c 7902     		.2byte	0x279
 2886 024e 6B000000 		.4byte	0x6b
 2887 0252 02       		.uleb128 0x2
 2888 0253 91       		.byte	0x91
 2889 0254 6A       		.sleb128 -22
 2890 0255 0C       		.uleb128 0xc
 2891 0256 1B010000 		.4byte	.LASF22
 2892 025a 01       		.byte	0x1
 2893 025b 8402     		.2byte	0x284
 2894 025d 6B000000 		.4byte	0x6b
 2895 0261 02       		.uleb128 0x2
 2896 0262 91       		.byte	0x91
 2897 0263 6C       		.sleb128 -20
 2898 0264 00       		.byte	0
 2899 0265 0A       		.uleb128 0xa
 2900 0266 E7030000 		.4byte	.LASF38
 2901 026a 01       		.byte	0x1
 2902 026b 4608     		.2byte	0x846
 2903 026d 00000000 		.4byte	.LFB7
 2904 0271 60000000 		.4byte	.LFE7-.LFB7
 2905 0275 01       		.uleb128 0x1
 2906 0276 9C       		.byte	0x9c
 2907 0277 8B020000 		.4byte	0x28b
 2908 027b 0B       		.uleb128 0xb
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 105


 2909 027c 29040000 		.4byte	.LASF39
 2910 0280 01       		.byte	0x1
 2911 0281 4608     		.2byte	0x846
 2912 0283 83000000 		.4byte	0x83
 2913 0287 02       		.uleb128 0x2
 2914 0288 91       		.byte	0x91
 2915 0289 74       		.sleb128 -12
 2916 028a 00       		.byte	0
 2917 028b 0F       		.uleb128 0xf
 2918 028c 25050000 		.4byte	.LASF40
 2919 0290 01       		.byte	0x1
 2920 0291 6408     		.2byte	0x864
 2921 0293 00000000 		.4byte	.LFB8
 2922 0297 28000000 		.4byte	.LFE8-.LFB8
 2923 029b 01       		.uleb128 0x1
 2924 029c 9C       		.byte	0x9c
 2925 029d 10       		.uleb128 0x10
 2926 029e 7F020000 		.4byte	.LASF82
 2927 02a2 01       		.byte	0x1
 2928 02a3 7608     		.2byte	0x876
 2929 02a5 83000000 		.4byte	0x83
 2930 02a9 00000000 		.4byte	.LFB9
 2931 02ad 18000000 		.4byte	.LFE9-.LFB9
 2932 02b1 01       		.uleb128 0x1
 2933 02b2 9C       		.byte	0x9c
 2934 02b3 0F       		.uleb128 0xf
 2935 02b4 C0010000 		.4byte	.LASF41
 2936 02b8 01       		.byte	0x1
 2937 02b9 8608     		.2byte	0x886
 2938 02bb 00000000 		.4byte	.LFB10
 2939 02bf 14000000 		.4byte	.LFE10-.LFB10
 2940 02c3 01       		.uleb128 0x1
 2941 02c4 9C       		.byte	0x9c
 2942 02c5 11       		.uleb128 0x11
 2943 02c6 BA020000 		.4byte	.LASF43
 2944 02ca 01       		.byte	0x1
 2945 02cb A008     		.2byte	0x8a0
 2946 02cd 83000000 		.4byte	0x83
 2947 02d1 00000000 		.4byte	.LFB11
 2948 02d5 30000000 		.4byte	.LFE11-.LFB11
 2949 02d9 01       		.uleb128 0x1
 2950 02da 9C       		.byte	0x9c
 2951 02db FE020000 		.4byte	0x2fe
 2952 02df 0B       		.uleb128 0xb
 2953 02e0 84040000 		.4byte	.LASF44
 2954 02e4 01       		.byte	0x1
 2955 02e5 A008     		.2byte	0x8a0
 2956 02e7 83000000 		.4byte	0x83
 2957 02eb 02       		.uleb128 0x2
 2958 02ec 91       		.byte	0x91
 2959 02ed 6C       		.sleb128 -20
 2960 02ee 0C       		.uleb128 0xc
 2961 02ef 51030000 		.4byte	.LASF45
 2962 02f3 01       		.byte	0x1
 2963 02f4 A208     		.2byte	0x8a2
 2964 02f6 83000000 		.4byte	0x83
 2965 02fa 02       		.uleb128 0x2
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 106


 2966 02fb 91       		.byte	0x91
 2967 02fc 74       		.sleb128 -12
 2968 02fd 00       		.byte	0
 2969 02fe 11       		.uleb128 0x11
 2970 02ff 61000000 		.4byte	.LASF46
 2971 0303 01       		.byte	0x1
 2972 0304 B708     		.2byte	0x8b7
 2973 0306 83000000 		.4byte	0x83
 2974 030a 00000000 		.4byte	.LFB12
 2975 030e 24000000 		.4byte	.LFE12-.LFB12
 2976 0312 01       		.uleb128 0x1
 2977 0313 9C       		.byte	0x9c
 2978 0314 28030000 		.4byte	0x328
 2979 0318 0C       		.uleb128 0xc
 2980 0319 1E000000 		.4byte	.LASF47
 2981 031d 01       		.byte	0x1
 2982 031e B908     		.2byte	0x8b9
 2983 0320 83000000 		.4byte	0x83
 2984 0324 02       		.uleb128 0x2
 2985 0325 91       		.byte	0x91
 2986 0326 74       		.sleb128 -12
 2987 0327 00       		.byte	0
 2988 0328 0D       		.uleb128 0xd
 2989 0329 AC000000 		.4byte	.LASF48
 2990 032d 01       		.byte	0x1
 2991 032e CE08     		.2byte	0x8ce
 2992 0330 00000000 		.4byte	.LFB13
 2993 0334 18000000 		.4byte	.LFE13-.LFB13
 2994 0338 01       		.uleb128 0x1
 2995 0339 9C       		.byte	0x9c
 2996 033a 4E030000 		.4byte	0x34e
 2997 033e 0B       		.uleb128 0xb
 2998 033f DE010000 		.4byte	.LASF49
 2999 0343 01       		.byte	0x1
 3000 0344 CE08     		.2byte	0x8ce
 3001 0346 83000000 		.4byte	0x83
 3002 034a 02       		.uleb128 0x2
 3003 034b 91       		.byte	0x91
 3004 034c 74       		.sleb128 -12
 3005 034d 00       		.byte	0
 3006 034e 0E       		.uleb128 0xe
 3007 034f 15030000 		.4byte	.LASF50
 3008 0353 01       		.byte	0x1
 3009 0354 E708     		.2byte	0x8e7
 3010 0356 C6000000 		.4byte	0xc6
 3011 035a 00000000 		.4byte	.LFB14
 3012 035e 48000000 		.4byte	.LFE14-.LFB14
 3013 0362 01       		.uleb128 0x1
 3014 0363 9C       		.byte	0x9c
 3015 0364 A5030000 		.4byte	0x3a5
 3016 0368 0B       		.uleb128 0xb
 3017 0369 F0020000 		.4byte	.LASF51
 3018 036d 01       		.byte	0x1
 3019 036e E708     		.2byte	0x8e7
 3020 0370 6B000000 		.4byte	0x6b
 3021 0374 02       		.uleb128 0x2
 3022 0375 91       		.byte	0x91
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 107


 3023 0376 6F       		.sleb128 -17
 3024 0377 0B       		.uleb128 0xb
 3025 0378 79030000 		.4byte	.LASF52
 3026 037c 01       		.byte	0x1
 3027 037d E708     		.2byte	0x8e7
 3028 037f C6000000 		.4byte	0xc6
 3029 0383 02       		.uleb128 0x2
 3030 0384 91       		.byte	0x91
 3031 0385 68       		.sleb128 -24
 3032 0386 0C       		.uleb128 0xc
 3033 0387 53000000 		.4byte	.LASF53
 3034 038b 01       		.byte	0x1
 3035 038c E908     		.2byte	0x8e9
 3036 038e C6000000 		.4byte	0xc6
 3037 0392 02       		.uleb128 0x2
 3038 0393 91       		.byte	0x91
 3039 0394 70       		.sleb128 -16
 3040 0395 0C       		.uleb128 0xc
 3041 0396 00000000 		.4byte	.LASF54
 3042 039a 01       		.byte	0x1
 3043 039b EA08     		.2byte	0x8ea
 3044 039d A5030000 		.4byte	0x3a5
 3045 03a1 02       		.uleb128 0x2
 3046 03a2 91       		.byte	0x91
 3047 03a3 74       		.sleb128 -12
 3048 03a4 00       		.byte	0
 3049 03a5 06       		.uleb128 0x6
 3050 03a6 04       		.byte	0x4
 3051 03a7 C6000000 		.4byte	0xc6
 3052 03ab 0E       		.uleb128 0xe
 3053 03ac 5E040000 		.4byte	.LASF55
 3054 03b0 01       		.byte	0x1
 3055 03b1 0909     		.2byte	0x909
 3056 03b3 C6000000 		.4byte	0xc6
 3057 03b7 00000000 		.4byte	.LFB15
 3058 03bb 34000000 		.4byte	.LFE15-.LFB15
 3059 03bf 01       		.uleb128 0x1
 3060 03c0 9C       		.byte	0x9c
 3061 03c1 E4030000 		.4byte	0x3e4
 3062 03c5 0B       		.uleb128 0xb
 3063 03c6 F0020000 		.4byte	.LASF51
 3064 03ca 01       		.byte	0x1
 3065 03cb 0909     		.2byte	0x909
 3066 03cd 6B000000 		.4byte	0x6b
 3067 03d1 02       		.uleb128 0x2
 3068 03d2 91       		.byte	0x91
 3069 03d3 6F       		.sleb128 -17
 3070 03d4 0C       		.uleb128 0xc
 3071 03d5 00000000 		.4byte	.LASF54
 3072 03d9 01       		.byte	0x1
 3073 03da 0B09     		.2byte	0x90b
 3074 03dc A5030000 		.4byte	0x3a5
 3075 03e0 02       		.uleb128 0x2
 3076 03e1 91       		.byte	0x91
 3077 03e2 74       		.sleb128 -12
 3078 03e3 00       		.byte	0
 3079 03e4 0E       		.uleb128 0xe
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 108


 3080 03e5 E1020000 		.4byte	.LASF56
 3081 03e9 01       		.byte	0x1
 3082 03ea 1F09     		.2byte	0x91f
 3083 03ec C6000000 		.4byte	0xc6
 3084 03f0 00000000 		.4byte	.LFB16
 3085 03f4 4C000000 		.4byte	.LFE16-.LFB16
 3086 03f8 01       		.uleb128 0x1
 3087 03f9 9C       		.byte	0x9c
 3088 03fa 3B040000 		.4byte	0x43b
 3089 03fe 0B       		.uleb128 0xb
 3090 03ff F0020000 		.4byte	.LASF51
 3091 0403 01       		.byte	0x1
 3092 0404 1F09     		.2byte	0x91f
 3093 0406 6B000000 		.4byte	0x6b
 3094 040a 02       		.uleb128 0x2
 3095 040b 91       		.byte	0x91
 3096 040c 6F       		.sleb128 -17
 3097 040d 0B       		.uleb128 0xb
 3098 040e 79030000 		.4byte	.LASF52
 3099 0412 01       		.byte	0x1
 3100 0413 1F09     		.2byte	0x91f
 3101 0415 C6000000 		.4byte	0xc6
 3102 0419 02       		.uleb128 0x2
 3103 041a 91       		.byte	0x91
 3104 041b 68       		.sleb128 -24
 3105 041c 0C       		.uleb128 0xc
 3106 041d 53000000 		.4byte	.LASF53
 3107 0421 01       		.byte	0x1
 3108 0422 2109     		.2byte	0x921
 3109 0424 C6000000 		.4byte	0xc6
 3110 0428 02       		.uleb128 0x2
 3111 0429 91       		.byte	0x91
 3112 042a 70       		.sleb128 -16
 3113 042b 0C       		.uleb128 0xc
 3114 042c 00000000 		.4byte	.LASF54
 3115 0430 01       		.byte	0x1
 3116 0431 2209     		.2byte	0x922
 3117 0433 A5030000 		.4byte	0x3a5
 3118 0437 02       		.uleb128 0x2
 3119 0438 91       		.byte	0x91
 3120 0439 74       		.sleb128 -12
 3121 043a 00       		.byte	0
 3122 043b 0E       		.uleb128 0xe
 3123 043c 08040000 		.4byte	.LASF57
 3124 0440 01       		.byte	0x1
 3125 0441 3B09     		.2byte	0x93b
 3126 0443 C6000000 		.4byte	0xc6
 3127 0447 00000000 		.4byte	.LFB17
 3128 044b 36000000 		.4byte	.LFE17-.LFB17
 3129 044f 01       		.uleb128 0x1
 3130 0450 9C       		.byte	0x9c
 3131 0451 74040000 		.4byte	0x474
 3132 0455 0B       		.uleb128 0xb
 3133 0456 F0020000 		.4byte	.LASF51
 3134 045a 01       		.byte	0x1
 3135 045b 3B09     		.2byte	0x93b
 3136 045d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 109


 3137 0461 02       		.uleb128 0x2
 3138 0462 91       		.byte	0x91
 3139 0463 6F       		.sleb128 -17
 3140 0464 0C       		.uleb128 0xc
 3141 0465 00000000 		.4byte	.LASF54
 3142 0469 01       		.byte	0x1
 3143 046a 3D09     		.2byte	0x93d
 3144 046c A5030000 		.4byte	0x3a5
 3145 0470 02       		.uleb128 0x2
 3146 0471 91       		.byte	0x91
 3147 0472 74       		.sleb128 -12
 3148 0473 00       		.byte	0
 3149 0474 0A       		.uleb128 0xa
 3150 0475 D0030000 		.4byte	.LASF58
 3151 0479 01       		.byte	0x1
 3152 047a 4E09     		.2byte	0x94e
 3153 047c 00000000 		.4byte	.LFB18
 3154 0480 A8000000 		.4byte	.LFE18-.LFB18
 3155 0484 01       		.uleb128 0x1
 3156 0485 9C       		.byte	0x9c
 3157 0486 D6040000 		.4byte	0x4d6
 3158 048a 0B       		.uleb128 0xb
 3159 048b F0020000 		.4byte	.LASF51
 3160 048f 01       		.byte	0x1
 3161 0490 4E09     		.2byte	0x94e
 3162 0492 6B000000 		.4byte	0x6b
 3163 0496 02       		.uleb128 0x2
 3164 0497 91       		.byte	0x91
 3165 0498 5F       		.sleb128 -33
 3166 0499 0B       		.uleb128 0xb
 3167 049a F7020000 		.4byte	.LASF59
 3168 049e 01       		.byte	0x1
 3169 049f 4E09     		.2byte	0x94e
 3170 04a1 6B000000 		.4byte	0x6b
 3171 04a5 02       		.uleb128 0x2
 3172 04a6 91       		.byte	0x91
 3173 04a7 5E       		.sleb128 -34
 3174 04a8 0C       		.uleb128 0xc
 3175 04a9 1B010000 		.4byte	.LASF22
 3176 04ad 01       		.byte	0x1
 3177 04ae 5009     		.2byte	0x950
 3178 04b0 6B000000 		.4byte	0x6b
 3179 04b4 02       		.uleb128 0x2
 3180 04b5 91       		.byte	0x91
 3181 04b6 6B       		.sleb128 -21
 3182 04b7 0C       		.uleb128 0xc
 3183 04b8 BA010000 		.4byte	.LASF60
 3184 04bc 01       		.byte	0x1
 3185 04bd 5109     		.2byte	0x951
 3186 04bf 83000000 		.4byte	0x83
 3187 04c3 02       		.uleb128 0x2
 3188 04c4 91       		.byte	0x91
 3189 04c5 6C       		.sleb128 -20
 3190 04c6 0C       		.uleb128 0xc
 3191 04c7 27020000 		.4byte	.LASF61
 3192 04cb 01       		.byte	0x1
 3193 04cc 5209     		.2byte	0x952
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 110


 3194 04ce 83000000 		.4byte	0x83
 3195 04d2 02       		.uleb128 0x2
 3196 04d3 91       		.byte	0x91
 3197 04d4 64       		.sleb128 -28
 3198 04d5 00       		.byte	0
 3199 04d6 0E       		.uleb128 0xe
 3200 04d7 FB010000 		.4byte	.LASF62
 3201 04db 01       		.byte	0x1
 3202 04dc 7009     		.2byte	0x970
 3203 04de 6B000000 		.4byte	0x6b
 3204 04e2 00000000 		.4byte	.LFB19
 3205 04e6 5C000000 		.4byte	.LFE19-.LFB19
 3206 04ea 01       		.uleb128 0x1
 3207 04eb 9C       		.byte	0x9c
 3208 04ec 0F050000 		.4byte	0x50f
 3209 04f0 0B       		.uleb128 0xb
 3210 04f1 F0020000 		.4byte	.LASF51
 3211 04f5 01       		.byte	0x1
 3212 04f6 7009     		.2byte	0x970
 3213 04f8 6B000000 		.4byte	0x6b
 3214 04fc 02       		.uleb128 0x2
 3215 04fd 91       		.byte	0x91
 3216 04fe 6F       		.sleb128 -17
 3217 04ff 0C       		.uleb128 0xc
 3218 0500 F7020000 		.4byte	.LASF59
 3219 0504 01       		.byte	0x1
 3220 0505 7209     		.2byte	0x972
 3221 0507 6B000000 		.4byte	0x6b
 3222 050b 02       		.uleb128 0x2
 3223 050c 91       		.byte	0x91
 3224 050d 77       		.sleb128 -9
 3225 050e 00       		.byte	0
 3226 050f 0D       		.uleb128 0xd
 3227 0510 52040000 		.4byte	.LASF63
 3228 0514 01       		.byte	0x1
 3229 0515 8509     		.2byte	0x985
 3230 0517 00000000 		.4byte	.LFB20
 3231 051b 28000000 		.4byte	.LFE20-.LFB20
 3232 051f 01       		.uleb128 0x1
 3233 0520 9C       		.byte	0x9c
 3234 0521 35050000 		.4byte	0x535
 3235 0525 0B       		.uleb128 0xb
 3236 0526 F0020000 		.4byte	.LASF51
 3237 052a 01       		.byte	0x1
 3238 052b 8509     		.2byte	0x985
 3239 052d 6B000000 		.4byte	0x6b
 3240 0531 02       		.uleb128 0x2
 3241 0532 91       		.byte	0x91
 3242 0533 77       		.sleb128 -9
 3243 0534 00       		.byte	0
 3244 0535 11       		.uleb128 0x11
 3245 0536 E2000000 		.4byte	.LASF64
 3246 053a 01       		.byte	0x1
 3247 053b 9709     		.2byte	0x997
 3248 053d 6B000000 		.4byte	0x6b
 3249 0541 00000000 		.4byte	.LFB21
 3250 0545 30000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 111


 3251 0549 01       		.uleb128 0x1
 3252 054a 9C       		.byte	0x9c
 3253 054b 5F050000 		.4byte	0x55f
 3254 054f 0B       		.uleb128 0xb
 3255 0550 F0020000 		.4byte	.LASF51
 3256 0554 01       		.byte	0x1
 3257 0555 9709     		.2byte	0x997
 3258 0557 6B000000 		.4byte	0x6b
 3259 055b 02       		.uleb128 0x2
 3260 055c 91       		.byte	0x91
 3261 055d 77       		.sleb128 -9
 3262 055e 00       		.byte	0
 3263 055f 0D       		.uleb128 0xd
 3264 0560 46010000 		.4byte	.LASF65
 3265 0564 01       		.byte	0x1
 3266 0565 A709     		.2byte	0x9a7
 3267 0567 00000000 		.4byte	.LFB22
 3268 056b 28000000 		.4byte	.LFE22-.LFB22
 3269 056f 01       		.uleb128 0x1
 3270 0570 9C       		.byte	0x9c
 3271 0571 85050000 		.4byte	0x585
 3272 0575 0B       		.uleb128 0xb
 3273 0576 F0020000 		.4byte	.LASF51
 3274 057a 01       		.byte	0x1
 3275 057b A709     		.2byte	0x9a7
 3276 057d 6B000000 		.4byte	0x6b
 3277 0581 02       		.uleb128 0x2
 3278 0582 91       		.byte	0x91
 3279 0583 77       		.sleb128 -9
 3280 0584 00       		.byte	0
 3281 0585 0D       		.uleb128 0xd
 3282 0586 AA020000 		.4byte	.LASF66
 3283 058a 01       		.byte	0x1
 3284 058b B509     		.2byte	0x9b5
 3285 058d 00000000 		.4byte	.LFB23
 3286 0591 28000000 		.4byte	.LFE23-.LFB23
 3287 0595 01       		.uleb128 0x1
 3288 0596 9C       		.byte	0x9c
 3289 0597 AB050000 		.4byte	0x5ab
 3290 059b 0B       		.uleb128 0xb
 3291 059c F0020000 		.4byte	.LASF51
 3292 05a0 01       		.byte	0x1
 3293 05a1 B509     		.2byte	0x9b5
 3294 05a3 6B000000 		.4byte	0x6b
 3295 05a7 02       		.uleb128 0x2
 3296 05a8 91       		.byte	0x91
 3297 05a9 77       		.sleb128 -9
 3298 05aa 00       		.byte	0
 3299 05ab 0D       		.uleb128 0xd
 3300 05ac 67030000 		.4byte	.LASF67
 3301 05b0 01       		.byte	0x1
 3302 05b1 C409     		.2byte	0x9c4
 3303 05b3 00000000 		.4byte	.LFB24
 3304 05b7 28000000 		.4byte	.LFE24-.LFB24
 3305 05bb 01       		.uleb128 0x1
 3306 05bc 9C       		.byte	0x9c
 3307 05bd D1050000 		.4byte	0x5d1
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 112


 3308 05c1 0B       		.uleb128 0xb
 3309 05c2 F0020000 		.4byte	.LASF51
 3310 05c6 01       		.byte	0x1
 3311 05c7 C409     		.2byte	0x9c4
 3312 05c9 6B000000 		.4byte	0x6b
 3313 05cd 02       		.uleb128 0x2
 3314 05ce 91       		.byte	0x91
 3315 05cf 77       		.sleb128 -9
 3316 05d0 00       		.byte	0
 3317 05d1 0D       		.uleb128 0xd
 3318 05d2 33040000 		.4byte	.LASF68
 3319 05d6 01       		.byte	0x1
 3320 05d7 D309     		.2byte	0x9d3
 3321 05d9 00000000 		.4byte	.LFB25
 3322 05dd 14000000 		.4byte	.LFE25-.LFB25
 3323 05e1 01       		.uleb128 0x1
 3324 05e2 9C       		.byte	0x9c
 3325 05e3 F7050000 		.4byte	0x5f7
 3326 05e7 0B       		.uleb128 0xb
 3327 05e8 84040000 		.4byte	.LASF44
 3328 05ec 01       		.byte	0x1
 3329 05ed D309     		.2byte	0x9d3
 3330 05ef 6B000000 		.4byte	0x6b
 3331 05f3 02       		.uleb128 0x2
 3332 05f4 91       		.byte	0x91
 3333 05f5 77       		.sleb128 -9
 3334 05f6 00       		.byte	0
 3335 05f7 0F       		.uleb128 0xf
 3336 05f8 B9000000 		.4byte	.LASF69
 3337 05fc 01       		.byte	0x1
 3338 05fd EB09     		.2byte	0x9eb
 3339 05ff 00000000 		.4byte	.LFB26
 3340 0603 20000000 		.4byte	.LFE26-.LFB26
 3341 0607 01       		.uleb128 0x1
 3342 0608 9C       		.byte	0x9c
 3343 0609 0A       		.uleb128 0xa
 3344 060a 03050000 		.4byte	.LASF70
 3345 060e 01       		.byte	0x1
 3346 060f FF09     		.2byte	0x9ff
 3347 0611 00000000 		.4byte	.LFB27
 3348 0615 48000000 		.4byte	.LFE27-.LFB27
 3349 0619 01       		.uleb128 0x1
 3350 061a 9C       		.byte	0x9c
 3351 061b 2F060000 		.4byte	0x62f
 3352 061f 0B       		.uleb128 0xb
 3353 0620 17040000 		.4byte	.LASF71
 3354 0624 01       		.byte	0x1
 3355 0625 FF09     		.2byte	0x9ff
 3356 0627 83000000 		.4byte	0x83
 3357 062b 02       		.uleb128 0x2
 3358 062c 91       		.byte	0x91
 3359 062d 74       		.sleb128 -12
 3360 062e 00       		.byte	0
 3361 062f 0A       		.uleb128 0xa
 3362 0630 7A040000 		.4byte	.LASF72
 3363 0634 01       		.byte	0x1
 3364 0635 160A     		.2byte	0xa16
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 113


 3365 0637 00000000 		.4byte	.LFB28
 3366 063b 28000000 		.4byte	.LFE28-.LFB28
 3367 063f 01       		.uleb128 0x1
 3368 0640 9C       		.byte	0x9c
 3369 0641 55060000 		.4byte	0x655
 3370 0645 0B       		.uleb128 0xb
 3371 0646 29060000 		.4byte	.LASF73
 3372 064a 01       		.byte	0x1
 3373 064b 160A     		.2byte	0xa16
 3374 064d 77000000 		.4byte	0x77
 3375 0651 02       		.uleb128 0x2
 3376 0652 91       		.byte	0x91
 3377 0653 76       		.sleb128 -10
 3378 0654 00       		.byte	0
 3379 0655 0A       		.uleb128 0xa
 3380 0656 0F010000 		.4byte	.LASF74
 3381 065a 01       		.byte	0x1
 3382 065b 240A     		.2byte	0xa24
 3383 065d 00000000 		.4byte	.LFB29
 3384 0661 84000000 		.4byte	.LFE29-.LFB29
 3385 0665 01       		.uleb128 0x1
 3386 0666 9C       		.byte	0x9c
 3387 0667 7B060000 		.4byte	0x67b
 3388 066b 0B       		.uleb128 0xb
 3389 066c 0A010000 		.4byte	.LASF32
 3390 0670 01       		.byte	0x1
 3391 0671 240A     		.2byte	0xa24
 3392 0673 83000000 		.4byte	0x83
 3393 0677 02       		.uleb128 0x2
 3394 0678 91       		.byte	0x91
 3395 0679 74       		.sleb128 -12
 3396 067a 00       		.byte	0
 3397 067b 12       		.uleb128 0x12
 3398 067c 42030000 		.4byte	.LASF75
 3399 0680 01       		.byte	0x1
 3400 0681 440A     		.2byte	0xa44
 3401 0683 00000000 		.4byte	.LFB30
 3402 0687 24000000 		.4byte	.LFE30-.LFB30
 3403 068b 01       		.uleb128 0x1
 3404 068c 9C       		.byte	0x9c
 3405 068d 0A       		.uleb128 0xa
 3406 068e 19020000 		.4byte	.LASF76
 3407 0692 01       		.byte	0x1
 3408 0693 610A     		.2byte	0xa61
 3409 0695 00000000 		.4byte	.LFB31
 3410 0699 60000000 		.4byte	.LFE31-.LFB31
 3411 069d 01       		.uleb128 0x1
 3412 069e 9C       		.byte	0x9c
 3413 069f B1060000 		.4byte	0x6b1
 3414 06a3 13       		.uleb128 0x13
 3415 06a4 6900     		.ascii	"i\000"
 3416 06a6 01       		.byte	0x1
 3417 06a7 630A     		.2byte	0xa63
 3418 06a9 83000000 		.4byte	0x83
 3419 06ad 02       		.uleb128 0x2
 3420 06ae 91       		.byte	0x91
 3421 06af 74       		.sleb128 -12
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 114


 3422 06b0 00       		.byte	0
 3423 06b1 12       		.uleb128 0x12
 3424 06b2 9D040000 		.4byte	.LASF77
 3425 06b6 01       		.byte	0x1
 3426 06b7 800A     		.2byte	0xa80
 3427 06b9 00000000 		.4byte	.LFB32
 3428 06bd 1C000000 		.4byte	.LFE32-.LFB32
 3429 06c1 01       		.uleb128 0x1
 3430 06c2 9C       		.byte	0x9c
 3431 06c3 0F       		.uleb128 0xf
 3432 06c4 44050000 		.4byte	.LASF78
 3433 06c8 01       		.byte	0x1
 3434 06c9 910A     		.2byte	0xa91
 3435 06cb 00000000 		.4byte	.LFB33
 3436 06cf 18000000 		.4byte	.LFE33-.LFB33
 3437 06d3 01       		.uleb128 0x1
 3438 06d4 9C       		.byte	0x9c
 3439 06d5 0F       		.uleb128 0xf
 3440 06d6 C9000000 		.4byte	.LASF79
 3441 06da 01       		.byte	0x1
 3442 06db A10A     		.2byte	0xaa1
 3443 06dd 00000000 		.4byte	.LFB34
 3444 06e1 18000000 		.4byte	.LFE34-.LFB34
 3445 06e5 01       		.uleb128 0x1
 3446 06e6 9C       		.byte	0x9c
 3447 06e7 0F       		.uleb128 0xf
 3448 06e8 0B050000 		.4byte	.LASF80
 3449 06ec 01       		.byte	0x1
 3450 06ed B10A     		.2byte	0xab1
 3451 06ef 00000000 		.4byte	.LFB35
 3452 06f3 18000000 		.4byte	.LFE35-.LFB35
 3453 06f7 01       		.uleb128 0x1
 3454 06f8 9C       		.byte	0x9c
 3455 06f9 0D       		.uleb128 0xd
 3456 06fa 3D060000 		.4byte	.LASF81
 3457 06fe 01       		.byte	0x1
 3458 06ff C20A     		.2byte	0xac2
 3459 0701 00000000 		.4byte	.LFB36
 3460 0705 1C000000 		.4byte	.LFE36-.LFB36
 3461 0709 01       		.uleb128 0x1
 3462 070a 9C       		.byte	0x9c
 3463 070b 1F070000 		.4byte	0x71f
 3464 070f 0B       		.uleb128 0xb
 3465 0710 27020000 		.4byte	.LASF61
 3466 0714 01       		.byte	0x1
 3467 0715 C20A     		.2byte	0xac2
 3468 0717 83000000 		.4byte	0x83
 3469 071b 02       		.uleb128 0x2
 3470 071c 91       		.byte	0x91
 3471 071d 74       		.sleb128 -12
 3472 071e 00       		.byte	0
 3473 071f 10       		.uleb128 0x10
 3474 0720 2A010000 		.4byte	.LASF83
 3475 0724 01       		.byte	0x1
 3476 0725 D20A     		.2byte	0xad2
 3477 0727 83000000 		.4byte	0x83
 3478 072b 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 115


 3479 072f 18000000 		.4byte	.LFE37-.LFB37
 3480 0733 01       		.uleb128 0x1
 3481 0734 9C       		.byte	0x9c
 3482 0735 10       		.uleb128 0x10
 3483 0736 B0030000 		.4byte	.LASF84
 3484 073a 01       		.byte	0x1
 3485 073b E20A     		.2byte	0xae2
 3486 073d 83000000 		.4byte	0x83
 3487 0741 00000000 		.4byte	.LFB38
 3488 0745 18000000 		.4byte	.LFE38-.LFB38
 3489 0749 01       		.uleb128 0x1
 3490 074a 9C       		.byte	0x9c
 3491 074b 10       		.uleb128 0x10
 3492 074c 3B020000 		.4byte	.LASF85
 3493 0750 01       		.byte	0x1
 3494 0751 320B     		.2byte	0xb32
 3495 0753 83000000 		.4byte	0x83
 3496 0757 00000000 		.4byte	.LFB39
 3497 075b 18000000 		.4byte	.LFE39-.LFB39
 3498 075f 01       		.uleb128 0x1
 3499 0760 9C       		.byte	0x9c
 3500 0761 0F       		.uleb128 0xf
 3501 0762 5E020000 		.4byte	.LASF86
 3502 0766 01       		.byte	0x1
 3503 0767 3F0B     		.2byte	0xb3f
 3504 0769 00000000 		.4byte	.LFB40
 3505 076d 14000000 		.4byte	.LFE40-.LFB40
 3506 0771 01       		.uleb128 0x1
 3507 0772 9C       		.byte	0x9c
 3508 0773 11       		.uleb128 0x11
 3509 0774 C4040000 		.4byte	.LASF87
 3510 0778 01       		.byte	0x1
 3511 0779 620B     		.2byte	0xb62
 3512 077b E0000000 		.4byte	0xe0
 3513 077f 00000000 		.4byte	.LFB41
 3514 0783 2C000000 		.4byte	.LFE41-.LFB41
 3515 0787 01       		.uleb128 0x1
 3516 0788 9C       		.byte	0x9c
 3517 0789 BB070000 		.4byte	0x7bb
 3518 078d 0B       		.uleb128 0xb
 3519 078e F0020000 		.4byte	.LASF51
 3520 0792 01       		.byte	0x1
 3521 0793 620B     		.2byte	0xb62
 3522 0795 83000000 		.4byte	0x83
 3523 0799 02       		.uleb128 0x2
 3524 079a 91       		.byte	0x91
 3525 079b 6C       		.sleb128 -20
 3526 079c 0B       		.uleb128 0xb
 3527 079d 96030000 		.4byte	.LASF88
 3528 07a1 01       		.byte	0x1
 3529 07a2 620B     		.2byte	0xb62
 3530 07a4 E0000000 		.4byte	0xe0
 3531 07a8 02       		.uleb128 0x2
 3532 07a9 91       		.byte	0x91
 3533 07aa 68       		.sleb128 -24
 3534 07ab 0C       		.uleb128 0xc
 3535 07ac 5A000000 		.4byte	.LASF89
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 116


 3536 07b0 01       		.byte	0x1
 3537 07b1 640B     		.2byte	0xb64
 3538 07b3 E0000000 		.4byte	0xe0
 3539 07b7 02       		.uleb128 0x2
 3540 07b8 91       		.byte	0x91
 3541 07b9 74       		.sleb128 -12
 3542 07ba 00       		.byte	0
 3543 07bb 11       		.uleb128 0x11
 3544 07bc 53010000 		.4byte	.LASF90
 3545 07c0 01       		.byte	0x1
 3546 07c1 7A0B     		.2byte	0xb7a
 3547 07c3 E0000000 		.4byte	0xe0
 3548 07c7 00000000 		.4byte	.LFB42
 3549 07cb 1C000000 		.4byte	.LFE42-.LFB42
 3550 07cf 01       		.uleb128 0x1
 3551 07d0 9C       		.byte	0x9c
 3552 07d1 E5070000 		.4byte	0x7e5
 3553 07d5 0B       		.uleb128 0xb
 3554 07d6 F0020000 		.4byte	.LASF51
 3555 07da 01       		.byte	0x1
 3556 07db 7A0B     		.2byte	0xb7a
 3557 07dd 83000000 		.4byte	0x83
 3558 07e1 02       		.uleb128 0x2
 3559 07e2 91       		.byte	0x91
 3560 07e3 74       		.sleb128 -12
 3561 07e4 00       		.byte	0
 3562 07e5 14       		.uleb128 0x14
 3563 07e6 50060000 		.4byte	.LASF104
 3564 07ea 01       		.byte	0x1
 3565 07eb 870B     		.2byte	0xb87
 3566 07ed 00000000 		.4byte	.LFB43
 3567 07f1 44000000 		.4byte	.LFE43-.LFB43
 3568 07f5 01       		.uleb128 0x1
 3569 07f6 9C       		.byte	0x9c
 3570 07f7 09080000 		.4byte	0x809
 3571 07fb 13       		.uleb128 0x13
 3572 07fc 6900     		.ascii	"i\000"
 3573 07fe 01       		.byte	0x1
 3574 07ff 890B     		.2byte	0xb89
 3575 0801 83000000 		.4byte	0x83
 3576 0805 02       		.uleb128 0x2
 3577 0806 91       		.byte	0x91
 3578 0807 74       		.sleb128 -12
 3579 0808 00       		.byte	0
 3580 0809 0D       		.uleb128 0xd
 3581 080a 2D020000 		.4byte	.LASF91
 3582 080e 01       		.byte	0x1
 3583 080f A70B     		.2byte	0xba7
 3584 0811 00000000 		.4byte	.LFB44
 3585 0815 C0000000 		.4byte	.LFE44-.LFB44
 3586 0819 01       		.uleb128 0x1
 3587 081a 9C       		.byte	0x9c
 3588 081b 2F080000 		.4byte	0x82f
 3589 081f 0B       		.uleb128 0xb
 3590 0820 FA040000 		.4byte	.LASF92
 3591 0824 01       		.byte	0x1
 3592 0825 A70B     		.2byte	0xba7
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 117


 3593 0827 2F080000 		.4byte	0x82f
 3594 082b 02       		.uleb128 0x2
 3595 082c 91       		.byte	0x91
 3596 082d 74       		.sleb128 -12
 3597 082e 00       		.byte	0
 3598 082f 06       		.uleb128 0x6
 3599 0830 04       		.byte	0x4
 3600 0831 83000000 		.4byte	0x83
 3601 0835 15       		.uleb128 0x15
 3602 0836 E0000000 		.4byte	0xe0
 3603 083a 45080000 		.4byte	0x845
 3604 083e 16       		.uleb128 0x16
 3605 083f D9000000 		.4byte	0xd9
 3606 0843 04       		.byte	0x4
 3607 0844 00       		.byte	0
 3608 0845 17       		.uleb128 0x17
 3609 0846 D9040000 		.4byte	.LASF93
 3610 084a 01       		.byte	0x1
 3611 084b 22       		.byte	0x22
 3612 084c 35080000 		.4byte	0x835
 3613 0850 05       		.uleb128 0x5
 3614 0851 03       		.byte	0x3
 3615 0852 00000000 		.4byte	CySysTickCallbacks
 3616 0856 18       		.uleb128 0x18
 3617 0857 C2030000 		.4byte	.LASF94
 3618 085b 01       		.byte	0x1
 3619 085c 1B       		.byte	0x1b
 3620 085d 83000000 		.4byte	0x83
 3621 0861 05       		.uleb128 0x5
 3622 0862 03       		.byte	0x3
 3623 0863 00000000 		.4byte	cydelayFreqHz
 3624 0867 18       		.uleb128 0x18
 3625 0868 9D010000 		.4byte	.LASF95
 3626 086c 01       		.byte	0x1
 3627 086d 1C       		.byte	0x1c
 3628 086e 83000000 		.4byte	0x83
 3629 0872 05       		.uleb128 0x5
 3630 0873 03       		.byte	0x3
 3631 0874 00000000 		.4byte	cydelayFreqKhz
 3632 0878 18       		.uleb128 0x18
 3633 0879 35050000 		.4byte	.LASF96
 3634 087d 01       		.byte	0x1
 3635 087e 1D       		.byte	0x1d
 3636 087f 6B000000 		.4byte	0x6b
 3637 0883 05       		.uleb128 0x5
 3638 0884 03       		.byte	0x3
 3639 0885 00000000 		.4byte	cydelayFreqMhz
 3640 0889 18       		.uleb128 0x18
 3641 088a 0C020000 		.4byte	.LASF97
 3642 088e 01       		.byte	0x1
 3643 088f 1E       		.byte	0x1e
 3644 0890 83000000 		.4byte	0x83
 3645 0894 05       		.uleb128 0x5
 3646 0895 03       		.byte	0x3
 3647 0896 00000000 		.4byte	cydelay32kMs
 3648 089a 18       		.uleb128 0x18
 3649 089b 9B000000 		.4byte	.LASF98
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 118


 3650 089f 01       		.byte	0x1
 3651 08a0 36       		.byte	0x36
 3652 08a1 83000000 		.4byte	0x83
 3653 08a5 05       		.uleb128 0x5
 3654 08a6 03       		.byte	0x3
 3655 08a7 00000000 		.4byte	CySysTickInitVar
 3656 08ab 15       		.uleb128 0x15
 3657 08ac 6B000000 		.4byte	0x6b
 3658 08b0 BB080000 		.4byte	0x8bb
 3659 08b4 16       		.uleb128 0x16
 3660 08b5 D9000000 		.4byte	0xd9
 3661 08b9 2D       		.byte	0x2d
 3662 08ba 00       		.byte	0
 3663 08bb 18       		.uleb128 0x18
 3664 08bc 9F030000 		.4byte	.LASF99
 3665 08c0 01       		.byte	0x1
 3666 08c1 3B       		.byte	0x3b
 3667 08c2 CC080000 		.4byte	0x8cc
 3668 08c6 05       		.uleb128 0x5
 3669 08c7 03       		.byte	0x3
 3670 08c8 00000000 		.4byte	cyImoFreqMhz2Reg
 3671 08cc 19       		.uleb128 0x19
 3672 08cd AB080000 		.4byte	0x8ab
 3673 08d1 18       		.uleb128 0x18
 3674 08d2 40000000 		.4byte	.LASF100
 3675 08d6 01       		.byte	0x1
 3676 08d7 5B       		.byte	0x5b
 3677 08d8 83000000 		.4byte	0x83
 3678 08dc 05       		.uleb128 0x5
 3679 08dd 03       		.byte	0x3
 3680 08de 00000000 		.4byte	CySysClkPumpConfig
 3681 08e2 00       		.byte	0
 3682              		.section	.debug_abbrev,"",%progbits
 3683              	.Ldebug_abbrev0:
 3684 0000 01       		.uleb128 0x1
 3685 0001 11       		.uleb128 0x11
 3686 0002 01       		.byte	0x1
 3687 0003 25       		.uleb128 0x25
 3688 0004 0E       		.uleb128 0xe
 3689 0005 13       		.uleb128 0x13
 3690 0006 0B       		.uleb128 0xb
 3691 0007 03       		.uleb128 0x3
 3692 0008 0E       		.uleb128 0xe
 3693 0009 1B       		.uleb128 0x1b
 3694 000a 0E       		.uleb128 0xe
 3695 000b 55       		.uleb128 0x55
 3696 000c 17       		.uleb128 0x17
 3697 000d 11       		.uleb128 0x11
 3698 000e 01       		.uleb128 0x1
 3699 000f 10       		.uleb128 0x10
 3700 0010 17       		.uleb128 0x17
 3701 0011 00       		.byte	0
 3702 0012 00       		.byte	0
 3703 0013 02       		.uleb128 0x2
 3704 0014 24       		.uleb128 0x24
 3705 0015 00       		.byte	0
 3706 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 119


 3707 0017 0B       		.uleb128 0xb
 3708 0018 3E       		.uleb128 0x3e
 3709 0019 0B       		.uleb128 0xb
 3710 001a 03       		.uleb128 0x3
 3711 001b 0E       		.uleb128 0xe
 3712 001c 00       		.byte	0
 3713 001d 00       		.byte	0
 3714 001e 03       		.uleb128 0x3
 3715 001f 24       		.uleb128 0x24
 3716 0020 00       		.byte	0
 3717 0021 0B       		.uleb128 0xb
 3718 0022 0B       		.uleb128 0xb
 3719 0023 3E       		.uleb128 0x3e
 3720 0024 0B       		.uleb128 0xb
 3721 0025 03       		.uleb128 0x3
 3722 0026 08       		.uleb128 0x8
 3723 0027 00       		.byte	0
 3724 0028 00       		.byte	0
 3725 0029 04       		.uleb128 0x4
 3726 002a 16       		.uleb128 0x16
 3727 002b 00       		.byte	0
 3728 002c 03       		.uleb128 0x3
 3729 002d 0E       		.uleb128 0xe
 3730 002e 3A       		.uleb128 0x3a
 3731 002f 0B       		.uleb128 0xb
 3732 0030 3B       		.uleb128 0x3b
 3733 0031 05       		.uleb128 0x5
 3734 0032 49       		.uleb128 0x49
 3735 0033 13       		.uleb128 0x13
 3736 0034 00       		.byte	0
 3737 0035 00       		.byte	0
 3738 0036 05       		.uleb128 0x5
 3739 0037 35       		.uleb128 0x35
 3740 0038 00       		.byte	0
 3741 0039 49       		.uleb128 0x49
 3742 003a 13       		.uleb128 0x13
 3743 003b 00       		.byte	0
 3744 003c 00       		.byte	0
 3745 003d 06       		.uleb128 0x6
 3746 003e 0F       		.uleb128 0xf
 3747 003f 00       		.byte	0
 3748 0040 0B       		.uleb128 0xb
 3749 0041 0B       		.uleb128 0xb
 3750 0042 49       		.uleb128 0x49
 3751 0043 13       		.uleb128 0x13
 3752 0044 00       		.byte	0
 3753 0045 00       		.byte	0
 3754 0046 07       		.uleb128 0x7
 3755 0047 15       		.uleb128 0x15
 3756 0048 00       		.byte	0
 3757 0049 27       		.uleb128 0x27
 3758 004a 19       		.uleb128 0x19
 3759 004b 00       		.byte	0
 3760 004c 00       		.byte	0
 3761 004d 08       		.uleb128 0x8
 3762 004e 16       		.uleb128 0x16
 3763 004f 00       		.byte	0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 120


 3764 0050 03       		.uleb128 0x3
 3765 0051 0E       		.uleb128 0xe
 3766 0052 3A       		.uleb128 0x3a
 3767 0053 0B       		.uleb128 0xb
 3768 0054 3B       		.uleb128 0x3b
 3769 0055 0B       		.uleb128 0xb
 3770 0056 49       		.uleb128 0x49
 3771 0057 13       		.uleb128 0x13
 3772 0058 00       		.byte	0
 3773 0059 00       		.byte	0
 3774 005a 09       		.uleb128 0x9
 3775 005b 2E       		.uleb128 0x2e
 3776 005c 00       		.byte	0
 3777 005d 3F       		.uleb128 0x3f
 3778 005e 19       		.uleb128 0x19
 3779 005f 03       		.uleb128 0x3
 3780 0060 0E       		.uleb128 0xe
 3781 0061 3A       		.uleb128 0x3a
 3782 0062 0B       		.uleb128 0xb
 3783 0063 3B       		.uleb128 0x3b
 3784 0064 0B       		.uleb128 0xb
 3785 0065 27       		.uleb128 0x27
 3786 0066 19       		.uleb128 0x19
 3787 0067 11       		.uleb128 0x11
 3788 0068 01       		.uleb128 0x1
 3789 0069 12       		.uleb128 0x12
 3790 006a 06       		.uleb128 0x6
 3791 006b 40       		.uleb128 0x40
 3792 006c 18       		.uleb128 0x18
 3793 006d 9742     		.uleb128 0x2117
 3794 006f 19       		.uleb128 0x19
 3795 0070 00       		.byte	0
 3796 0071 00       		.byte	0
 3797 0072 0A       		.uleb128 0xa
 3798 0073 2E       		.uleb128 0x2e
 3799 0074 01       		.byte	0x1
 3800 0075 3F       		.uleb128 0x3f
 3801 0076 19       		.uleb128 0x19
 3802 0077 03       		.uleb128 0x3
 3803 0078 0E       		.uleb128 0xe
 3804 0079 3A       		.uleb128 0x3a
 3805 007a 0B       		.uleb128 0xb
 3806 007b 3B       		.uleb128 0x3b
 3807 007c 05       		.uleb128 0x5
 3808 007d 27       		.uleb128 0x27
 3809 007e 19       		.uleb128 0x19
 3810 007f 11       		.uleb128 0x11
 3811 0080 01       		.uleb128 0x1
 3812 0081 12       		.uleb128 0x12
 3813 0082 06       		.uleb128 0x6
 3814 0083 40       		.uleb128 0x40
 3815 0084 18       		.uleb128 0x18
 3816 0085 9642     		.uleb128 0x2116
 3817 0087 19       		.uleb128 0x19
 3818 0088 01       		.uleb128 0x1
 3819 0089 13       		.uleb128 0x13
 3820 008a 00       		.byte	0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 121


 3821 008b 00       		.byte	0
 3822 008c 0B       		.uleb128 0xb
 3823 008d 05       		.uleb128 0x5
 3824 008e 00       		.byte	0
 3825 008f 03       		.uleb128 0x3
 3826 0090 0E       		.uleb128 0xe
 3827 0091 3A       		.uleb128 0x3a
 3828 0092 0B       		.uleb128 0xb
 3829 0093 3B       		.uleb128 0x3b
 3830 0094 05       		.uleb128 0x5
 3831 0095 49       		.uleb128 0x49
 3832 0096 13       		.uleb128 0x13
 3833 0097 02       		.uleb128 0x2
 3834 0098 18       		.uleb128 0x18
 3835 0099 00       		.byte	0
 3836 009a 00       		.byte	0
 3837 009b 0C       		.uleb128 0xc
 3838 009c 34       		.uleb128 0x34
 3839 009d 00       		.byte	0
 3840 009e 03       		.uleb128 0x3
 3841 009f 0E       		.uleb128 0xe
 3842 00a0 3A       		.uleb128 0x3a
 3843 00a1 0B       		.uleb128 0xb
 3844 00a2 3B       		.uleb128 0x3b
 3845 00a3 05       		.uleb128 0x5
 3846 00a4 49       		.uleb128 0x49
 3847 00a5 13       		.uleb128 0x13
 3848 00a6 02       		.uleb128 0x2
 3849 00a7 18       		.uleb128 0x18
 3850 00a8 00       		.byte	0
 3851 00a9 00       		.byte	0
 3852 00aa 0D       		.uleb128 0xd
 3853 00ab 2E       		.uleb128 0x2e
 3854 00ac 01       		.byte	0x1
 3855 00ad 3F       		.uleb128 0x3f
 3856 00ae 19       		.uleb128 0x19
 3857 00af 03       		.uleb128 0x3
 3858 00b0 0E       		.uleb128 0xe
 3859 00b1 3A       		.uleb128 0x3a
 3860 00b2 0B       		.uleb128 0xb
 3861 00b3 3B       		.uleb128 0x3b
 3862 00b4 05       		.uleb128 0x5
 3863 00b5 27       		.uleb128 0x27
 3864 00b6 19       		.uleb128 0x19
 3865 00b7 11       		.uleb128 0x11
 3866 00b8 01       		.uleb128 0x1
 3867 00b9 12       		.uleb128 0x12
 3868 00ba 06       		.uleb128 0x6
 3869 00bb 40       		.uleb128 0x40
 3870 00bc 18       		.uleb128 0x18
 3871 00bd 9742     		.uleb128 0x2117
 3872 00bf 19       		.uleb128 0x19
 3873 00c0 01       		.uleb128 0x1
 3874 00c1 13       		.uleb128 0x13
 3875 00c2 00       		.byte	0
 3876 00c3 00       		.byte	0
 3877 00c4 0E       		.uleb128 0xe
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 122


 3878 00c5 2E       		.uleb128 0x2e
 3879 00c6 01       		.byte	0x1
 3880 00c7 3F       		.uleb128 0x3f
 3881 00c8 19       		.uleb128 0x19
 3882 00c9 03       		.uleb128 0x3
 3883 00ca 0E       		.uleb128 0xe
 3884 00cb 3A       		.uleb128 0x3a
 3885 00cc 0B       		.uleb128 0xb
 3886 00cd 3B       		.uleb128 0x3b
 3887 00ce 05       		.uleb128 0x5
 3888 00cf 27       		.uleb128 0x27
 3889 00d0 19       		.uleb128 0x19
 3890 00d1 49       		.uleb128 0x49
 3891 00d2 13       		.uleb128 0x13
 3892 00d3 11       		.uleb128 0x11
 3893 00d4 01       		.uleb128 0x1
 3894 00d5 12       		.uleb128 0x12
 3895 00d6 06       		.uleb128 0x6
 3896 00d7 40       		.uleb128 0x40
 3897 00d8 18       		.uleb128 0x18
 3898 00d9 9642     		.uleb128 0x2116
 3899 00db 19       		.uleb128 0x19
 3900 00dc 01       		.uleb128 0x1
 3901 00dd 13       		.uleb128 0x13
 3902 00de 00       		.byte	0
 3903 00df 00       		.byte	0
 3904 00e0 0F       		.uleb128 0xf
 3905 00e1 2E       		.uleb128 0x2e
 3906 00e2 00       		.byte	0
 3907 00e3 3F       		.uleb128 0x3f
 3908 00e4 19       		.uleb128 0x19
 3909 00e5 03       		.uleb128 0x3
 3910 00e6 0E       		.uleb128 0xe
 3911 00e7 3A       		.uleb128 0x3a
 3912 00e8 0B       		.uleb128 0xb
 3913 00e9 3B       		.uleb128 0x3b
 3914 00ea 05       		.uleb128 0x5
 3915 00eb 27       		.uleb128 0x27
 3916 00ec 19       		.uleb128 0x19
 3917 00ed 11       		.uleb128 0x11
 3918 00ee 01       		.uleb128 0x1
 3919 00ef 12       		.uleb128 0x12
 3920 00f0 06       		.uleb128 0x6
 3921 00f1 40       		.uleb128 0x40
 3922 00f2 18       		.uleb128 0x18
 3923 00f3 9742     		.uleb128 0x2117
 3924 00f5 19       		.uleb128 0x19
 3925 00f6 00       		.byte	0
 3926 00f7 00       		.byte	0
 3927 00f8 10       		.uleb128 0x10
 3928 00f9 2E       		.uleb128 0x2e
 3929 00fa 00       		.byte	0
 3930 00fb 3F       		.uleb128 0x3f
 3931 00fc 19       		.uleb128 0x19
 3932 00fd 03       		.uleb128 0x3
 3933 00fe 0E       		.uleb128 0xe
 3934 00ff 3A       		.uleb128 0x3a
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 123


 3935 0100 0B       		.uleb128 0xb
 3936 0101 3B       		.uleb128 0x3b
 3937 0102 05       		.uleb128 0x5
 3938 0103 27       		.uleb128 0x27
 3939 0104 19       		.uleb128 0x19
 3940 0105 49       		.uleb128 0x49
 3941 0106 13       		.uleb128 0x13
 3942 0107 11       		.uleb128 0x11
 3943 0108 01       		.uleb128 0x1
 3944 0109 12       		.uleb128 0x12
 3945 010a 06       		.uleb128 0x6
 3946 010b 40       		.uleb128 0x40
 3947 010c 18       		.uleb128 0x18
 3948 010d 9742     		.uleb128 0x2117
 3949 010f 19       		.uleb128 0x19
 3950 0110 00       		.byte	0
 3951 0111 00       		.byte	0
 3952 0112 11       		.uleb128 0x11
 3953 0113 2E       		.uleb128 0x2e
 3954 0114 01       		.byte	0x1
 3955 0115 3F       		.uleb128 0x3f
 3956 0116 19       		.uleb128 0x19
 3957 0117 03       		.uleb128 0x3
 3958 0118 0E       		.uleb128 0xe
 3959 0119 3A       		.uleb128 0x3a
 3960 011a 0B       		.uleb128 0xb
 3961 011b 3B       		.uleb128 0x3b
 3962 011c 05       		.uleb128 0x5
 3963 011d 27       		.uleb128 0x27
 3964 011e 19       		.uleb128 0x19
 3965 011f 49       		.uleb128 0x49
 3966 0120 13       		.uleb128 0x13
 3967 0121 11       		.uleb128 0x11
 3968 0122 01       		.uleb128 0x1
 3969 0123 12       		.uleb128 0x12
 3970 0124 06       		.uleb128 0x6
 3971 0125 40       		.uleb128 0x40
 3972 0126 18       		.uleb128 0x18
 3973 0127 9742     		.uleb128 0x2117
 3974 0129 19       		.uleb128 0x19
 3975 012a 01       		.uleb128 0x1
 3976 012b 13       		.uleb128 0x13
 3977 012c 00       		.byte	0
 3978 012d 00       		.byte	0
 3979 012e 12       		.uleb128 0x12
 3980 012f 2E       		.uleb128 0x2e
 3981 0130 00       		.byte	0
 3982 0131 3F       		.uleb128 0x3f
 3983 0132 19       		.uleb128 0x19
 3984 0133 03       		.uleb128 0x3
 3985 0134 0E       		.uleb128 0xe
 3986 0135 3A       		.uleb128 0x3a
 3987 0136 0B       		.uleb128 0xb
 3988 0137 3B       		.uleb128 0x3b
 3989 0138 05       		.uleb128 0x5
 3990 0139 27       		.uleb128 0x27
 3991 013a 19       		.uleb128 0x19
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 124


 3992 013b 11       		.uleb128 0x11
 3993 013c 01       		.uleb128 0x1
 3994 013d 12       		.uleb128 0x12
 3995 013e 06       		.uleb128 0x6
 3996 013f 40       		.uleb128 0x40
 3997 0140 18       		.uleb128 0x18
 3998 0141 9642     		.uleb128 0x2116
 3999 0143 19       		.uleb128 0x19
 4000 0144 00       		.byte	0
 4001 0145 00       		.byte	0
 4002 0146 13       		.uleb128 0x13
 4003 0147 34       		.uleb128 0x34
 4004 0148 00       		.byte	0
 4005 0149 03       		.uleb128 0x3
 4006 014a 08       		.uleb128 0x8
 4007 014b 3A       		.uleb128 0x3a
 4008 014c 0B       		.uleb128 0xb
 4009 014d 3B       		.uleb128 0x3b
 4010 014e 05       		.uleb128 0x5
 4011 014f 49       		.uleb128 0x49
 4012 0150 13       		.uleb128 0x13
 4013 0151 02       		.uleb128 0x2
 4014 0152 18       		.uleb128 0x18
 4015 0153 00       		.byte	0
 4016 0154 00       		.byte	0
 4017 0155 14       		.uleb128 0x14
 4018 0156 2E       		.uleb128 0x2e
 4019 0157 01       		.byte	0x1
 4020 0158 03       		.uleb128 0x3
 4021 0159 0E       		.uleb128 0xe
 4022 015a 3A       		.uleb128 0x3a
 4023 015b 0B       		.uleb128 0xb
 4024 015c 3B       		.uleb128 0x3b
 4025 015d 05       		.uleb128 0x5
 4026 015e 27       		.uleb128 0x27
 4027 015f 19       		.uleb128 0x19
 4028 0160 11       		.uleb128 0x11
 4029 0161 01       		.uleb128 0x1
 4030 0162 12       		.uleb128 0x12
 4031 0163 06       		.uleb128 0x6
 4032 0164 40       		.uleb128 0x40
 4033 0165 18       		.uleb128 0x18
 4034 0166 9642     		.uleb128 0x2116
 4035 0168 19       		.uleb128 0x19
 4036 0169 01       		.uleb128 0x1
 4037 016a 13       		.uleb128 0x13
 4038 016b 00       		.byte	0
 4039 016c 00       		.byte	0
 4040 016d 15       		.uleb128 0x15
 4041 016e 01       		.uleb128 0x1
 4042 016f 01       		.byte	0x1
 4043 0170 49       		.uleb128 0x49
 4044 0171 13       		.uleb128 0x13
 4045 0172 01       		.uleb128 0x1
 4046 0173 13       		.uleb128 0x13
 4047 0174 00       		.byte	0
 4048 0175 00       		.byte	0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 125


 4049 0176 16       		.uleb128 0x16
 4050 0177 21       		.uleb128 0x21
 4051 0178 00       		.byte	0
 4052 0179 49       		.uleb128 0x49
 4053 017a 13       		.uleb128 0x13
 4054 017b 2F       		.uleb128 0x2f
 4055 017c 0B       		.uleb128 0xb
 4056 017d 00       		.byte	0
 4057 017e 00       		.byte	0
 4058 017f 17       		.uleb128 0x17
 4059 0180 34       		.uleb128 0x34
 4060 0181 00       		.byte	0
 4061 0182 03       		.uleb128 0x3
 4062 0183 0E       		.uleb128 0xe
 4063 0184 3A       		.uleb128 0x3a
 4064 0185 0B       		.uleb128 0xb
 4065 0186 3B       		.uleb128 0x3b
 4066 0187 0B       		.uleb128 0xb
 4067 0188 49       		.uleb128 0x49
 4068 0189 13       		.uleb128 0x13
 4069 018a 02       		.uleb128 0x2
 4070 018b 18       		.uleb128 0x18
 4071 018c 00       		.byte	0
 4072 018d 00       		.byte	0
 4073 018e 18       		.uleb128 0x18
 4074 018f 34       		.uleb128 0x34
 4075 0190 00       		.byte	0
 4076 0191 03       		.uleb128 0x3
 4077 0192 0E       		.uleb128 0xe
 4078 0193 3A       		.uleb128 0x3a
 4079 0194 0B       		.uleb128 0xb
 4080 0195 3B       		.uleb128 0x3b
 4081 0196 0B       		.uleb128 0xb
 4082 0197 49       		.uleb128 0x49
 4083 0198 13       		.uleb128 0x13
 4084 0199 3F       		.uleb128 0x3f
 4085 019a 19       		.uleb128 0x19
 4086 019b 02       		.uleb128 0x2
 4087 019c 18       		.uleb128 0x18
 4088 019d 00       		.byte	0
 4089 019e 00       		.byte	0
 4090 019f 19       		.uleb128 0x19
 4091 01a0 26       		.uleb128 0x26
 4092 01a1 00       		.byte	0
 4093 01a2 49       		.uleb128 0x49
 4094 01a3 13       		.uleb128 0x13
 4095 01a4 00       		.byte	0
 4096 01a5 00       		.byte	0
 4097 01a6 00       		.byte	0
 4098              		.section	.debug_aranges,"",%progbits
 4099 0000 7C010000 		.4byte	0x17c
 4100 0004 0200     		.2byte	0x2
 4101 0006 00000000 		.4byte	.Ldebug_info0
 4102 000a 04       		.byte	0x4
 4103 000b 00       		.byte	0
 4104 000c 0000     		.2byte	0
 4105 000e 0000     		.2byte	0
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 126


 4106 0010 00000000 		.4byte	.LFB0
 4107 0014 1C000000 		.4byte	.LFE0-.LFB0
 4108 0018 00000000 		.4byte	.LFB1
 4109 001c 18000000 		.4byte	.LFE1-.LFB1
 4110 0020 00000000 		.4byte	.LFB2
 4111 0024 48000000 		.4byte	.LFE2-.LFB2
 4112 0028 00000000 		.4byte	.LFB3
 4113 002c 50000000 		.4byte	.LFE3-.LFB3
 4114 0030 00000000 		.4byte	.LFB4
 4115 0034 34000000 		.4byte	.LFE4-.LFB4
 4116 0038 00000000 		.4byte	.LFB5
 4117 003c 44000000 		.4byte	.LFE5-.LFB5
 4118 0040 00000000 		.4byte	.LFB6
 4119 0044 EC010000 		.4byte	.LFE6-.LFB6
 4120 0048 00000000 		.4byte	.LFB7
 4121 004c 60000000 		.4byte	.LFE7-.LFB7
 4122 0050 00000000 		.4byte	.LFB8
 4123 0054 28000000 		.4byte	.LFE8-.LFB8
 4124 0058 00000000 		.4byte	.LFB9
 4125 005c 18000000 		.4byte	.LFE9-.LFB9
 4126 0060 00000000 		.4byte	.LFB10
 4127 0064 14000000 		.4byte	.LFE10-.LFB10
 4128 0068 00000000 		.4byte	.LFB11
 4129 006c 30000000 		.4byte	.LFE11-.LFB11
 4130 0070 00000000 		.4byte	.LFB12
 4131 0074 24000000 		.4byte	.LFE12-.LFB12
 4132 0078 00000000 		.4byte	.LFB13
 4133 007c 18000000 		.4byte	.LFE13-.LFB13
 4134 0080 00000000 		.4byte	.LFB14
 4135 0084 48000000 		.4byte	.LFE14-.LFB14
 4136 0088 00000000 		.4byte	.LFB15
 4137 008c 34000000 		.4byte	.LFE15-.LFB15
 4138 0090 00000000 		.4byte	.LFB16
 4139 0094 4C000000 		.4byte	.LFE16-.LFB16
 4140 0098 00000000 		.4byte	.LFB17
 4141 009c 36000000 		.4byte	.LFE17-.LFB17
 4142 00a0 00000000 		.4byte	.LFB18
 4143 00a4 A8000000 		.4byte	.LFE18-.LFB18
 4144 00a8 00000000 		.4byte	.LFB19
 4145 00ac 5C000000 		.4byte	.LFE19-.LFB19
 4146 00b0 00000000 		.4byte	.LFB20
 4147 00b4 28000000 		.4byte	.LFE20-.LFB20
 4148 00b8 00000000 		.4byte	.LFB21
 4149 00bc 30000000 		.4byte	.LFE21-.LFB21
 4150 00c0 00000000 		.4byte	.LFB22
 4151 00c4 28000000 		.4byte	.LFE22-.LFB22
 4152 00c8 00000000 		.4byte	.LFB23
 4153 00cc 28000000 		.4byte	.LFE23-.LFB23
 4154 00d0 00000000 		.4byte	.LFB24
 4155 00d4 28000000 		.4byte	.LFE24-.LFB24
 4156 00d8 00000000 		.4byte	.LFB25
 4157 00dc 14000000 		.4byte	.LFE25-.LFB25
 4158 00e0 00000000 		.4byte	.LFB26
 4159 00e4 20000000 		.4byte	.LFE26-.LFB26
 4160 00e8 00000000 		.4byte	.LFB27
 4161 00ec 48000000 		.4byte	.LFE27-.LFB27
 4162 00f0 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 127


 4163 00f4 28000000 		.4byte	.LFE28-.LFB28
 4164 00f8 00000000 		.4byte	.LFB29
 4165 00fc 84000000 		.4byte	.LFE29-.LFB29
 4166 0100 00000000 		.4byte	.LFB30
 4167 0104 24000000 		.4byte	.LFE30-.LFB30
 4168 0108 00000000 		.4byte	.LFB31
 4169 010c 60000000 		.4byte	.LFE31-.LFB31
 4170 0110 00000000 		.4byte	.LFB32
 4171 0114 1C000000 		.4byte	.LFE32-.LFB32
 4172 0118 00000000 		.4byte	.LFB33
 4173 011c 18000000 		.4byte	.LFE33-.LFB33
 4174 0120 00000000 		.4byte	.LFB34
 4175 0124 18000000 		.4byte	.LFE34-.LFB34
 4176 0128 00000000 		.4byte	.LFB35
 4177 012c 18000000 		.4byte	.LFE35-.LFB35
 4178 0130 00000000 		.4byte	.LFB36
 4179 0134 1C000000 		.4byte	.LFE36-.LFB36
 4180 0138 00000000 		.4byte	.LFB37
 4181 013c 18000000 		.4byte	.LFE37-.LFB37
 4182 0140 00000000 		.4byte	.LFB38
 4183 0144 18000000 		.4byte	.LFE38-.LFB38
 4184 0148 00000000 		.4byte	.LFB39
 4185 014c 18000000 		.4byte	.LFE39-.LFB39
 4186 0150 00000000 		.4byte	.LFB40
 4187 0154 14000000 		.4byte	.LFE40-.LFB40
 4188 0158 00000000 		.4byte	.LFB41
 4189 015c 2C000000 		.4byte	.LFE41-.LFB41
 4190 0160 00000000 		.4byte	.LFB42
 4191 0164 1C000000 		.4byte	.LFE42-.LFB42
 4192 0168 00000000 		.4byte	.LFB43
 4193 016c 44000000 		.4byte	.LFE43-.LFB43
 4194 0170 00000000 		.4byte	.LFB44
 4195 0174 C0000000 		.4byte	.LFE44-.LFB44
 4196 0178 00000000 		.4byte	0
 4197 017c 00000000 		.4byte	0
 4198              		.section	.debug_ranges,"",%progbits
 4199              	.Ldebug_ranges0:
 4200 0000 00000000 		.4byte	.LFB0
 4201 0004 1C000000 		.4byte	.LFE0
 4202 0008 00000000 		.4byte	.LFB1
 4203 000c 18000000 		.4byte	.LFE1
 4204 0010 00000000 		.4byte	.LFB2
 4205 0014 48000000 		.4byte	.LFE2
 4206 0018 00000000 		.4byte	.LFB3
 4207 001c 50000000 		.4byte	.LFE3
 4208 0020 00000000 		.4byte	.LFB4
 4209 0024 34000000 		.4byte	.LFE4
 4210 0028 00000000 		.4byte	.LFB5
 4211 002c 44000000 		.4byte	.LFE5
 4212 0030 00000000 		.4byte	.LFB6
 4213 0034 EC010000 		.4byte	.LFE6
 4214 0038 00000000 		.4byte	.LFB7
 4215 003c 60000000 		.4byte	.LFE7
 4216 0040 00000000 		.4byte	.LFB8
 4217 0044 28000000 		.4byte	.LFE8
 4218 0048 00000000 		.4byte	.LFB9
 4219 004c 18000000 		.4byte	.LFE9
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 128


 4220 0050 00000000 		.4byte	.LFB10
 4221 0054 14000000 		.4byte	.LFE10
 4222 0058 00000000 		.4byte	.LFB11
 4223 005c 30000000 		.4byte	.LFE11
 4224 0060 00000000 		.4byte	.LFB12
 4225 0064 24000000 		.4byte	.LFE12
 4226 0068 00000000 		.4byte	.LFB13
 4227 006c 18000000 		.4byte	.LFE13
 4228 0070 00000000 		.4byte	.LFB14
 4229 0074 48000000 		.4byte	.LFE14
 4230 0078 00000000 		.4byte	.LFB15
 4231 007c 34000000 		.4byte	.LFE15
 4232 0080 00000000 		.4byte	.LFB16
 4233 0084 4C000000 		.4byte	.LFE16
 4234 0088 00000000 		.4byte	.LFB17
 4235 008c 36000000 		.4byte	.LFE17
 4236 0090 00000000 		.4byte	.LFB18
 4237 0094 A8000000 		.4byte	.LFE18
 4238 0098 00000000 		.4byte	.LFB19
 4239 009c 5C000000 		.4byte	.LFE19
 4240 00a0 00000000 		.4byte	.LFB20
 4241 00a4 28000000 		.4byte	.LFE20
 4242 00a8 00000000 		.4byte	.LFB21
 4243 00ac 30000000 		.4byte	.LFE21
 4244 00b0 00000000 		.4byte	.LFB22
 4245 00b4 28000000 		.4byte	.LFE22
 4246 00b8 00000000 		.4byte	.LFB23
 4247 00bc 28000000 		.4byte	.LFE23
 4248 00c0 00000000 		.4byte	.LFB24
 4249 00c4 28000000 		.4byte	.LFE24
 4250 00c8 00000000 		.4byte	.LFB25
 4251 00cc 14000000 		.4byte	.LFE25
 4252 00d0 00000000 		.4byte	.LFB26
 4253 00d4 20000000 		.4byte	.LFE26
 4254 00d8 00000000 		.4byte	.LFB27
 4255 00dc 48000000 		.4byte	.LFE27
 4256 00e0 00000000 		.4byte	.LFB28
 4257 00e4 28000000 		.4byte	.LFE28
 4258 00e8 00000000 		.4byte	.LFB29
 4259 00ec 84000000 		.4byte	.LFE29
 4260 00f0 00000000 		.4byte	.LFB30
 4261 00f4 24000000 		.4byte	.LFE30
 4262 00f8 00000000 		.4byte	.LFB31
 4263 00fc 60000000 		.4byte	.LFE31
 4264 0100 00000000 		.4byte	.LFB32
 4265 0104 1C000000 		.4byte	.LFE32
 4266 0108 00000000 		.4byte	.LFB33
 4267 010c 18000000 		.4byte	.LFE33
 4268 0110 00000000 		.4byte	.LFB34
 4269 0114 18000000 		.4byte	.LFE34
 4270 0118 00000000 		.4byte	.LFB35
 4271 011c 18000000 		.4byte	.LFE35
 4272 0120 00000000 		.4byte	.LFB36
 4273 0124 1C000000 		.4byte	.LFE36
 4274 0128 00000000 		.4byte	.LFB37
 4275 012c 18000000 		.4byte	.LFE37
 4276 0130 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 129


 4277 0134 18000000 		.4byte	.LFE38
 4278 0138 00000000 		.4byte	.LFB39
 4279 013c 18000000 		.4byte	.LFE39
 4280 0140 00000000 		.4byte	.LFB40
 4281 0144 14000000 		.4byte	.LFE40
 4282 0148 00000000 		.4byte	.LFB41
 4283 014c 2C000000 		.4byte	.LFE41
 4284 0150 00000000 		.4byte	.LFB42
 4285 0154 1C000000 		.4byte	.LFE42
 4286 0158 00000000 		.4byte	.LFB43
 4287 015c 44000000 		.4byte	.LFE43
 4288 0160 00000000 		.4byte	.LFB44
 4289 0164 C0000000 		.4byte	.LFE44
 4290 0168 00000000 		.4byte	0
 4291 016c 00000000 		.4byte	0
 4292              		.section	.debug_line,"",%progbits
 4293              	.Ldebug_line0:
 4294 0000 72040000 		.section	.debug_str,"MS",%progbits,1
 4294      02004D00 
 4294      00000201 
 4294      FB0E0D00 
 4294      01010101 
 4295              	.LASF54:
 4296 0000 72616D56 		.ascii	"ramVectorTable\000"
 4296      6563746F 
 4296      72546162 
 4296      6C6500
 4297              	.LASF33:
 4298 000f 62675472 		.ascii	"bgTrim4\000"
 4298      696D3400 
 4299              	.LASF10:
 4300 0017 75696E74 		.ascii	"uint16\000"
 4300      313600
 4301              	.LASF47:
 4302 001e 696E7453 		.ascii	"intState\000"
 4302      74617465 
 4302      00
 4303              	.LASF24:
 4304 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4304      73436C6B 
 4304      57726974 
 4304      65486663 
 4304      6C6B4469 
 4305              	.LASF100:
 4306 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4306      73436C6B 
 4306      50756D70 
 4306      436F6E66 
 4306      696700
 4307              	.LASF53:
 4308 0053 6F6C6449 		.ascii	"oldIsr\000"
 4308      737200
 4309              	.LASF89:
 4310 005a 72657456 		.ascii	"retVal\000"
 4310      616C00
 4311              	.LASF46:
 4312 0061 43794469 		.ascii	"CyDisableInts\000"
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 130


 4312      7361626C 
 4312      65496E74 
 4312      7300
 4313              	.LASF36:
 4314 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4314      656E7449 
 4314      6D6F5472 
 4314      696D3256 
 4314      616C7565 
 4315              	.LASF7:
 4316 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 4316      206C6F6E 
 4316      6720756E 
 4316      7369676E 
 4316      65642069 
 4317              	.LASF98:
 4318 009b 43795379 		.ascii	"CySysTickInitVar\000"
 4318      73546963 
 4318      6B496E69 
 4318      74566172 
 4318      00
 4319              	.LASF48:
 4320 00ac 4379456E 		.ascii	"CyEnableInts\000"
 4320      61626C65 
 4320      496E7473 
 4320      00
 4321              	.LASF69:
 4322 00b9 4379536F 		.ascii	"CySoftwareReset\000"
 4322      66747761 
 4322      72655265 
 4322      73657400 
 4323              	.LASF79:
 4324 00c9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4324      73546963 
 4324      6B456E61 
 4324      626C6549 
 4324      6E746572 
 4325              	.LASF64:
 4326 00e2 4379496E 		.ascii	"CyIntGetState\000"
 4326      74476574 
 4326      53746174 
 4326      6500
 4327              	.LASF6:
 4328 00f0 6C6F6E67 		.ascii	"long long int\000"
 4328      206C6F6E 
 4328      6720696E 
 4328      7400
 4329              	.LASF0:
 4330 00fe 7369676E 		.ascii	"signed char\000"
 4330      65642063 
 4330      68617200 
 4331              	.LASF32:
 4332 010a 66726571 		.ascii	"freq\000"
 4332      00
 4333              	.LASF74:
 4334 010f 43794465 		.ascii	"CyDelayFreq\000"
 4334      6C617946 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 131


 4334      72657100 
 4335              	.LASF22:
 4336 011b 696E7465 		.ascii	"interruptState\000"
 4336      72727570 
 4336      74537461 
 4336      746500
 4337              	.LASF83:
 4338 012a 43795379 		.ascii	"CySysTickGetReload\000"
 4338      73546963 
 4338      6B476574 
 4338      52656C6F 
 4338      616400
 4339              	.LASF4:
 4340 013d 6C6F6E67 		.ascii	"long int\000"
 4340      20696E74 
 4340      00
 4341              	.LASF65:
 4342 0146 4379496E 		.ascii	"CyIntDisable\000"
 4342      74446973 
 4342      61626C65 
 4342      00
 4343              	.LASF90:
 4344 0153 43795379 		.ascii	"CySysTickGetCallback\000"
 4344      73546963 
 4344      6B476574 
 4344      43616C6C 
 4344      6261636B 
 4345              	.LASF103:
 4346 0168 433A5C55 		.ascii	"C:\\Users\\Breyana_2\\Documents\\SDCard_Demo.cydsn\000"
 4346      73657273 
 4346      5C427265 
 4346      79616E61 
 4346      5F325C44 
 4347              	.LASF9:
 4348 0197 75696E74 		.ascii	"uint8\000"
 4348      3800
 4349              	.LASF95:
 4350 019d 63796465 		.ascii	"cydelayFreqKhz\000"
 4350      6C617946 
 4350      7265714B 
 4350      687A00
 4351              	.LASF27:
 4352 01ac 656E6162 		.ascii	"enable\000"
 4352      6C6500
 4353              	.LASF13:
 4354 01b3 646F7562 		.ascii	"double\000"
 4354      6C6500
 4355              	.LASF60:
 4356 01ba 73686966 		.ascii	"shift\000"
 4356      7400
 4357              	.LASF41:
 4358 01c0 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4358      734C7664 
 4358      436C6561 
 4358      72496E74 
 4358      65727275 
 4359              	.LASF11:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 132


 4360 01d7 75696E74 		.ascii	"uint32\000"
 4360      333200
 4361              	.LASF49:
 4362 01de 6D61736B 		.ascii	"mask\000"
 4362      00
 4363              	.LASF42:
 4364 01e3 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4364      73436C6B 
 4364      47657453 
 4364      7973636C 
 4364      6B536F75 
 4365              	.LASF62:
 4366 01fb 4379496E 		.ascii	"CyIntGetPriority\000"
 4366      74476574 
 4366      5072696F 
 4366      72697479 
 4366      00
 4367              	.LASF97:
 4368 020c 63796465 		.ascii	"cydelay32kMs\000"
 4368      6C617933 
 4368      326B4D73 
 4368      00
 4369              	.LASF76:
 4370 0219 43795379 		.ascii	"CySysTickInit\000"
 4370      73546963 
 4370      6B496E69 
 4370      7400
 4371              	.LASF61:
 4372 0227 76616C75 		.ascii	"value\000"
 4372      6500
 4373              	.LASF91:
 4374 022d 43794765 		.ascii	"CyGetUniqueId\000"
 4374      74556E69 
 4374      71756549 
 4374      6400
 4375              	.LASF85:
 4376 023b 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4376      73546963 
 4376      6B476574 
 4376      436F756E 
 4376      74466C61 
 4377              	.LASF8:
 4378 0251 756E7369 		.ascii	"unsigned int\000"
 4378      676E6564 
 4378      20696E74 
 4378      00
 4379              	.LASF86:
 4380 025e 43795379 		.ascii	"CySysTickClear\000"
 4380      73546963 
 4380      6B436C65 
 4380      617200
 4381              	.LASF5:
 4382 026d 6C6F6E67 		.ascii	"long unsigned int\000"
 4382      20756E73 
 4382      69676E65 
 4382      6420696E 
 4382      7400
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 133


 4383              	.LASF82:
 4384 027f 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4384      734C7664 
 4384      47657449 
 4384      6E746572 
 4384      72757074 
 4385              	.LASF21:
 4386 029a 43795379 		.ascii	"CySysClkImoStop\000"
 4386      73436C6B 
 4386      496D6F53 
 4386      746F7000 
 4387              	.LASF66:
 4388 02aa 4379496E 		.ascii	"CyIntSetPending\000"
 4388      74536574 
 4388      50656E64 
 4388      696E6700 
 4389              	.LASF43:
 4390 02ba 43795379 		.ascii	"CySysGetResetReason\000"
 4390      73476574 
 4390      52657365 
 4390      74526561 
 4390      736F6E00 
 4391              	.LASF3:
 4392 02ce 73686F72 		.ascii	"short unsigned int\000"
 4392      7420756E 
 4392      7369676E 
 4392      65642069 
 4392      6E7400
 4393              	.LASF56:
 4394 02e1 4379496E 		.ascii	"CyIntSetVector\000"
 4394      74536574 
 4394      56656374 
 4394      6F7200
 4395              	.LASF51:
 4396 02f0 6E756D62 		.ascii	"number\000"
 4396      657200
 4397              	.LASF59:
 4398 02f7 7072696F 		.ascii	"priority\000"
 4398      72697479 
 4398      00
 4399              	.LASF31:
 4400 0300 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4400      73436C6B 
 4400      57726974 
 4400      65496D6F 
 4400      46726571 
 4401              	.LASF50:
 4402 0315 4379496E 		.ascii	"CyIntSetSysVector\000"
 4402      74536574 
 4402      53797356 
 4402      6563746F 
 4402      7200
 4403              	.LASF25:
 4404 0327 43795379 		.ascii	"CySysEnablePumpClock\000"
 4404      73456E61 
 4404      626C6550 
 4404      756D7043 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 134


 4404      6C6F636B 
 4405              	.LASF16:
 4406 033c 72656733 		.ascii	"reg32\000"
 4406      3200
 4407              	.LASF75:
 4408 0342 43795379 		.ascii	"CySysTickStart\000"
 4408      73546963 
 4408      6B537461 
 4408      727400
 4409              	.LASF45:
 4410 0351 72657475 		.ascii	"returnStatus\000"
 4410      726E5374 
 4410      61747573 
 4410      00
 4411              	.LASF18:
 4412 035e 73697A65 		.ascii	"sizetype\000"
 4412      74797065 
 4412      00
 4413              	.LASF67:
 4414 0367 4379496E 		.ascii	"CyIntClearPending\000"
 4414      74436C65 
 4414      61725065 
 4414      6E64696E 
 4414      6700
 4415              	.LASF52:
 4416 0379 61646472 		.ascii	"address\000"
 4416      65737300 
 4417              	.LASF34:
 4418 0381 62675472 		.ascii	"bgTrim5\000"
 4418      696D3500 
 4419              	.LASF28:
 4420 0389 73797363 		.ascii	"sysclkSource\000"
 4420      6C6B536F 
 4420      75726365 
 4420      00
 4421              	.LASF88:
 4422 0396 66756E63 		.ascii	"function\000"
 4422      74696F6E 
 4422      00
 4423              	.LASF99:
 4424 039f 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4424      6F467265 
 4424      714D687A 
 4424      32526567 
 4424      00
 4425              	.LASF84:
 4426 03b0 43795379 		.ascii	"CySysTickGetValue\000"
 4426      73546963 
 4426      6B476574 
 4426      56616C75 
 4426      6500
 4427              	.LASF94:
 4428 03c2 63796465 		.ascii	"cydelayFreqHz\000"
 4428      6C617946 
 4428      72657148 
 4428      7A00
 4429              	.LASF58:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 135


 4430 03d0 4379496E 		.ascii	"CyIntSetPriority\000"
 4430      74536574 
 4430      5072696F 
 4430      72697479 
 4430      00
 4431              	.LASF12:
 4432 03e1 666C6F61 		.ascii	"float\000"
 4432      7400
 4433              	.LASF38:
 4434 03e7 43795379 		.ascii	"CySysLvdEnable\000"
 4434      734C7664 
 4434      456E6162 
 4434      6C6500
 4435              	.LASF19:
 4436 03f6 63795379 		.ascii	"cySysTickCallback\000"
 4436      73546963 
 4436      6B43616C 
 4436      6C626163 
 4436      6B00
 4437              	.LASF57:
 4438 0408 4379496E 		.ascii	"CyIntGetVector\000"
 4438      74476574 
 4438      56656374 
 4438      6F7200
 4439              	.LASF71:
 4440 0417 6D696C6C 		.ascii	"milliseconds\000"
 4440      69736563 
 4440      6F6E6473 
 4440      00
 4441              	.LASF15:
 4442 0424 72656738 		.ascii	"reg8\000"
 4442      00
 4443              	.LASF39:
 4444 0429 74687265 		.ascii	"threshold\000"
 4444      73686F6C 
 4444      6400
 4445              	.LASF68:
 4446 0433 43794861 		.ascii	"CyHalt\000"
 4446      6C7400
 4447              	.LASF1:
 4448 043a 756E7369 		.ascii	"unsigned char\000"
 4448      676E6564 
 4448      20636861 
 4448      7200
 4449              	.LASF2:
 4450 0448 73686F72 		.ascii	"short int\000"
 4450      7420696E 
 4450      7400
 4451              	.LASF63:
 4452 0452 4379496E 		.ascii	"CyIntEnable\000"
 4452      74456E61 
 4452      626C6500 
 4453              	.LASF55:
 4454 045e 4379496E 		.ascii	"CyIntGetSysVector\000"
 4454      74476574 
 4454      53797356 
 4454      6563746F 
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 136


 4454      7200
 4455              	.LASF26:
 4456 0470 636C6B53 		.ascii	"clkSelect\000"
 4456      656C6563 
 4456      7400
 4457              	.LASF72:
 4458 047a 43794465 		.ascii	"CyDelayUs\000"
 4458      6C617955 
 4458      7300
 4459              	.LASF44:
 4460 0484 72656173 		.ascii	"reason\000"
 4460      6F6E00
 4461              	.LASF14:
 4462 048b 63686172 		.ascii	"char\000"
 4462      00
 4463              	.LASF17:
 4464 0490 63796973 		.ascii	"cyisraddress\000"
 4464      72616464 
 4464      72657373 
 4464      00
 4465              	.LASF77:
 4466 049d 43795379 		.ascii	"CySysTickEnable\000"
 4466      73546963 
 4466      6B456E61 
 4466      626C6500 
 4467              	.LASF29:
 4468 04ad 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4468      73436C6B 
 4468      57726974 
 4468      65537973 
 4468      636C6B44 
 4469              	.LASF87:
 4470 04c4 43795379 		.ascii	"CySysTickSetCallback\000"
 4470      73546963 
 4470      6B536574 
 4470      43616C6C 
 4470      6261636B 
 4471              	.LASF93:
 4472 04d9 43795379 		.ascii	"CySysTickCallbacks\000"
 4472      73546963 
 4472      6B43616C 
 4472      6C626163 
 4472      6B7300
 4473              	.LASF37:
 4474 04ec 696D6F54 		.ascii	"imoTrim1Value\000"
 4474      72696D31 
 4474      56616C75 
 4474      6500
 4475              	.LASF92:
 4476 04fa 756E6971 		.ascii	"uniqueId\000"
 4476      75654964 
 4476      00
 4477              	.LASF70:
 4478 0503 43794465 		.ascii	"CyDelay\000"
 4478      6C617900 
 4479              	.LASF80:
 4480 050b 43795379 		.ascii	"CySysTickDisableInterrupt\000"
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 137


 4480      73546963 
 4480      6B446973 
 4480      61626C65 
 4480      496E7465 
 4481              	.LASF40:
 4482 0525 43795379 		.ascii	"CySysLvdDisable\000"
 4482      734C7664 
 4482      44697361 
 4482      626C6500 
 4483              	.LASF96:
 4484 0535 63796465 		.ascii	"cydelayFreqMhz\000"
 4484      6C617946 
 4484      7265714D 
 4484      687A00
 4485              	.LASF78:
 4486 0544 43795379 		.ascii	"CySysTickStop\000"
 4486      73546963 
 4486      6B53746F 
 4486      7000
 4487              	.LASF30:
 4488 0552 64697669 		.ascii	"divider\000"
 4488      64657200 
 4489              	.LASF101:
 4490 055a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4490      4320342E 
 4490      392E3320 
 4490      32303135 
 4490      30333033 
 4491 058d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4491      20726576 
 4491      6973696F 
 4491      6E203232 
 4491      31323230 
 4492 05c0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4492      66756E63 
 4492      74696F6E 
 4492      2D736563 
 4492      74696F6E 
 4493              	.LASF20:
 4494 05e8 43795379 		.ascii	"CySysClkImoStart\000"
 4494      73436C6B 
 4494      496D6F53 
 4494      74617274 
 4494      00
 4495              	.LASF35:
 4496 05f9 6E657749 		.ascii	"newImoTrim2Value\000"
 4496      6D6F5472 
 4496      696D3256 
 4496      616C7565 
 4496      00
 4497              	.LASF102:
 4498 060a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4498      72617465 
 4498      645F536F 
 4498      75726365 
 4498      5C50536F 
 4499              	.LASF73:
ARM GAS  C:\Users\BREYAN~1\AppData\Local\Temp\ccu3pQA9.s 			page 138


 4500 0629 6D696372 		.ascii	"microseconds\000"
 4500      6F736563 
 4500      6F6E6473 
 4500      00
 4501              	.LASF23:
 4502 0636 746D7052 		.ascii	"tmpReg\000"
 4502      656700
 4503              	.LASF81:
 4504 063d 43795379 		.ascii	"CySysTickSetReload\000"
 4504      73546963 
 4504      6B536574 
 4504      52656C6F 
 4504      616400
 4505              	.LASF104:
 4506 0650 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4506      73546963 
 4506      6B536572 
 4506      76696365 
 4506      43616C6C 
 4507              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
