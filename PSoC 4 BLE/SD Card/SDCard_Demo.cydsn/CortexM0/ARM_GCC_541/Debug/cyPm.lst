ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmSleep,"ax",%progbits
  20              		.align	2
  21              		.global	CySysPmSleep
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysPmSleep, %function
  25              	CySysPmSleep:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 5.50
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** 
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  23:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  24:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  25:Generated_Source\PSoC4/cyPm.c **** *
  26:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  27:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  28:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  29:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
  30:Generated_Source\PSoC4/cyPm.c **** *
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 2


  31:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  32:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  33:Generated_Source\PSoC4/cyPm.c **** {
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  34:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  35:Generated_Source\PSoC4/cyPm.c **** 
  36:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  41              		.loc 1 36 0
  42 0006 FC1D     		adds	r4, r7, #7
  43 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  44 000c 0300     		movs	r3, r0
  45 000e 2370     		strb	r3, [r4]
  37:Generated_Source\PSoC4/cyPm.c **** 
  38:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  39:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  46              		.loc 1 39 0
  47 0010 074B     		ldr	r3, .L2
  48 0012 074A     		ldr	r2, .L2
  49 0014 1268     		ldr	r2, [r2]
  50 0016 0421     		movs	r1, #4
  51 0018 8A43     		bics	r2, r1
  52 001a 1A60     		str	r2, [r3]
  40:Generated_Source\PSoC4/cyPm.c **** 
  41:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  42:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  53              		.loc 1 42 0
  54              		.syntax divided
  55              	@ 42 "Generated_Source\PSoC4\cyPm.c" 1
  56 001c 30BF     		WFI 
  57              	
  58              	@ 0 "" 2
  43:Generated_Source\PSoC4/cyPm.c **** 
  44:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  59              		.loc 1 44 0
  60              		.thumb
  61              		.syntax unified
  62 001e FB1D     		adds	r3, r7, #7
  63 0020 1B78     		ldrb	r3, [r3]
  64 0022 1800     		movs	r0, r3
  65 0024 FFF7FEFF 		bl	CyExitCriticalSection
  45:Generated_Source\PSoC4/cyPm.c **** }
  66              		.loc 1 45 0
  67 0028 C046     		nop
  68 002a BD46     		mov	sp, r7
  69 002c 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 3


  70              		@ sp needed
  71 002e 90BD     		pop	{r4, r7, pc}
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 0030 10ED00E0 		.word	-536810224
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	CySysPmSleep, .-CySysPmSleep
  79              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  80              		.align	2
  81              		.global	CySysPmDeepSleep
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysPmDeepSleep, %function
  85              	CySysPmDeepSleep:
  86              	.LFB1:
  46:Generated_Source\PSoC4/cyPm.c **** 
  47:Generated_Source\PSoC4/cyPm.c **** 
  48:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  49:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  50:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  51:Generated_Source\PSoC4/cyPm.c **** *
  52:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  53:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  54:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  55:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  56:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  57:Generated_Source\PSoC4/cyPm.c **** *
  58:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  59:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  60:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  61:Generated_Source\PSoC4/cyPm.c **** *
  62:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  64:Generated_Source\PSoC4/cyPm.c **** {
  87              		.loc 1 64 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 90B5     		push	{r4, r7, lr}
  92              		.cfi_def_cfa_offset 12
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 83B0     		sub	sp, sp, #12
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  66:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  67:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  68:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  69:Generated_Source\PSoC4/cyPm.c **** 
  70:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
 100              		.loc 1 70 0
 101 0006 FC1D     		adds	r4, r7, #7
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 4


 102 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 103 000c 0300     		movs	r3, r0
 104 000e 2370     		strb	r3, [r4]
  71:Generated_Source\PSoC4/cyPm.c **** 
  72:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  73:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  74:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
 105              		.loc 1 74 0
 106 0010 194B     		ldr	r3, .L5
 107 0012 194A     		ldr	r2, .L5
 108 0014 1268     		ldr	r2, [r2]
 109 0016 5200     		lsls	r2, r2, #1
 110 0018 5208     		lsrs	r2, r2, #1
 111 001a 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  76:Generated_Source\PSoC4/cyPm.c **** 
  77:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  78:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
 112              		.loc 1 78 0
 113 001c 8023     		movs	r3, #128
 114 001e DB05     		lsls	r3, r3, #23
 115 0020 8022     		movs	r2, #128
 116 0022 D205     		lsls	r2, r2, #23
 117 0024 1268     		ldr	r2, [r2]
 118 0026 0221     		movs	r1, #2
 119 0028 0A43     		orrs	r2, r1
 120 002a 1A60     		str	r2, [r3]
  79:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
  82:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
 121              		.loc 1 82 0
 122 002c 134B     		ldr	r3, .L5+4
 123 002e 144A     		ldr	r2, .L5+8
 124 0030 1288     		ldrh	r2, [r2]
 125 0032 92B2     		uxth	r2, r2
 126 0034 1A60     		str	r2, [r3]
  83:Generated_Source\PSoC4/cyPm.c **** 
  84:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
  85:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 127              		.loc 1 85 0
 128 0036 134B     		ldr	r3, .L5+12
 129 0038 124A     		ldr	r2, .L5+12
 130 003a 1268     		ldr	r2, [r2]
 131 003c 0421     		movs	r1, #4
 132 003e 0A43     		orrs	r2, r1
 133 0040 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/cyPm.c **** 
  87:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  88:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
  89:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
  90:Generated_Source\PSoC4/cyPm.c ****         */
  91:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 134              		.loc 1 91 0
 135 0042 114B     		ldr	r3, .L5+16
 136 0044 1B68     		ldr	r3, [r3]
 137 0046 3B60     		str	r3, [r7]
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 5


  92:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 138              		.loc 1 92 0
 139 0048 0220     		movs	r0, #2
 140 004a FFF7FEFF 		bl	CySysClkWriteSysclkDiv
  93:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  94:Generated_Source\PSoC4/cyPm.c **** 
  95:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  96:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 141              		.loc 1 96 0
 142              		.syntax divided
 143              	@ 96 "Generated_Source\PSoC4\cyPm.c" 1
 144 004e 30BF     		WFI 
 145              	
 146              	@ 0 "" 2
  97:Generated_Source\PSoC4/cyPm.c **** 
  98:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  99:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 100:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 147              		.loc 1 100 0
 148              		.thumb
 149              		.syntax unified
 150 0050 0D4B     		ldr	r3, .L5+16
 151 0052 3A68     		ldr	r2, [r7]
 152 0054 1A60     		str	r2, [r3]
 101:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 102:Generated_Source\PSoC4/cyPm.c **** 
 103:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 104:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 153              		.loc 1 104 0
 154 0056 8023     		movs	r3, #128
 155 0058 DB05     		lsls	r3, r3, #23
 156 005a 8022     		movs	r2, #128
 157 005c D205     		lsls	r2, r2, #23
 158 005e 1268     		ldr	r2, [r2]
 159 0060 0221     		movs	r1, #2
 160 0062 8A43     		bics	r2, r1
 161 0064 1A60     		str	r2, [r3]
 105:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 106:Generated_Source\PSoC4/cyPm.c **** 
 107:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 162              		.loc 1 107 0
 163 0066 FB1D     		adds	r3, r7, #7
 164 0068 1B78     		ldrb	r3, [r3]
 165 006a 1800     		movs	r0, r3
 166 006c FFF7FEFF 		bl	CyExitCriticalSection
 108:Generated_Source\PSoC4/cyPm.c **** }
 167              		.loc 1 108 0
 168 0070 C046     		nop
 169 0072 BD46     		mov	sp, r7
 170 0074 03B0     		add	sp, sp, #12
 171              		@ sp needed
 172 0076 90BD     		pop	{r4, r7, pc}
 173              	.L6:
 174              		.align	2
 175              	.L5:
 176 0078 00000B40 		.word	1074462720
 177 007c 0C000B40 		.word	1074462732
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 6


 178 0080 52F1FF0F 		.word	268431698
 179 0084 10ED00E0 		.word	-536810224
 180 0088 00010B40 		.word	1074462976
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 184              		.section	.text.CySysPmHibernate,"ax",%progbits
 185              		.align	2
 186              		.global	CySysPmHibernate
 187              		.code	16
 188              		.thumb_func
 189              		.type	CySysPmHibernate, %function
 190              	CySysPmHibernate:
 191              	.LFB2:
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c **** 
 111:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 114:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 115:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC4/cyPm.c ****     *
 117:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 118:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 119:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 120:Generated_Source\PSoC4/cyPm.c ****     *
 121:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 122:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 123:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 124:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 125:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 126:Generated_Source\PSoC4/cyPm.c ****     *
 127:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 128:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 129:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 130:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 131:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 132:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 133:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 134:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 135:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 136:Generated_Source\PSoC4/cyPm.c ****     *
 137:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 138:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 139:Generated_Source\PSoC4/cyPm.c ****     {
 192              		.loc 1 139 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 90B5     		push	{r4, r7, lr}
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              		.cfi_def_cfa_offset 24
 203 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 7


 204              		.cfi_def_cfa_register 7
 140:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 141:Generated_Source\PSoC4/cyPm.c **** 
 142:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 205              		.loc 1 142 0
 206 0006 FC1D     		adds	r4, r7, #7
 207 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 208 000c 0300     		movs	r3, r0
 209 000e 2370     		strb	r3, [r4]
 143:Generated_Source\PSoC4/cyPm.c **** 
 144:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 145:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 146:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 147:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 148:Generated_Source\PSoC4/cyPm.c **** 
 149:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 150:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 210              		.loc 1 150 0
 211 0010 114B     		ldr	r3, .L8
 212 0012 114A     		ldr	r2, .L8
 213 0014 1268     		ldr	r2, [r2]
 214 0016 8021     		movs	r1, #128
 215 0018 0906     		lsls	r1, r1, #24
 216 001a 0A43     		orrs	r2, r1
 217 001c 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/cyPm.c **** 
 152:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 153:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 218              		.loc 1 153 0
 219 001e 0F4B     		ldr	r3, .L8+4
 220 0020 0F4A     		ldr	r2, .L8+8
 221 0022 1288     		ldrh	r2, [r2]
 222 0024 92B2     		uxth	r2, r2
 223 0026 1A60     		str	r2, [r3]
 154:Generated_Source\PSoC4/cyPm.c **** 
 155:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 156:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 224              		.loc 1 156 0
 225 0028 0E4B     		ldr	r3, .L8+12
 226 002a 0E4A     		ldr	r2, .L8+12
 227 002c 1268     		ldr	r2, [r2]
 228 002e 0421     		movs	r1, #4
 229 0030 0A43     		orrs	r2, r1
 230 0032 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/cyPm.c **** 
 158:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 159:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 160:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 161:Generated_Source\PSoC4/cyPm.c ****          */
 162:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 231              		.loc 1 162 0
 232 0034 0C4B     		ldr	r3, .L8+16
 233 0036 0C4A     		ldr	r2, .L8+16
 234 0038 1268     		ldr	r2, [r2]
 235 003a FF21     		movs	r1, #255
 236 003c 8A43     		bics	r2, r1
 237 003e F121     		movs	r1, #241
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 8


 238 0040 0A43     		orrs	r2, r1
 239 0042 1A60     		str	r2, [r3]
 163:Generated_Source\PSoC4/cyPm.c **** 
 164:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 165:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 166:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 167:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 168:Generated_Source\PSoC4/cyPm.c ****          */
 169:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 240              		.loc 1 169 0
 241              		.syntax divided
 242              	@ 169 "Generated_Source\PSoC4\cyPm.c" 1
 243 0044 30BF     		WFI 
 244              	
 245              	@ 0 "" 2
 170:Generated_Source\PSoC4/cyPm.c **** 
 171:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 246              		.loc 1 171 0
 247              		.thumb
 248              		.syntax unified
 249 0046 FB1D     		adds	r3, r7, #7
 250 0048 1B78     		ldrb	r3, [r3]
 251 004a 1800     		movs	r0, r3
 252 004c FFF7FEFF 		bl	CyExitCriticalSection
 172:Generated_Source\PSoC4/cyPm.c ****     }
 253              		.loc 1 172 0
 254 0050 C046     		nop
 255 0052 BD46     		mov	sp, r7
 256 0054 03B0     		add	sp, sp, #12
 257              		@ sp needed
 258 0056 90BD     		pop	{r4, r7, pc}
 259              	.L9:
 260              		.align	2
 261              	.L8:
 262 0058 00000B40 		.word	1074462720
 263 005c 0C000B40 		.word	1074462732
 264 0060 50F1FF0F 		.word	268431696
 265 0064 10ED00E0 		.word	-536810224
 266 0068 2C000B40 		.word	1074462764
 267              		.cfi_endproc
 268              	.LFE2:
 269              		.size	CySysPmHibernate, .-CySysPmHibernate
 270              		.section	.text.CySysPmStop,"ax",%progbits
 271              		.align	2
 272              		.global	CySysPmStop
 273              		.code	16
 274              		.thumb_func
 275              		.type	CySysPmStop, %function
 276              	CySysPmStop:
 277              	.LFB3:
 173:Generated_Source\PSoC4/cyPm.c **** 
 174:Generated_Source\PSoC4/cyPm.c **** 
 175:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 177:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/cyPm.c ****     *
 179:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 9


 180:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 181:Generated_Source\PSoC4/cyPm.c ****     *
 182:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 183:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 184:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 185:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 186:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 187:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 188:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 189:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 190:Generated_Source\PSoC4/cyPm.c ****     *
 191:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 192:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 193:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 194:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 195:Generated_Source\PSoC4/cyPm.c ****     *
 196:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 197:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 198:Generated_Source\PSoC4/cyPm.c ****     {
 278              		.loc 1 198 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 199:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 288              		.loc 1 199 0
 289 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 290              		.loc 1 202 0
 291 0008 0B4B     		ldr	r3, .L11
 292 000a 0B4A     		ldr	r2, .L11
 293 000c 1168     		ldr	r1, [r2]
 294 000e 8022     		movs	r2, #128
 295 0010 5202     		lsls	r2, r2, #9
 296 0012 0A40     		ands	r2, r1
 297 0014 F221     		movs	r1, #242
 298 0016 0A43     		orrs	r2, r1
 299 0018 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 205:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 300              		.loc 1 205 0
 301 001a FFF7FEFF 		bl	CySysPmFreezeIo
 206:Generated_Source\PSoC4/cyPm.c **** 
 207:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 302              		.loc 1 208 0
 303 001e 064B     		ldr	r3, .L11
 304 0020 054A     		ldr	r2, .L11
 305 0022 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 10


 306 0024 8021     		movs	r1, #128
 307 0026 0906     		lsls	r1, r1, #24
 308 0028 0A43     		orrs	r2, r1
 309 002a 1A60     		str	r2, [r3]
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 211:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 212:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 213:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 310              		.loc 1 215 0
 311              		.syntax divided
 312              	@ 215 "Generated_Source\PSoC4\cyPm.c" 1
 313 002c C046     		NOP
 314              	
 315              	@ 0 "" 2
 216:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 316              		.loc 1 216 0
 317              	@ 216 "Generated_Source\PSoC4\cyPm.c" 1
 318 002e C046     		NOP
 319              	
 320              	@ 0 "" 2
 217:Generated_Source\PSoC4/cyPm.c **** 
 218:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 219:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 321              		.loc 1 219 0
 322              	@ 219 "Generated_Source\PSoC4\cyPm.c" 1
 323 0030 30BF     		WFI 
 324              	
 325              	@ 0 "" 2
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 222:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 223:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 224:Generated_Source\PSoC4/cyPm.c ****          */
 225:Generated_Source\PSoC4/cyPm.c ****     }
 326              		.loc 1 225 0
 327              		.thumb
 328              		.syntax unified
 329 0032 C046     		nop
 330 0034 BD46     		mov	sp, r7
 331              		@ sp needed
 332 0036 80BD     		pop	{r7, pc}
 333              	.L12:
 334              		.align	2
 335              	.L11:
 336 0038 2C000B40 		.word	1074462764
 337              		.cfi_endproc
 338              	.LFE3:
 339              		.size	CySysPmStop, .-CySysPmStop
 340              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 341              		.align	2
 342              		.global	CySysPmSetWakeupPolarity
 343              		.code	16
 344              		.thumb_func
 345              		.type	CySysPmSetWakeupPolarity, %function
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 11


 346              	CySysPmSetWakeupPolarity:
 347              	.LFB4:
 226:Generated_Source\PSoC4/cyPm.c **** 
 227:Generated_Source\PSoC4/cyPm.c **** 
 228:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 229:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 230:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 231:Generated_Source\PSoC4/cyPm.c ****     *
 232:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 233:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 234:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 235:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 238:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 239:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 240:Generated_Source\PSoC4/cyPm.c ****     *
 241:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 242:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 243:Generated_Source\PSoC4/cyPm.c ****     {
 348              		.loc 1 243 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 16
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 90B5     		push	{r4, r7, lr}
 353              		.cfi_def_cfa_offset 12
 354              		.cfi_offset 4, -12
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 85B0     		sub	sp, sp, #20
 358              		.cfi_def_cfa_offset 32
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 244:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 245:Generated_Source\PSoC4/cyPm.c **** 
 246:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 362              		.loc 1 246 0
 363 0008 0F23     		movs	r3, #15
 364 000a FC18     		adds	r4, r7, r3
 365 000c FFF7FEFF 		bl	CyEnterCriticalSection
 366 0010 0300     		movs	r3, r0
 367 0012 2370     		strb	r3, [r4]
 247:Generated_Source\PSoC4/cyPm.c **** 
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 368              		.loc 1 248 0
 369 0014 0C4A     		ldr	r2, .L16
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 370              		.loc 1 249 0
 371 0016 7B68     		ldr	r3, [r7, #4]
 372 0018 002B     		cmp	r3, #0
 373 001a 05D0     		beq	.L14
 374              		.loc 1 249 0 is_stmt 0 discriminator 1
 375 001c 0A4B     		ldr	r3, .L16
 376 001e 1B68     		ldr	r3, [r3]
 377 0020 8021     		movs	r1, #128
 378 0022 4902     		lsls	r1, r1, #9
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 12


 379 0024 0B43     		orrs	r3, r1
 380 0026 03E0     		b	.L15
 381              	.L14:
 250:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 382              		.loc 1 250 0 is_stmt 1 discriminator 2
 383 0028 074B     		ldr	r3, .L16
 384 002a 1B68     		ldr	r3, [r3]
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 385              		.loc 1 249 0 discriminator 2
 386 002c 0749     		ldr	r1, .L16+4
 387 002e 0B40     		ands	r3, r1
 388              	.L15:
 248:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 389              		.loc 1 248 0
 390 0030 1360     		str	r3, [r2]
 251:Generated_Source\PSoC4/cyPm.c **** 
 252:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 391              		.loc 1 252 0
 392 0032 0F23     		movs	r3, #15
 393 0034 FB18     		adds	r3, r7, r3
 394 0036 1B78     		ldrb	r3, [r3]
 395 0038 1800     		movs	r0, r3
 396 003a FFF7FEFF 		bl	CyExitCriticalSection
 253:Generated_Source\PSoC4/cyPm.c ****     }
 397              		.loc 1 253 0
 398 003e C046     		nop
 399 0040 BD46     		mov	sp, r7
 400 0042 05B0     		add	sp, sp, #20
 401              		@ sp needed
 402 0044 90BD     		pop	{r4, r7, pc}
 403              	.L17:
 404 0046 C046     		.align	2
 405              	.L16:
 406 0048 2C000B40 		.word	1074462764
 407 004c FFFFFEFF 		.word	-65537
 408              		.cfi_endproc
 409              	.LFE4:
 410              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 411              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 412              		.align	2
 413              		.global	CySysPmGetResetReason
 414              		.code	16
 415              		.thumb_func
 416              		.type	CySysPmGetResetReason, %function
 417              	CySysPmGetResetReason:
 418              	.LFB5:
 254:Generated_Source\PSoC4/cyPm.c **** 
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 257:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 258:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 259:Generated_Source\PSoC4/cyPm.c ****     *
 260:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 261:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 262:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 263:Generated_Source\PSoC4/cyPm.c ****     *
 264:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 13


 265:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 266:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 267:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 268:Generated_Source\PSoC4/cyPm.c ****     *
 269:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 270:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 271:Generated_Source\PSoC4/cyPm.c ****     {
 419              		.loc 1 271 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 272:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 431              		.loc 1 272 0
 432 0006 0023     		movs	r3, #0
 433 0008 7B60     		str	r3, [r7, #4]
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 434              		.loc 1 274 0
 435 000a 0C4B     		ldr	r3, .L25
 436 000c 1B68     		ldr	r3, [r3]
 437 000e FF22     		movs	r2, #255
 438 0010 1340     		ands	r3, r2
 439 0012 F12B     		cmp	r3, #241
 440 0014 07D0     		beq	.L20
 441 0016 F22B     		cmp	r3, #242
 442 0018 08D0     		beq	.L21
 443 001a 002B     		cmp	r3, #0
 444 001c 00D0     		beq	.L22
 275:Generated_Source\PSoC4/cyPm.c ****         {
 276:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 277:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 278:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 279:Generated_Source\PSoC4/cyPm.c ****             break;
 280:Generated_Source\PSoC4/cyPm.c **** 
 281:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 282:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 283:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 284:Generated_Source\PSoC4/cyPm.c ****             break;
 285:Generated_Source\PSoC4/cyPm.c **** 
 286:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 287:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 288:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 289:Generated_Source\PSoC4/cyPm.c ****             break;
 290:Generated_Source\PSoC4/cyPm.c **** 
 291:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 292:Generated_Source\PSoC4/cyPm.c ****         default:
 293:Generated_Source\PSoC4/cyPm.c ****             break;
 445              		.loc 1 293 0
 446 001e 08E0     		b	.L23
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 14


 447              	.L22:
 278:Generated_Source\PSoC4/cyPm.c ****             break;
 448              		.loc 1 278 0
 449 0020 0123     		movs	r3, #1
 450 0022 7B60     		str	r3, [r7, #4]
 279:Generated_Source\PSoC4/cyPm.c **** 
 451              		.loc 1 279 0
 452 0024 05E0     		b	.L23
 453              	.L20:
 283:Generated_Source\PSoC4/cyPm.c ****             break;
 454              		.loc 1 283 0
 455 0026 0223     		movs	r3, #2
 456 0028 7B60     		str	r3, [r7, #4]
 284:Generated_Source\PSoC4/cyPm.c **** 
 457              		.loc 1 284 0
 458 002a 02E0     		b	.L23
 459              	.L21:
 288:Generated_Source\PSoC4/cyPm.c ****             break;
 460              		.loc 1 288 0
 461 002c 0323     		movs	r3, #3
 462 002e 7B60     		str	r3, [r7, #4]
 289:Generated_Source\PSoC4/cyPm.c **** 
 463              		.loc 1 289 0
 464 0030 C046     		nop
 465              	.L23:
 294:Generated_Source\PSoC4/cyPm.c ****         }
 295:Generated_Source\PSoC4/cyPm.c **** 
 296:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 466              		.loc 1 296 0
 467 0032 7B68     		ldr	r3, [r7, #4]
 297:Generated_Source\PSoC4/cyPm.c ****     }
 468              		.loc 1 297 0
 469 0034 1800     		movs	r0, r3
 470 0036 BD46     		mov	sp, r7
 471 0038 02B0     		add	sp, sp, #8
 472              		@ sp needed
 473 003a 80BD     		pop	{r7, pc}
 474              	.L26:
 475              		.align	2
 476              	.L25:
 477 003c 2C000B40 		.word	1074462764
 478              		.cfi_endproc
 479              	.LFE5:
 480              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 481              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 482              		.align	2
 483              		.global	CySysPmFreezeIo
 484              		.code	16
 485              		.thumb_func
 486              		.type	CySysPmFreezeIo, %function
 487              	CySysPmFreezeIo:
 488              	.LFB6:
 298:Generated_Source\PSoC4/cyPm.c **** 
 299:Generated_Source\PSoC4/cyPm.c **** 
 300:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 301:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 302:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 15


 303:Generated_Source\PSoC4/cyPm.c ****     *
 304:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 305:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 306:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 307:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 308:Generated_Source\PSoC4/cyPm.c ****     *
 309:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 310:Generated_Source\PSoC4/cyPm.c ****     *
 311:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 312:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 313:Generated_Source\PSoC4/cyPm.c ****     {
 489              		.loc 1 313 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 8
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 90B5     		push	{r4, r7, lr}
 494              		.cfi_def_cfa_offset 12
 495              		.cfi_offset 4, -12
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 83B0     		sub	sp, sp, #12
 499              		.cfi_def_cfa_offset 24
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 314:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 315:Generated_Source\PSoC4/cyPm.c **** 
 316:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 502              		.loc 1 316 0
 503 0006 FC1D     		adds	r4, r7, #7
 504 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 505 000c 0300     		movs	r3, r0
 506 000e 2370     		strb	r3, [r4]
 317:Generated_Source\PSoC4/cyPm.c **** 
 318:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 319:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 320:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 321:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 322:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 323:Generated_Source\PSoC4/cyPm.c ****          */
 324:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 507              		.loc 1 324 0
 508 0010 0F4B     		ldr	r3, .L29
 509 0012 1A68     		ldr	r2, [r3]
 510 0014 8023     		movs	r3, #128
 511 0016 9B02     		lsls	r3, r3, #10
 512 0018 1340     		ands	r3, r2
 513 001a 0FD1     		bne	.L28
 325:Generated_Source\PSoC4/cyPm.c ****         {
 326:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 327:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 514              		.loc 1 327 0
 515 001c 0C4B     		ldr	r3, .L29
 328:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 516              		.loc 1 328 0
 517 001e 0C4A     		ldr	r2, .L29
 518 0020 1268     		ldr	r2, [r2]
 519 0022 0C49     		ldr	r1, .L29+4
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 16


 520 0024 0A40     		ands	r2, r1
 327:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 521              		.loc 1 327 0
 522 0026 0C49     		ldr	r1, .L29+8
 523 0028 0A43     		orrs	r2, r1
 524 002a 1A60     		str	r2, [r3]
 329:Generated_Source\PSoC4/cyPm.c **** 
 330:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 331:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 332:Generated_Source\PSoC4/cyPm.c ****             */
 333:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 525              		.loc 1 333 0
 526 002c 084B     		ldr	r3, .L29
 527 002e 1B68     		ldr	r3, [r3]
 334:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 528              		.loc 1 334 0
 529 0030 074B     		ldr	r3, .L29
 530 0032 1B68     		ldr	r3, [r3]
 335:Generated_Source\PSoC4/cyPm.c **** 
 336:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 337:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 531              		.loc 1 337 0
 532 0034 064B     		ldr	r3, .L29
 533 0036 064A     		ldr	r2, .L29
 534 0038 1268     		ldr	r2, [r2]
 535 003a 1A60     		str	r2, [r3]
 536              	.L28:
 338:Generated_Source\PSoC4/cyPm.c ****         }
 339:Generated_Source\PSoC4/cyPm.c **** 
 340:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 537              		.loc 1 340 0
 538 003c FB1D     		adds	r3, r7, #7
 539 003e 1B78     		ldrb	r3, [r3]
 540 0040 1800     		movs	r0, r3
 541 0042 FFF7FEFF 		bl	CyExitCriticalSection
 341:Generated_Source\PSoC4/cyPm.c ****     }
 542              		.loc 1 341 0
 543 0046 C046     		nop
 544 0048 BD46     		mov	sp, r7
 545 004a 03B0     		add	sp, sp, #12
 546              		@ sp needed
 547 004c 90BD     		pop	{r4, r7, pc}
 548              	.L30:
 549 004e C046     		.align	2
 550              	.L29:
 551 0050 2C000B40 		.word	1074462764
 552 0054 FF000100 		.word	65791
 553 0058 003A0280 		.word	-2147337728
 554              		.cfi_endproc
 555              	.LFE6:
 556              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 557              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 558              		.align	2
 559              		.global	CySysPmUnfreezeIo
 560              		.code	16
 561              		.thumb_func
 562              		.type	CySysPmUnfreezeIo, %function
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 17


 563              	CySysPmUnfreezeIo:
 564              	.LFB7:
 342:Generated_Source\PSoC4/cyPm.c **** 
 343:Generated_Source\PSoC4/cyPm.c **** 
 344:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 346:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/cyPm.c ****     *
 348:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 349:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 350:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 351:Generated_Source\PSoC4/cyPm.c ****     *
 352:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 353:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 354:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 355:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 358:Generated_Source\PSoC4/cyPm.c ****     *
 359:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 361:Generated_Source\PSoC4/cyPm.c ****     {
 565              		.loc 1 361 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 90B5     		push	{r4, r7, lr}
 570              		.cfi_def_cfa_offset 12
 571              		.cfi_offset 4, -12
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 83B0     		sub	sp, sp, #12
 575              		.cfi_def_cfa_offset 24
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 362:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 578              		.loc 1 364 0
 579 0006 FC1D     		adds	r4, r7, #7
 580 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 581 000c 0300     		movs	r3, r0
 582 000e 2370     		strb	r3, [r4]
 365:Generated_Source\PSoC4/cyPm.c **** 
 366:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 367:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 368:Generated_Source\PSoC4/cyPm.c ****          */
 369:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 583              		.loc 1 369 0
 584 0010 0D4B     		ldr	r3, .L32
 370:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 585              		.loc 1 370 0
 586 0012 0D4A     		ldr	r2, .L32
 587 0014 1268     		ldr	r2, [r2]
 588 0016 0D49     		ldr	r1, .L32+4
 589 0018 0A40     		ands	r2, r1
 369:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 18


 590              		.loc 1 369 0
 591 001a E821     		movs	r1, #232
 592 001c 8901     		lsls	r1, r1, #6
 593 001e 0A43     		orrs	r2, r1
 594 0020 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/cyPm.c **** 
 372:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 373:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 374:Generated_Source\PSoC4/cyPm.c ****         */
 375:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 595              		.loc 1 375 0
 596 0022 094B     		ldr	r3, .L32
 597 0024 1B68     		ldr	r3, [r3]
 376:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 598              		.loc 1 376 0
 599 0026 084B     		ldr	r3, .L32
 600 0028 1B68     		ldr	r3, [r3]
 377:Generated_Source\PSoC4/cyPm.c **** 
 378:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 379:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 601              		.loc 1 379 0
 602 002a 074B     		ldr	r3, .L32
 603 002c 064A     		ldr	r2, .L32
 604 002e 1268     		ldr	r2, [r2]
 605 0030 0649     		ldr	r1, .L32+4
 606 0032 0A40     		ands	r2, r1
 607 0034 1A60     		str	r2, [r3]
 380:Generated_Source\PSoC4/cyPm.c **** 
 381:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 608              		.loc 1 381 0
 609 0036 FB1D     		adds	r3, r7, #7
 610 0038 1B78     		ldrb	r3, [r3]
 611 003a 1800     		movs	r0, r3
 612 003c FFF7FEFF 		bl	CyExitCriticalSection
 382:Generated_Source\PSoC4/cyPm.c ****     }
 613              		.loc 1 382 0
 614 0040 C046     		nop
 615 0042 BD46     		mov	sp, r7
 616 0044 03B0     		add	sp, sp, #12
 617              		@ sp needed
 618 0046 90BD     		pop	{r4, r7, pc}
 619              	.L33:
 620              		.align	2
 621              	.L32:
 622 0048 2C000B40 		.word	1074462764
 623 004c FF000100 		.word	65791
 624              		.cfi_endproc
 625              	.LFE7:
 626              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 627              		.text
 628              	.Letext0:
 629              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 630              		.section	.debug_info,"",%progbits
 631              	.Ldebug_info0:
 632 0000 00020000 		.4byte	0x200
 633 0004 0400     		.2byte	0x4
 634 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 19


 635 000a 04       		.byte	0x4
 636 000b 01       		.uleb128 0x1
 637 000c 91000000 		.4byte	.LASF27
 638 0010 0C       		.byte	0xc
 639 0011 2A020000 		.4byte	.LASF28
 640 0015 CF010000 		.4byte	.LASF29
 641 0019 00000000 		.4byte	.Ldebug_ranges0+0
 642 001d 00000000 		.4byte	0
 643 0021 00000000 		.4byte	.Ldebug_line0
 644 0025 02       		.uleb128 0x2
 645 0026 01       		.byte	0x1
 646 0027 06       		.byte	0x6
 647 0028 54020000 		.4byte	.LASF0
 648 002c 02       		.uleb128 0x2
 649 002d 01       		.byte	0x1
 650 002e 08       		.byte	0x8
 651 002f 5C000000 		.4byte	.LASF1
 652 0033 02       		.uleb128 0x2
 653 0034 02       		.byte	0x2
 654 0035 05       		.byte	0x5
 655 0036 C5010000 		.4byte	.LASF2
 656 003a 02       		.uleb128 0x2
 657 003b 02       		.byte	0x2
 658 003c 07       		.byte	0x7
 659 003d 32000000 		.4byte	.LASF3
 660 0041 02       		.uleb128 0x2
 661 0042 04       		.byte	0x4
 662 0043 05       		.byte	0x5
 663 0044 21020000 		.4byte	.LASF4
 664 0048 02       		.uleb128 0x2
 665 0049 04       		.byte	0x4
 666 004a 07       		.byte	0x7
 667 004b 79000000 		.4byte	.LASF5
 668 004f 02       		.uleb128 0x2
 669 0050 08       		.byte	0x8
 670 0051 05       		.byte	0x5
 671 0052 A5010000 		.4byte	.LASF6
 672 0056 02       		.uleb128 0x2
 673 0057 08       		.byte	0x8
 674 0058 07       		.byte	0x7
 675 0059 5F010000 		.4byte	.LASF7
 676 005d 03       		.uleb128 0x3
 677 005e 04       		.byte	0x4
 678 005f 05       		.byte	0x5
 679 0060 696E7400 		.ascii	"int\000"
 680 0064 02       		.uleb128 0x2
 681 0065 04       		.byte	0x4
 682 0066 07       		.byte	0x7
 683 0067 52010000 		.4byte	.LASF8
 684 006b 04       		.uleb128 0x4
 685 006c 8B000000 		.4byte	.LASF9
 686 0070 02       		.byte	0x2
 687 0071 B901     		.2byte	0x1b9
 688 0073 2C000000 		.4byte	0x2c
 689 0077 04       		.uleb128 0x4
 690 0078 44010000 		.4byte	.LASF10
 691 007c 02       		.byte	0x2
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 20


 692 007d BA01     		.2byte	0x1ba
 693 007f 3A000000 		.4byte	0x3a
 694 0083 04       		.uleb128 0x4
 695 0084 4B010000 		.4byte	.LASF11
 696 0088 02       		.byte	0x2
 697 0089 BB01     		.2byte	0x1bb
 698 008b 48000000 		.4byte	0x48
 699 008f 02       		.uleb128 0x2
 700 0090 04       		.byte	0x4
 701 0091 04       		.byte	0x4
 702 0092 56000000 		.4byte	.LASF12
 703 0096 02       		.uleb128 0x2
 704 0097 08       		.byte	0x8
 705 0098 04       		.byte	0x4
 706 0099 2B010000 		.4byte	.LASF13
 707 009d 02       		.uleb128 0x2
 708 009e 01       		.byte	0x1
 709 009f 08       		.byte	0x8
 710 00a0 B3010000 		.4byte	.LASF14
 711 00a4 04       		.uleb128 0x4
 712 00a5 00000000 		.4byte	.LASF15
 713 00a9 02       		.byte	0x2
 714 00aa 6402     		.2byte	0x264
 715 00ac B0000000 		.4byte	0xb0
 716 00b0 05       		.uleb128 0x5
 717 00b1 77000000 		.4byte	0x77
 718 00b5 04       		.uleb128 0x4
 719 00b6 06000000 		.4byte	.LASF16
 720 00ba 02       		.byte	0x2
 721 00bb 6502     		.2byte	0x265
 722 00bd C1000000 		.4byte	0xc1
 723 00c1 05       		.uleb128 0x5
 724 00c2 83000000 		.4byte	0x83
 725 00c6 02       		.uleb128 0x2
 726 00c7 08       		.byte	0x8
 727 00c8 04       		.byte	0x4
 728 00c9 48020000 		.4byte	.LASF17
 729 00cd 02       		.uleb128 0x2
 730 00ce 04       		.byte	0x4
 731 00cf 07       		.byte	0x7
 732 00d0 9C010000 		.4byte	.LASF18
 733 00d4 06       		.uleb128 0x6
 734 00d5 25000000 		.4byte	.LASF19
 735 00d9 01       		.byte	0x1
 736 00da 20       		.byte	0x20
 737 00db 00000000 		.4byte	.LFB0
 738 00df 34000000 		.4byte	.LFE0-.LFB0
 739 00e3 01       		.uleb128 0x1
 740 00e4 9C       		.byte	0x9c
 741 00e5 F8000000 		.4byte	0xf8
 742 00e9 07       		.uleb128 0x7
 743 00ea 6A000000 		.4byte	.LASF21
 744 00ee 01       		.byte	0x1
 745 00ef 22       		.byte	0x22
 746 00f0 6B000000 		.4byte	0x6b
 747 00f4 02       		.uleb128 0x2
 748 00f5 91       		.byte	0x91
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 21


 749 00f6 6F       		.sleb128 -17
 750 00f7 00       		.byte	0
 751 00f8 06       		.uleb128 0x6
 752 00f9 10020000 		.4byte	.LASF20
 753 00fd 01       		.byte	0x1
 754 00fe 3F       		.byte	0x3f
 755 00ff 00000000 		.4byte	.LFB1
 756 0103 8C000000 		.4byte	.LFE1-.LFB1
 757 0107 01       		.uleb128 0x1
 758 0108 9C       		.byte	0x9c
 759 0109 2A010000 		.4byte	0x12a
 760 010d 07       		.uleb128 0x7
 761 010e 6A000000 		.4byte	.LASF21
 762 0112 01       		.byte	0x1
 763 0113 41       		.byte	0x41
 764 0114 6B000000 		.4byte	0x6b
 765 0118 02       		.uleb128 0x2
 766 0119 91       		.byte	0x91
 767 011a 6F       		.sleb128 -17
 768 011b 07       		.uleb128 0x7
 769 011c B8010000 		.4byte	.LASF22
 770 0120 01       		.byte	0x1
 771 0121 43       		.byte	0x43
 772 0122 C1000000 		.4byte	0xc1
 773 0126 02       		.uleb128 0x2
 774 0127 91       		.byte	0x91
 775 0128 68       		.sleb128 -24
 776 0129 00       		.byte	0
 777 012a 06       		.uleb128 0x6
 778 012b 45000000 		.4byte	.LASF23
 779 012f 01       		.byte	0x1
 780 0130 8A       		.byte	0x8a
 781 0131 00000000 		.4byte	.LFB2
 782 0135 6C000000 		.4byte	.LFE2-.LFB2
 783 0139 01       		.uleb128 0x1
 784 013a 9C       		.byte	0x9c
 785 013b 4E010000 		.4byte	0x14e
 786 013f 07       		.uleb128 0x7
 787 0140 6A000000 		.4byte	.LASF21
 788 0144 01       		.byte	0x1
 789 0145 8C       		.byte	0x8c
 790 0146 6B000000 		.4byte	0x6b
 791 014a 02       		.uleb128 0x2
 792 014b 91       		.byte	0x91
 793 014c 6F       		.sleb128 -17
 794 014d 00       		.byte	0
 795 014e 08       		.uleb128 0x8
 796 014f 1F010000 		.4byte	.LASF30
 797 0153 01       		.byte	0x1
 798 0154 C5       		.byte	0xc5
 799 0155 00000000 		.4byte	.LFB3
 800 0159 3C000000 		.4byte	.LFE3-.LFB3
 801 015d 01       		.uleb128 0x1
 802 015e 9C       		.byte	0x9c
 803 015f 06       		.uleb128 0x6
 804 0160 0C000000 		.4byte	.LASF24
 805 0164 01       		.byte	0x1
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 22


 806 0165 F2       		.byte	0xf2
 807 0166 00000000 		.4byte	.LFB4
 808 016a 50000000 		.4byte	.LFE4-.LFB4
 809 016e 01       		.uleb128 0x1
 810 016f 9C       		.byte	0x9c
 811 0170 91010000 		.4byte	0x191
 812 0174 09       		.uleb128 0x9
 813 0175 7D010000 		.4byte	.LASF31
 814 0179 01       		.byte	0x1
 815 017a F2       		.byte	0xf2
 816 017b 83000000 		.4byte	0x83
 817 017f 02       		.uleb128 0x2
 818 0180 91       		.byte	0x91
 819 0181 64       		.sleb128 -28
 820 0182 07       		.uleb128 0x7
 821 0183 6A000000 		.4byte	.LASF21
 822 0187 01       		.byte	0x1
 823 0188 F4       		.byte	0xf4
 824 0189 6B000000 		.4byte	0x6b
 825 018d 02       		.uleb128 0x2
 826 018e 91       		.byte	0x91
 827 018f 6F       		.sleb128 -17
 828 0190 00       		.byte	0
 829 0191 0A       		.uleb128 0xa
 830 0192 86010000 		.4byte	.LASF32
 831 0196 01       		.byte	0x1
 832 0197 0E01     		.2byte	0x10e
 833 0199 83000000 		.4byte	0x83
 834 019d 00000000 		.4byte	.LFB5
 835 01a1 40000000 		.4byte	.LFE5-.LFB5
 836 01a5 01       		.uleb128 0x1
 837 01a6 9C       		.byte	0x9c
 838 01a7 BB010000 		.4byte	0x1bb
 839 01ab 0B       		.uleb128 0xb
 840 01ac 76010000 		.4byte	.LASF25
 841 01b0 01       		.byte	0x1
 842 01b1 1001     		.2byte	0x110
 843 01b3 83000000 		.4byte	0x83
 844 01b7 02       		.uleb128 0x2
 845 01b8 91       		.byte	0x91
 846 01b9 74       		.sleb128 -12
 847 01ba 00       		.byte	0
 848 01bb 0C       		.uleb128 0xc
 849 01bc 60020000 		.4byte	.LASF26
 850 01c0 01       		.byte	0x1
 851 01c1 3801     		.2byte	0x138
 852 01c3 00000000 		.4byte	.LFB6
 853 01c7 5C000000 		.4byte	.LFE6-.LFB6
 854 01cb 01       		.uleb128 0x1
 855 01cc 9C       		.byte	0x9c
 856 01cd E1010000 		.4byte	0x1e1
 857 01d1 0B       		.uleb128 0xb
 858 01d2 6A000000 		.4byte	.LASF21
 859 01d6 01       		.byte	0x1
 860 01d7 3A01     		.2byte	0x13a
 861 01d9 6B000000 		.4byte	0x6b
 862 01dd 02       		.uleb128 0x2
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 23


 863 01de 91       		.byte	0x91
 864 01df 6F       		.sleb128 -17
 865 01e0 00       		.byte	0
 866 01e1 0D       		.uleb128 0xd
 867 01e2 32010000 		.4byte	.LASF33
 868 01e6 01       		.byte	0x1
 869 01e7 6801     		.2byte	0x168
 870 01e9 00000000 		.4byte	.LFB7
 871 01ed 50000000 		.4byte	.LFE7-.LFB7
 872 01f1 01       		.uleb128 0x1
 873 01f2 9C       		.byte	0x9c
 874 01f3 0B       		.uleb128 0xb
 875 01f4 6A000000 		.4byte	.LASF21
 876 01f8 01       		.byte	0x1
 877 01f9 6A01     		.2byte	0x16a
 878 01fb 6B000000 		.4byte	0x6b
 879 01ff 02       		.uleb128 0x2
 880 0200 91       		.byte	0x91
 881 0201 6F       		.sleb128 -17
 882 0202 00       		.byte	0
 883 0203 00       		.byte	0
 884              		.section	.debug_abbrev,"",%progbits
 885              	.Ldebug_abbrev0:
 886 0000 01       		.uleb128 0x1
 887 0001 11       		.uleb128 0x11
 888 0002 01       		.byte	0x1
 889 0003 25       		.uleb128 0x25
 890 0004 0E       		.uleb128 0xe
 891 0005 13       		.uleb128 0x13
 892 0006 0B       		.uleb128 0xb
 893 0007 03       		.uleb128 0x3
 894 0008 0E       		.uleb128 0xe
 895 0009 1B       		.uleb128 0x1b
 896 000a 0E       		.uleb128 0xe
 897 000b 55       		.uleb128 0x55
 898 000c 17       		.uleb128 0x17
 899 000d 11       		.uleb128 0x11
 900 000e 01       		.uleb128 0x1
 901 000f 10       		.uleb128 0x10
 902 0010 17       		.uleb128 0x17
 903 0011 00       		.byte	0
 904 0012 00       		.byte	0
 905 0013 02       		.uleb128 0x2
 906 0014 24       		.uleb128 0x24
 907 0015 00       		.byte	0
 908 0016 0B       		.uleb128 0xb
 909 0017 0B       		.uleb128 0xb
 910 0018 3E       		.uleb128 0x3e
 911 0019 0B       		.uleb128 0xb
 912 001a 03       		.uleb128 0x3
 913 001b 0E       		.uleb128 0xe
 914 001c 00       		.byte	0
 915 001d 00       		.byte	0
 916 001e 03       		.uleb128 0x3
 917 001f 24       		.uleb128 0x24
 918 0020 00       		.byte	0
 919 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 24


 920 0022 0B       		.uleb128 0xb
 921 0023 3E       		.uleb128 0x3e
 922 0024 0B       		.uleb128 0xb
 923 0025 03       		.uleb128 0x3
 924 0026 08       		.uleb128 0x8
 925 0027 00       		.byte	0
 926 0028 00       		.byte	0
 927 0029 04       		.uleb128 0x4
 928 002a 16       		.uleb128 0x16
 929 002b 00       		.byte	0
 930 002c 03       		.uleb128 0x3
 931 002d 0E       		.uleb128 0xe
 932 002e 3A       		.uleb128 0x3a
 933 002f 0B       		.uleb128 0xb
 934 0030 3B       		.uleb128 0x3b
 935 0031 05       		.uleb128 0x5
 936 0032 49       		.uleb128 0x49
 937 0033 13       		.uleb128 0x13
 938 0034 00       		.byte	0
 939 0035 00       		.byte	0
 940 0036 05       		.uleb128 0x5
 941 0037 35       		.uleb128 0x35
 942 0038 00       		.byte	0
 943 0039 49       		.uleb128 0x49
 944 003a 13       		.uleb128 0x13
 945 003b 00       		.byte	0
 946 003c 00       		.byte	0
 947 003d 06       		.uleb128 0x6
 948 003e 2E       		.uleb128 0x2e
 949 003f 01       		.byte	0x1
 950 0040 3F       		.uleb128 0x3f
 951 0041 19       		.uleb128 0x19
 952 0042 03       		.uleb128 0x3
 953 0043 0E       		.uleb128 0xe
 954 0044 3A       		.uleb128 0x3a
 955 0045 0B       		.uleb128 0xb
 956 0046 3B       		.uleb128 0x3b
 957 0047 0B       		.uleb128 0xb
 958 0048 27       		.uleb128 0x27
 959 0049 19       		.uleb128 0x19
 960 004a 11       		.uleb128 0x11
 961 004b 01       		.uleb128 0x1
 962 004c 12       		.uleb128 0x12
 963 004d 06       		.uleb128 0x6
 964 004e 40       		.uleb128 0x40
 965 004f 18       		.uleb128 0x18
 966 0050 9642     		.uleb128 0x2116
 967 0052 19       		.uleb128 0x19
 968 0053 01       		.uleb128 0x1
 969 0054 13       		.uleb128 0x13
 970 0055 00       		.byte	0
 971 0056 00       		.byte	0
 972 0057 07       		.uleb128 0x7
 973 0058 34       		.uleb128 0x34
 974 0059 00       		.byte	0
 975 005a 03       		.uleb128 0x3
 976 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 25


 977 005c 3A       		.uleb128 0x3a
 978 005d 0B       		.uleb128 0xb
 979 005e 3B       		.uleb128 0x3b
 980 005f 0B       		.uleb128 0xb
 981 0060 49       		.uleb128 0x49
 982 0061 13       		.uleb128 0x13
 983 0062 02       		.uleb128 0x2
 984 0063 18       		.uleb128 0x18
 985 0064 00       		.byte	0
 986 0065 00       		.byte	0
 987 0066 08       		.uleb128 0x8
 988 0067 2E       		.uleb128 0x2e
 989 0068 00       		.byte	0
 990 0069 3F       		.uleb128 0x3f
 991 006a 19       		.uleb128 0x19
 992 006b 03       		.uleb128 0x3
 993 006c 0E       		.uleb128 0xe
 994 006d 3A       		.uleb128 0x3a
 995 006e 0B       		.uleb128 0xb
 996 006f 3B       		.uleb128 0x3b
 997 0070 0B       		.uleb128 0xb
 998 0071 27       		.uleb128 0x27
 999 0072 19       		.uleb128 0x19
 1000 0073 11       		.uleb128 0x11
 1001 0074 01       		.uleb128 0x1
 1002 0075 12       		.uleb128 0x12
 1003 0076 06       		.uleb128 0x6
 1004 0077 40       		.uleb128 0x40
 1005 0078 18       		.uleb128 0x18
 1006 0079 9642     		.uleb128 0x2116
 1007 007b 19       		.uleb128 0x19
 1008 007c 00       		.byte	0
 1009 007d 00       		.byte	0
 1010 007e 09       		.uleb128 0x9
 1011 007f 05       		.uleb128 0x5
 1012 0080 00       		.byte	0
 1013 0081 03       		.uleb128 0x3
 1014 0082 0E       		.uleb128 0xe
 1015 0083 3A       		.uleb128 0x3a
 1016 0084 0B       		.uleb128 0xb
 1017 0085 3B       		.uleb128 0x3b
 1018 0086 0B       		.uleb128 0xb
 1019 0087 49       		.uleb128 0x49
 1020 0088 13       		.uleb128 0x13
 1021 0089 02       		.uleb128 0x2
 1022 008a 18       		.uleb128 0x18
 1023 008b 00       		.byte	0
 1024 008c 00       		.byte	0
 1025 008d 0A       		.uleb128 0xa
 1026 008e 2E       		.uleb128 0x2e
 1027 008f 01       		.byte	0x1
 1028 0090 3F       		.uleb128 0x3f
 1029 0091 19       		.uleb128 0x19
 1030 0092 03       		.uleb128 0x3
 1031 0093 0E       		.uleb128 0xe
 1032 0094 3A       		.uleb128 0x3a
 1033 0095 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 26


 1034 0096 3B       		.uleb128 0x3b
 1035 0097 05       		.uleb128 0x5
 1036 0098 27       		.uleb128 0x27
 1037 0099 19       		.uleb128 0x19
 1038 009a 49       		.uleb128 0x49
 1039 009b 13       		.uleb128 0x13
 1040 009c 11       		.uleb128 0x11
 1041 009d 01       		.uleb128 0x1
 1042 009e 12       		.uleb128 0x12
 1043 009f 06       		.uleb128 0x6
 1044 00a0 40       		.uleb128 0x40
 1045 00a1 18       		.uleb128 0x18
 1046 00a2 9742     		.uleb128 0x2117
 1047 00a4 19       		.uleb128 0x19
 1048 00a5 01       		.uleb128 0x1
 1049 00a6 13       		.uleb128 0x13
 1050 00a7 00       		.byte	0
 1051 00a8 00       		.byte	0
 1052 00a9 0B       		.uleb128 0xb
 1053 00aa 34       		.uleb128 0x34
 1054 00ab 00       		.byte	0
 1055 00ac 03       		.uleb128 0x3
 1056 00ad 0E       		.uleb128 0xe
 1057 00ae 3A       		.uleb128 0x3a
 1058 00af 0B       		.uleb128 0xb
 1059 00b0 3B       		.uleb128 0x3b
 1060 00b1 05       		.uleb128 0x5
 1061 00b2 49       		.uleb128 0x49
 1062 00b3 13       		.uleb128 0x13
 1063 00b4 02       		.uleb128 0x2
 1064 00b5 18       		.uleb128 0x18
 1065 00b6 00       		.byte	0
 1066 00b7 00       		.byte	0
 1067 00b8 0C       		.uleb128 0xc
 1068 00b9 2E       		.uleb128 0x2e
 1069 00ba 01       		.byte	0x1
 1070 00bb 3F       		.uleb128 0x3f
 1071 00bc 19       		.uleb128 0x19
 1072 00bd 03       		.uleb128 0x3
 1073 00be 0E       		.uleb128 0xe
 1074 00bf 3A       		.uleb128 0x3a
 1075 00c0 0B       		.uleb128 0xb
 1076 00c1 3B       		.uleb128 0x3b
 1077 00c2 05       		.uleb128 0x5
 1078 00c3 27       		.uleb128 0x27
 1079 00c4 19       		.uleb128 0x19
 1080 00c5 11       		.uleb128 0x11
 1081 00c6 01       		.uleb128 0x1
 1082 00c7 12       		.uleb128 0x12
 1083 00c8 06       		.uleb128 0x6
 1084 00c9 40       		.uleb128 0x40
 1085 00ca 18       		.uleb128 0x18
 1086 00cb 9642     		.uleb128 0x2116
 1087 00cd 19       		.uleb128 0x19
 1088 00ce 01       		.uleb128 0x1
 1089 00cf 13       		.uleb128 0x13
 1090 00d0 00       		.byte	0
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 27


 1091 00d1 00       		.byte	0
 1092 00d2 0D       		.uleb128 0xd
 1093 00d3 2E       		.uleb128 0x2e
 1094 00d4 01       		.byte	0x1
 1095 00d5 3F       		.uleb128 0x3f
 1096 00d6 19       		.uleb128 0x19
 1097 00d7 03       		.uleb128 0x3
 1098 00d8 0E       		.uleb128 0xe
 1099 00d9 3A       		.uleb128 0x3a
 1100 00da 0B       		.uleb128 0xb
 1101 00db 3B       		.uleb128 0x3b
 1102 00dc 05       		.uleb128 0x5
 1103 00dd 27       		.uleb128 0x27
 1104 00de 19       		.uleb128 0x19
 1105 00df 11       		.uleb128 0x11
 1106 00e0 01       		.uleb128 0x1
 1107 00e1 12       		.uleb128 0x12
 1108 00e2 06       		.uleb128 0x6
 1109 00e3 40       		.uleb128 0x40
 1110 00e4 18       		.uleb128 0x18
 1111 00e5 9642     		.uleb128 0x2116
 1112 00e7 19       		.uleb128 0x19
 1113 00e8 00       		.byte	0
 1114 00e9 00       		.byte	0
 1115 00ea 00       		.byte	0
 1116              		.section	.debug_aranges,"",%progbits
 1117 0000 54000000 		.4byte	0x54
 1118 0004 0200     		.2byte	0x2
 1119 0006 00000000 		.4byte	.Ldebug_info0
 1120 000a 04       		.byte	0x4
 1121 000b 00       		.byte	0
 1122 000c 0000     		.2byte	0
 1123 000e 0000     		.2byte	0
 1124 0010 00000000 		.4byte	.LFB0
 1125 0014 34000000 		.4byte	.LFE0-.LFB0
 1126 0018 00000000 		.4byte	.LFB1
 1127 001c 8C000000 		.4byte	.LFE1-.LFB1
 1128 0020 00000000 		.4byte	.LFB2
 1129 0024 6C000000 		.4byte	.LFE2-.LFB2
 1130 0028 00000000 		.4byte	.LFB3
 1131 002c 3C000000 		.4byte	.LFE3-.LFB3
 1132 0030 00000000 		.4byte	.LFB4
 1133 0034 50000000 		.4byte	.LFE4-.LFB4
 1134 0038 00000000 		.4byte	.LFB5
 1135 003c 40000000 		.4byte	.LFE5-.LFB5
 1136 0040 00000000 		.4byte	.LFB6
 1137 0044 5C000000 		.4byte	.LFE6-.LFB6
 1138 0048 00000000 		.4byte	.LFB7
 1139 004c 50000000 		.4byte	.LFE7-.LFB7
 1140 0050 00000000 		.4byte	0
 1141 0054 00000000 		.4byte	0
 1142              		.section	.debug_ranges,"",%progbits
 1143              	.Ldebug_ranges0:
 1144 0000 00000000 		.4byte	.LFB0
 1145 0004 34000000 		.4byte	.LFE0
 1146 0008 00000000 		.4byte	.LFB1
 1147 000c 8C000000 		.4byte	.LFE1
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 28


 1148 0010 00000000 		.4byte	.LFB2
 1149 0014 6C000000 		.4byte	.LFE2
 1150 0018 00000000 		.4byte	.LFB3
 1151 001c 3C000000 		.4byte	.LFE3
 1152 0020 00000000 		.4byte	.LFB4
 1153 0024 50000000 		.4byte	.LFE4
 1154 0028 00000000 		.4byte	.LFB5
 1155 002c 40000000 		.4byte	.LFE5
 1156 0030 00000000 		.4byte	.LFB6
 1157 0034 5C000000 		.4byte	.LFE6
 1158 0038 00000000 		.4byte	.LFB7
 1159 003c 50000000 		.4byte	.LFE7
 1160 0040 00000000 		.4byte	0
 1161 0044 00000000 		.4byte	0
 1162              		.section	.debug_line,"",%progbits
 1163              	.Ldebug_line0:
 1164 0000 1F010000 		.section	.debug_str,"MS",%progbits,1
 1164      02004100 
 1164      00000201 
 1164      FB0E0D00 
 1164      01010101 
 1165              	.LASF15:
 1166 0000 72656731 		.ascii	"reg16\000"
 1166      3600
 1167              	.LASF16:
 1168 0006 72656733 		.ascii	"reg32\000"
 1168      3200
 1169              	.LASF24:
 1170 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1170      73506D53 
 1170      65745761 
 1170      6B657570 
 1170      506F6C61 
 1171              	.LASF19:
 1172 0025 43795379 		.ascii	"CySysPmSleep\000"
 1172      73506D53 
 1172      6C656570 
 1172      00
 1173              	.LASF3:
 1174 0032 73686F72 		.ascii	"short unsigned int\000"
 1174      7420756E 
 1174      7369676E 
 1174      65642069 
 1174      6E7400
 1175              	.LASF23:
 1176 0045 43795379 		.ascii	"CySysPmHibernate\000"
 1176      73506D48 
 1176      69626572 
 1176      6E617465 
 1176      00
 1177              	.LASF12:
 1178 0056 666C6F61 		.ascii	"float\000"
 1178      7400
 1179              	.LASF1:
 1180 005c 756E7369 		.ascii	"unsigned char\000"
 1180      676E6564 
 1180      20636861 
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 29


 1180      7200
 1181              	.LASF21:
 1182 006a 696E7465 		.ascii	"interruptState\000"
 1182      72727570 
 1182      74537461 
 1182      746500
 1183              	.LASF5:
 1184 0079 6C6F6E67 		.ascii	"long unsigned int\000"
 1184      20756E73 
 1184      69676E65 
 1184      6420696E 
 1184      7400
 1185              	.LASF9:
 1186 008b 75696E74 		.ascii	"uint8\000"
 1186      3800
 1187              	.LASF27:
 1188 0091 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1188      43313120 
 1188      352E342E 
 1188      31203230 
 1188      31363036 
 1189 00c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1189      20726576 
 1189      6973696F 
 1189      6E203233 
 1189      37373135 
 1190 00f7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1190      66756E63 
 1190      74696F6E 
 1190      2D736563 
 1190      74696F6E 
 1191              	.LASF30:
 1192 011f 43795379 		.ascii	"CySysPmStop\000"
 1192      73506D53 
 1192      746F7000 
 1193              	.LASF13:
 1194 012b 646F7562 		.ascii	"double\000"
 1194      6C6500
 1195              	.LASF33:
 1196 0132 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1196      73506D55 
 1196      6E667265 
 1196      657A6549 
 1196      6F00
 1197              	.LASF10:
 1198 0144 75696E74 		.ascii	"uint16\000"
 1198      313600
 1199              	.LASF11:
 1200 014b 75696E74 		.ascii	"uint32\000"
 1200      333200
 1201              	.LASF8:
 1202 0152 756E7369 		.ascii	"unsigned int\000"
 1202      676E6564 
 1202      20696E74 
 1202      00
 1203              	.LASF7:
 1204 015f 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 30


 1204      206C6F6E 
 1204      6720756E 
 1204      7369676E 
 1204      65642069 
 1205              	.LASF25:
 1206 0176 72656173 		.ascii	"reason\000"
 1206      6F6E00
 1207              	.LASF31:
 1208 017d 706F6C61 		.ascii	"polarity\000"
 1208      72697479 
 1208      00
 1209              	.LASF32:
 1210 0186 43795379 		.ascii	"CySysPmGetResetReason\000"
 1210      73506D47 
 1210      65745265 
 1210      73657452 
 1210      6561736F 
 1211              	.LASF18:
 1212 019c 73697A65 		.ascii	"sizetype\000"
 1212      74797065 
 1212      00
 1213              	.LASF6:
 1214 01a5 6C6F6E67 		.ascii	"long long int\000"
 1214      206C6F6E 
 1214      6720696E 
 1214      7400
 1215              	.LASF14:
 1216 01b3 63686172 		.ascii	"char\000"
 1216      00
 1217              	.LASF22:
 1218 01b8 636C6B53 		.ascii	"clkSelectReg\000"
 1218      656C6563 
 1218      74526567 
 1218      00
 1219              	.LASF2:
 1220 01c5 73686F72 		.ascii	"short int\000"
 1220      7420696E 
 1220      7400
 1221              	.LASF29:
 1222 01cf 433A5C55 		.ascii	"C:\\Users\\Rafael\\Documents\\PSoC Creator\\SD Card"
 1222      73657273 
 1222      5C526166 
 1222      61656C5C 
 1222      446F6375 
 1223 01fd 5C534443 		.ascii	"\\SDCard_Demo.cydsn\000"
 1223      6172645F 
 1223      44656D6F 
 1223      2E637964 
 1223      736E00
 1224              	.LASF20:
 1225 0210 43795379 		.ascii	"CySysPmDeepSleep\000"
 1225      73506D44 
 1225      65657053 
 1225      6C656570 
 1225      00
 1226              	.LASF4:
 1227 0221 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Rafael\AppData\Local\Temp\ccPvEfIZ.s 			page 31


 1227      20696E74 
 1227      00
 1228              	.LASF28:
 1229 022a 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 1229      72617465 
 1229      645F536F 
 1229      75726365 
 1229      5C50536F 
 1230              	.LASF17:
 1231 0248 6C6F6E67 		.ascii	"long double\000"
 1231      20646F75 
 1231      626C6500 
 1232              	.LASF0:
 1233 0254 7369676E 		.ascii	"signed char\000"
 1233      65642063 
 1233      68617200 
 1234              	.LASF26:
 1235 0260 43795379 		.ascii	"CySysPmFreezeIo\000"
 1235      73506D46 
 1235      7265657A 
 1235      65496F00 
 1236              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
